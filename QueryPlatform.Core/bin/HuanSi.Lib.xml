<?xml version="1.0"?>
<doc>
    <assembly>
        <name>HuanSi.Lib</name>
    </assembly>
    <members>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._61f3c11e7954e5ee2f817aea4b0b94c5(System.Int32)">
            <summary>
            查询单据号公式信息
            </summary>
            <param name="_iFormulaId">单号公式ID</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator.m_CalcSaveNewBillNoSql(System.Int32,System.String,System.String,System.String)">
            <summary>
            保存新单据号到数据表
            </summary>
            <param name="_iFormulaId">单号公式ID</param>
            <param name="_sTableName">表名</param>
            <param name="_sBillNoField">单据号字段名</param>
            <param name="_entity">当前行实体</param>
            <param name="_sqlParams">sql参数</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator.m_CalcDropBillNoSql(System.Int32,System.String)">
            <summary>
            生成回滚单据号sql
            </summary>
            <param name="_iFormulaId">单号公式ID</param>
            <returns>SQL</returns>
        </member>
        <member name="P:HuanSi.Lib.Bill.HSBillNoGenerator.m_formulas">
            <summary>
            保存设置参数值的Sql语句缓存,但是缓存的SQL不包含对存储过程的调用
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._fcf6d567ee8c3a4061d41cac888a7bb9(System.Int32,System.Boolean,System.Int32,System.Int32,System.String[])">
            <summary>
            返回生成单据的存储过程SQL
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._34e19ee77baaf043e5d17a4573ac9fb9(System.Int32)">
            <summary>
            查询公式计算SQL，处理后返回
            </summary>
            <param name="iFormulaId"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._69e8138b8adc303a9014398ab285299e(System.String)">
            <summary>
            传入计算参数的SQL
            </summary>
            <param name="sql"></param>
            <returns>返回正确SQL,并设置值到@sParamValue</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._a46cc97f85f3da87489e37de26e0bdd9(System.String)">
            <summary>
            查找类似:参数1和@参数1并记录1,2,3,4
            </summary>
            <param name="sql"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillNoGenerator._2e90eebc5d34c570310d4d14ec0ce63c(System.Int32,System.String,System.Int32,System.String[])">
            <summary>
            返回执行回滚的存储过程SQL
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil._7e6153b7c809031dcfd08a7277067425(System.Collections.Generic.List{HuanSi.Lib.Bill.HSBillRightUtil.HSBillQueryRightInfo})">
            <summary>
            删除 不存在的单据类型及不需要单据权限的单据类型
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil.m_ImportBillRightInfo(System.Data.DataTable,System.Data.DataTable,HuanSi.Lib.Bill.HSBillOperateRight,System.Int32)">
            <summary>
            导入单据权限信息
            </summary>
            <param name="_pbBillType">单据类型信息</param>
            <param name="_pbBillDataRight">单据数据权限</param>
            <param name="_iBillOperateRight">当前用户的单据操作权限</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil._cb429c160e2050a9afbe4223afbeaa78(System.Int32,System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            查询单据查询权限
            </summary>
            <param name="m_iUserId">用户ID</param>
            <param name="bills">单据类型ID</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil._949063f8ff16456f8fd5d70d309c1974(System.String,System.Int32,System.Collections.Generic.IEnumerable{HuanSi.Lib.Bill.HSBillRightUtil.HSBillQueryRightInfo},HuanSi.Lib.DB.HSEntitySet)">
            <summary>
            根据单据查询权限，改写原有sql语句
            </summary>
            <param name="m_sSqlText">sql文本</param>
            <param name="session"></param>
            <param name="bills">单据查询配置列表</param>
            <param name="billQueryRights">单据查询权限实体集</param>
            <returns>修改后的sql文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil.m_CalcEntityBillDataRight(HuanSi.Lib.DB.IHSEntity,HuanSi.Lib.Bill.HSBillRightInfo)">
            <summary>
            计算实体单据数据权限值
            </summary>
            <param name="aEntity">实体对象</param>
            <param name="billRights">单据权限数据集</param>
            <returns>合并的单据数据权限值</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillRightUtil._5ab01ee98cd584a6cdefb3df6aadd34d(System.String,HuanSi.Lib.Bill.HSBillRightInfo,HuanSi.Lib.Bill.HSBillDataRight,HuanSi.Lib.DB.IHSEntity)">
            <summary>
            计算当前这一行的数据，判断是否有指定权限
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Bill.HSBillUtil">
            <summary>
            单据模式功能类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._df3064ba84339e9fa478775c56386956(System.Int32)">
            <summary>
            查询单据类型相关配置信息
            </summary>
            <param name="_iBillTypeId">单据类型</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._3f4ca02f433cd148c35a3ceb0de85ea3(System.Object,HuanSi.Lib.Enums.HSArchiveEventType,System.String,System.Int32,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            调用主档的事件
            </summary>
            <param name="_iIden">主档ID</param>
            <param name="_eventType">事件类型</param>
            <param name="_sModifiedField">修改字段</param>
            <param name="_iUpdateStatus">修改类型(1=新增,2=修改,4=删除)</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._ae3050d50ae72b4cef616240f05380a9(System.Object,System.String,System.String,System.String,HuanSi.Lib.Enums.HSArchiveUpdateOperateType,System.String,System.String,System.String,System.String)">
            <summary>
            主档数据修改日志
            </summary>
            <param name="_iIden">主档ID</param>
            <param name="_sTableName">表名</param>
            <param name="_sKeyFieldValue">主键值</param>
            <param name="_sFieldName">字段名</param>
            <param name="_sOperate">操作</param>
            <param name="_sOldValue">旧值</param>
            <param name="_sNewValue">新值</param>
            <param name="_sContent">说明文本</param>
            <param name="_sHostName">主机名</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._b780ec32ca5ccbea5eabf2d87201587e(HuanSi.Lib.DB.HSEntity,System.String)">
            <summary>
            计算实体在指定字段范围内的修改字段(范围为空，则为实体本身的所有修改字段)
            </summary>
            <param name="_entity">实体</param>
            <param name="_sFieldList">指定字段范围</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_BeforeSaveBill">
            <summary>
            单据保存前(仅处理修改、删除行)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._13f7144a444882e014818f8316995cbf(System.String)">
            <summary>
            单据全局保存前
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_InvalidBill(System.Object,System.String)">
            <summary>
            作废单据
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_sBillNo">单据编号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_ValidBill(System.Object,System.String)">
            <summary>
            恢复单据（作废-->草稿）
            </summary>
            <param name="_iBillId">单据Id</param>
            <param name="_sBillNo">单据编号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_ValidateBillHint(System.Object,System.String)">
            <summary>
            校验单据数据，并提示错误信息给用户，询问是否继续送审
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_sBillNo">单据编号</param>
            <returns>返回true，表示可以继续送审</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_ValidateArchiveHint(System.Object)">
            <summary>
            数据校验提示（主档）
            </summary>
            <param name="_iIden">主档ID</param>
            <returns>返回错误信息，无错误，返回string.Empty</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_ValidateArchiveHint(System.Object,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            数据校验提示（主档）
            </summary>
            <param name="_iIden">主档ID</param>
            <param name="_newDBManager">新的dbmanager，异步执行时传入</param>
            <returns>返回错误信息，无错误，返回string.Empty</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_SendToAuditArchive(System.Object,System.String)">
            <summary>
            主档提交、送审(编辑完成)
            </summary>
            <param name="_iIden">主档ID</param>
            <param name="_sTableName">主档映射表名</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_SendToAuditArchive(System.Object,System.String,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            主档提交、送审(编辑完成)
            </summary>
            <param name="_iIden">主档ID</param>
            <param name="_sTableName">主档映射表名</param>
            <param name="_newDBManager">_newDBManager</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_UpdateLocalBillStatus(HuanSi.Lib.DB.HSBaseEntitySet,HuanSi.Lib.Enums.HSBillOperateType)">
            <summary>
            更新本地实体集的单据状态字段
            </summary>
            <param name="_aEntitySet">本地实体集</param>
            <param name="_billOperateType">单据操作类型</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_SaveBillRefBill(System.Object,System.String,System.Int32,System.Boolean)">
            <summary>
            保存单据引用关系(单据本身保存后调用)
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_sBillNo">单据编号</param>
            <param name="_iGroup">引用分组ID</param>
            <param name="_bExecCache">是否使用外部缓存器</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._79754f8db2700029eeedfaeadbfe8a56(System.Object,System.Boolean)">
            <summary>
            删除单据引用
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_bExecCache">是否使用外部缓存</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_IsBillRefedBy(System.Object,System.Object)">
            <summary>
            指定单据是否被引用（所有引用）
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_iBillDtlId">单据明细ID，若有，则判断此明细ID是否被引用</param>
            <returns>被引用，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_IsBillRefedByEx(System.Object,System.Object,System.Int32)">
            <summary>
            指定单据是否被指定单据类型引用（如判断某一采购订单，是否被采购到货单引用）
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_iBillDtlId">单据明细ID，若有，则判断此明细ID是否被引用</param>
            <param name="_iRefBillTypeId">指定引用的单据类型</param>
            <returns>被引用，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_IsBillRefedByOther(System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            指定单据是否被指定单据类型以外的其它单据引用
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_iBillDtlId">单据明细ID，若有，则判断此明细ID是否被引用</param>
            <param name="_iRefBillTypeId">指定引用的单据类型</param>
            <param name="_iBillRefGroup">分组ID，仅查询指定组内的单据类型</param>
            <returns>被引用，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_ValidateBillRefedBy(System.Object,System.String)">
            <summary>
            校验单据是否被引用,若有引用，抛出异常报错
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_sMessage">若有引用，出错信息</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._318a7c2c85d7b80b0335d8254186a3ea(HuanSi.Lib.DB.HSEntity)">
            <summary>
            单行主档保存前(仅处理修改行)
            </summary>
            <param name="_curr">当前行实体</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_BeforeSaveArchive">
            <summary>
            主档保存前(仅处理修改、删除数据)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._d9f1e6238ac6d71c65090e9954db2b7e(System.String)">
            <summary>
            主档全局保存前
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_AfterSaveBill">
            <summary>
            单据保存后(仅针对新增、修改数据)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._21592dfc3e259aa90d29a0532a58d40e(HuanSi.Lib.DB.HSEntity)">
            <summary>
            单个单据的保存后
            </summary>
            <param name="_curr">单据头实体</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil._03006d7a38825bde75d00040bea24de2">
            <summary>
            全局保存后
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_CalcBillTimeStamp(System.Int32,System.String)">
            <summary>
            计算单据整单时间戳(适用于单据明细数据变化时，修改表头的时间戳)
            </summary>
            <param name="_iBillId">单据ID</param>
            <param name="_sBillNo">单据号</param>
        </member>
        <member name="P:HuanSi.Lib.Bill.HSBillUtil.m_bBatchSave">
            <summary>
            是否批量保存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.HSBillUtil.m_GlobalBatchSave(System.String,System.Int64,System.Boolean)">
            <summary>
            批量保存实体集数据
            </summary>
            <param name="_sXML">修改数据XML</param>
            <param name="_iFormId">插件ID</param>
            <param name="_bChangeBill">是否变更当前单据ID</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillNoGenerator.m_NewBillNo(System.Int32,HuanSi.Lib.DB.IHSEntityParam,System.Boolean,System.Int32,System.Int32)">
            <summary>
            生成新单据号
            </summary>
            <param name="_09c8f528e33030405edc1168886be8da">单号公式ID</param>
            <param name="_d23e4bc33bec6b56b2245db5f85b6764">sql参数</param>
            <param name="_274527122bfa9903d866ad5e6dd6c98d">是否保存</param>
            <param name="_d18feaa74c7615950a3d8993210a4082">生成个数</param>
            <param name="_4c9a4cdac9ed8292897fc26606a231be">起始流水号</param>
            <returns>单据号</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillNoGenerator.m_CalcSaveNewBillNoSql(System.Int32,System.String,System.String,System.String)">
            <summary>
            生成表保存时真正生成单据号的sql
            </summary>
            <param name="_09c8f528e33030405edc1168886be8da">单号公式ID</param>
            <param name="_18f8dd735a78d5b1ccf6e852e2a9f352">表名</param>
            <param name="_76320db9a094283753664f80b0563723">单号字段</param>
            <param name="_048245768da6fb57e71ac60cc39730d1">表主键</param>
            <returns>SqlText</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillNoGenerator.m_CalcDropBillNoSql(System.Int32,System.String)">
            <summary>
            生成单据号回滚SQL
            </summary>
            <param name="_09c8f528e33030405edc1168886be8da">单号公式ID</param>
            <param name="_76320db9a094283753664f80b0563723">当前删除的单据号</param>
            <returns>SqlText</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillNoGenerator.m_NewBillNo(System.Int32,System.Boolean,System.Int32,System.Int32,HuanSi.Lib.DB.IHSEntity)">
            <summary>
            生成新单据号
            </summary>
            <param name="_fcb9a6a0977cf3e79c220e39b379099c">单据号公式ID</param>
            <param name="_9c9582ec647a299331a9bed33ceb501a">是否立即保存</param>
            <param name="_5d2c724bcb31f5081e9f6238fa4b165d">递增流水数量</param>
            <param name="_4ba2c92204ebf6e9b7596cdeaeb8ae33">起始流水数量</param>
            <param name="_e8150f4572f1f756e895594fd9450bf0">提供参数的实体</param>
            <returns>新单据号</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillNoGenerator.m_NewBillNo(System.Int32,System.Boolean,System.Int32,System.Int32,System.String[])">
            <summary>
            生成新单据号
            </summary>
            <param name="_fcb9a6a0977cf3e79c220e39b379099c">单据号公式ID</param>
            <param name="_9c9582ec647a299331a9bed33ceb501a">是否立即保存</param>
            <param name="_5d2c724bcb31f5081e9f6238fa4b165d">递增流水数量</param>
            <param name="_4ba2c92204ebf6e9b7596cdeaeb8ae33">起始流水数量</param>
            <param name="_566aceebb06647ff4ca1c3a7b6ea0cfe">参数</param>
            <returns>新单据号</returns>
        </member>
        <member name="T:HuanSi.Lib.Bill.IHSBillUtil">
            <summary>
            单据模式功能类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_Validate(System.Object,System.String)">
            <summary>
            校验数据
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_SendToAudit(System.Object,System.String)">
            <summary>
            单据送审
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_UnSendToAudit(System.Object,System.String)">
            <summary>
            单据取消审核
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_AuditBill(System.Object,System.String)">
            <summary>
            审核单据
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_UnAuditBill(System.Object,System.String)">
            <summary>
            取消审核单据
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_RejectBill(System.Object,System.String,System.String)">
            <summary>
            驳回单据(审批流程中退回)
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_BeforeSaveBill">
            <summary>
            单据草稿单保存前
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_AfterSaveBill">
            <summary>
            单据草稿单保存后
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_InvalidBill(System.Object,System.String)">
            <summary>
            作废单据(草稿-->取消)
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_ValidBill(System.Object,System.String)">
            <summary>
            恢复单据(取消-->草稿)
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_ValidateBillHint(System.Object,System.String)">
            <summary>
            数据校验提示（单据）
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID/主档ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <returns>未检测到错误信息,返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_ValidateArchiveHint(System.Object)">
            <summary>
            数据校验提示（主档）
            </summary>
            <param name="_28e0cba9f711623fdc52290661ef02b4">主档ID</param>
            <returns>返回错误信息，无错误，返回string.Empty</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_ValidateArchiveHint(System.Object,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            数据校验提示（主档）
            </summary>
            <param name="_28e0cba9f711623fdc52290661ef02b4">主档ID</param>
            <param name="_be5127ee2c9d02956284e16375cb6f9a">新的dbmanager，异步执行时传入</param>
            <returns>返回错误信息，无错误，返回string.Empty</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_SendToAuditArchive(System.Object,System.String)">
            <summary>
            主档提交(送审)
            </summary>
            <param name="_28e0cba9f711623fdc52290661ef02b4">主档ID</param>
            <param name="_7bb31246dba530ffdaa81e8bdd5c03fe">主档表名</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_SendToAuditArchive(System.Object,System.String,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            主档提交(送审)
            </summary>
            <param name="_28e0cba9f711623fdc52290661ef02b4">主档ID</param>
            <param name="_7bb31246dba530ffdaa81e8bdd5c03fe">主档表名</param>
            <param name="_be5127ee2c9d02956284e16375cb6f9a">新的dbmanager，异步执行时传入</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_UpdateLocalBillStatus(HuanSi.Lib.DB.HSBaseEntitySet,HuanSi.Lib.Enums.HSBillOperateType)">
            <summary>
            更新本地实体集的单据状态
            </summary>
            <param name="_a7590a2a8626b26f46b3c06e8552a393">本地实体集</param>
            <param name="_69c65ede45d5bfe890751e5be9b47a2d">单据操作类型</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_SaveBillRefBill(System.Object,System.String,System.Int32,System.Boolean)">
            <summary>
            保存单据引用关系
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_43c4eb464d4315fdf1fd6857b327dff9">引用分组ID，默认=0</param>
            <param name="_8716b78a906d119a16cc7dc6da381c4d">是否用缓存器执行</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_IsBillRefedBy(System.Object,System.Object)">
            <summary>
            判断单据是否被引用
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_6a60725c95d993d350f97e11d3e16878">单据明细ID，=0则表示查找单据是否被引用,>0则表示这条明细是否被引用</param>
            <returns>被引用，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_IsBillRefedByEx(System.Object,System.Object,System.Int32)">
            <summary>
            判断单据是否被指定单据类型iRefBillTypeId的单据引用
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_6a60725c95d993d350f97e11d3e16878">单据明细ID，=0则表示查找单据是否被引用,>0则表示这条明细是否被引用</param>
            <param name="_661796ff35e137757ce29e26ef674983">指定单据类型</param>
            <returns>被引用，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_IsBillRefedByOther(System.Object,System.Object,System.Int32,System.Int32)">
            <summary>
            判断单据是否被指定单据类型以外的单据引用
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="_6a60725c95d993d350f97e11d3e16878">单据明细ID，=0则表示查找单据是否被引用,>0则表示这条明细是否被引用</param>
            <returns>被引用，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_ValidateBillRefedBy(System.Object,System.String)">
            <summary>
            校验单据是否被引用
            </summary>
            <param name="_ef5593756a1d4dc9bf5629cb4d94124b">单据ID</param>
            <param name="sMessage">被引用时报错的消息</param>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_BeforeSaveArchive">
            <summary>
            主档保存前
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_AfterSaveArchive">
            <summary>
            主档保存后
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iAuditType">
            <summary>
            当前单据类型定义的单据审核方式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iAuditTypeCurrent">
            <summary>
            当前行单据的单据审核方式(自定义方式下的动态计算)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iArchiveEventType">
            <summary>
            当前单据类型定义的所有事件
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_bArchive">
            <summary>
            是否主档
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_mainEntitySet">
            <summary>
            链接的单据头表实体
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_dtlEntitySet">
            <summary>
            链接的单据明细表实体
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iBillTypeId">
            <summary>
            单据类型ID
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iBillTableId">
            <summary>
            单据头表TableID(默认＝0，适用于一张单据多个头表的情况)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iBillDtlTableId">
            <summary>
            单据明细表TableID(默认＝0，适用于一张单据多个明细表的情况)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_iFormMenuId">
            <summary>
            Form菜单ID(每个Form唯一标识)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_bSingleRowSave">
            <summary>
            是否单行保存（仅适用于主档）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_bLogBillRefBill">
            <summary>
            是否登记到通用单据引用表
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Bill.IHSBillUtil.m_bBatchSave">
            <summary>
            是否批量保存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Bill.IHSBillUtil.m_GlobalBatchSave(System.String,System.Int64,System.Boolean)">
            <summary>
            批量保存实体集数据
            </summary>
            <param name="_5b5f65d5816477bffdced0a730338c74">修改数据XML</param>
            <param name="_a064a00a755baafd7581ff83e9660323">插件ID</param>
            <param name="_f4dfc8d660e38a3a73a1df9c15bb0880">是否变更当前单据ID</param>
        </member>
        <member name="M:HuanSi.Lib.Collections.HSDictionary`2.getFieldValue``1(`0)">
            <summary>
            该方法仅对TValue为object时有效果,具体类型的泛型集合请使用索引器
            </summary>
            <typeparam name="T">返回值的类型</typeparam>
            <param name="_1e0fb1b12060efd82ceec9baf5d2b7d8">键</param>
            <returns></returns>
        </member>
        <member name="P:HuanSi.Lib.CommandLine.HSCommandLineBase.m_bRequestHelpCommand">
            <summary>
            是否请求帮助命令
            </summary>
        </member>
        <member name="F:HuanSi.Lib.CommandLine.HSCommandLineBase.m_allowForwardSlash">
            <summary>
            命令分隔符 /
            </summary>
        </member>
        <member name="F:HuanSi.Lib.CommandLine.HSCommandLineBase._5ef1bb54551bffabb51dcddf17557ec0">
            <summary>
            //第一个参数是可执行文件名,所以跳过
            </summary>
        </member>
        <member name="M:HuanSi.Lib.CommandLine.HSCommandLineBase.m_GetCommandLineArgs">
            <summary>
            启动命令行，与Environment.GetCommandLineArgs()比较，不包含启动文件，与Main(string args)里的args相同
            </summary>
            <returns></returns>
        </member>
        <member name="P:HuanSi.Lib.CommandLine.HSDescriptionAttribute.m_sShortName">
            <summary>
            短名称
            </summary>
        </member>
        <member name="P:HuanSi.Lib.CommandLine.HSDescriptionAttribute.m_sDescription">
            <summary>
            描述
            </summary>
        </member>
        <member name="P:HuanSi.Lib.CommandLine.HSDescriptionAttribute.bHelpCommand">
            <summary>
            是否为帮助命令，比如help
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEntityBinding">
            <summary>
            用于支持对没有属性的字段进行绑定，不支持撤回(实际上对象的属性也是不能撤回的)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntityBinding.bTypeByPrefix">
            <summary>
            根据字段(属性)前缀判断类型,默认为true
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityBinding._0022d540d360e00130b6c05a4ebb4fca(System.Attribute[])">
            <summary>
            自定义属性集合
            </summary>
            <returns></returns>
        </member>
        <member name="F:HuanSi.Lib.DB.Cache.HSCacheBase._a3e1b59c402e40deb54b57e7dc43a483">
            <summary>
            添加缓存出错时，是否立即清除所有缓存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Cache.HSCacheBase.m_PreProcessParam(System.Object[])">
            <summary>
            预处理参数，若是枚举类型，要自动转成Int值
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Cache.HSExecuteCache">
            <summary>
            执行缓存器
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Cache.IHSCacheBase.m_bClearWithError">
            <summary>
            添加缓存出错时，是否立即清除所有缓存
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Cache.IHSExecuteCache">
            <summary>
            SQL执行缓存器
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Cache.HSQueryCache.m_bDisableAutoFlush">
            <summary>
            禁用自动提交缓存,这种情况下，都是手工调用Flush，比如缓存器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Cache.HSQueryCache.m_AutoFlush(HuanSi.Lib.DB.Cache.IHSQueryCahceItem)">
            <summary>
            自动提交
            </summary>
            <param name="aEntitySet"></param>
        </member>
        <member name="T:HuanSi.Lib.DB.Cache.IHSCacheManager">
            <summary>
            缓存管理器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Cache.IHSQueryCache">
            <summary>
            SQL查询缓存器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityParam.m_IsFieldExists(System.String[])">
            <summary>
            字段是否存在
            </summary>
            <param name="_94e10489db21b70194c526b6880896d1">字段名集合</param>
            <returns>存在则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityParam.m_getFieldValue``1(System.String,System.Boolean)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <param name="_6b1745311ccc0daae83104b0ee518432">是否取旧值</param>
            <returns>字段值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityParam.m_getFieldValue``1(System.String)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <returns>字段值</returns>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSDBManagerAsync">
            <summary>
            实现await与async
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_FillAsync(System.Data.DataTable,System.String,System.Object[])">
            <summary>
            查询数据，并填充到DataTable中
            </summary>
            <param name="_7a055d401de5e27099f3c77452965676">即将接受填充数据的DataTable</param>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">查询用SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">填充SQL中的参数值，按顺序填充，同名参数只需填充一次</param>
            <returns>DataTable的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_FillExAsync(System.Data.DataTable,System.String,System.Object)">
            <summary>
            查询数据，并填充到DataTable中
            </summary>
            <param name="_7a055d401de5e27099f3c77452965676">即将接受填充数据的DataTable</param>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">查询用SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">填充SQL中的参数值，按顺序填充，同名参数只需填充一次</param>
            <returns>DataTable的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteSqlInTransAsync(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteSqlAsync(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteSqlExAsync(System.String,System.Object,System.Boolean)">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <param name="_e249319708ab738f5dc3c83f344a6296">是否启动事务</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteReaderAsync(System.String,System.Object[])">
            <summary>
            执行一条指定的查询SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteReaderExAsync(System.String,System.Object)">
            <summary>
            执行一条指定的查询SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_QueryAsync(System.String,System.Int32,System.Int32,System.Boolean,System.Object[])">
            <summary>
            分页查询
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_7811bbb40b713402076517ee2b7e94f4">每页行数</param>
            <param name="_07bc5b9f998d67061eaeaaecb10d7028">要返回的页</param>
            <param name="_00b6316d102df12a7163e07750881ee1">是否仅查询分页数量(iReturnPage==1的时候才生效，总页数最多仅返回2页)</param>
            <param name="_be003c78de3a52d66205473100a65d68">sql参数</param>
            <returns>当前页数据DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_QueryExAsync(System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            查询
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_7811bbb40b713402076517ee2b7e94f4">每页行数</param>
            <param name="_07bc5b9f998d67061eaeaaecb10d7028">要返回的页</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>当前页数据DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_QueryBatchSqlAsync(System.String,System.Object[])">
            <summary>
            执行返回多个数据集的查询sql(默认不自动加事务)
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>DataTable数组</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_QueryBatchSqlExAsync(System.String,System.Object)">
            <summary>
            执行返回多个数据集的查询sql
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>DataTable数组</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_getValueBySqlAsync``1(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>返回唯一值数据</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_getEntityBySqlAsync(System.String,System.Object[])">
            <summary>
            获取一行多列，返回IEntity
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>IEntity对象</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_getValueBySqlExAsync``1(System.String,System.Object)">
            <summary>
            查询sql并返回单个值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>返回值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_IsExistsBySqlAsync(System.String,System.Object[])">
            <summary>
            判断指定条件的数据是否存在
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_IsExistsBySqlExAsync(System.String,System.Object)">
            <summary>
            判断指定条件的数据是否存在
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_QueryBySql_BatchAsync(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.Util.CacheSqlParam})">
            <summary>
            批量查询
            </summary>
            <param name="_b127da3980cc9e138448f53366faa92e">查询用的SQL对象集</param>
            <returns>数据包</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_ExecuteSql_BatchAsync(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.Util.CacheSqlParam},System.Boolean)">
            <summary>
            批量处理SQL
            </summary>
            <param name="_b127da3980cc9e138448f53366faa92e">执行用的SQL对象集</param>
            <param name="_e249319708ab738f5dc3c83f344a6296">是否启动事务</param>
            <returns>各个SQL执行影响行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_BeginTrans(System.String)">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <param name="_416e063b70c1880df7b56247a1f0b8ab">事务名称</param>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_CommitTrans(System.String)">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <param name="_416e063b70c1880df7b56247a1f0b8ab">要提交的事务名称</param>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_BeginTrans">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_CommitTrans">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManagerAsync.m_RollBackTrans">
            <summary>
            回滚事务，若有嵌套事务，全部回滚，事务计数清零。
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.HSForeignKeyUtil.m_DisableAllCheck(System.String)">
            <summary>
            禁用指定表的所有约束(不包括唯一约束)
            </summary>
            <param name="sTableName">表名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.HSForeignKeyUtil.m_EnableAllCheck(System.String)">
            <summary>
            恢复指定表的所有约束(不包括唯一约束)
            </summary>
            <param name="sTableName">表名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.HSForeignKeyUtil.m_DisableForeignKey(System.String,System.String)">
            <summary>
            禁用指定两表间的外键约束
            </summary>
            <param name="sForeignTable">外键表</param>
            <param name="sPrimaryTable">主键表</param>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.HSForeignKeyUtil.m_EnableForeignKey(System.String,System.String)">
            <summary>
            恢复指定两表间的外键约束
            </summary>
            <param name="sForeignTable">外键表</param>
            <param name="sPrimaryTable">主键表</param>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.HSForeignKeyUtil.m_ValidateForeignKey(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.HSEntity},System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.HSEntity},System.String,System.String)">
            <summary>
            验证两个实体类间的数据是否满足外键约束
            </summary>
            <param name="aEntitySet">外键表实体</param>
            <param name="aPrimaryTable">主键表实体</param>
            <param name="sForeignField">外键字段</param>
            <param name="sPrimaryField">主键字段</param>
        </member>
        <member name="T:HuanSi.Lib.DB.Util.IHSSqlLogList">
            <summary>
            日志列表 
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Util.IHSSqlLogList.m_SqlList">
            <summary>
            sql列表的列表
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.IHSSqlLogList.Add(System.String,System.Int64)">
            <summary>
            新增日志
            </summary>
            <param name="_58f7e1c000fb64a2dcb60e912be5e6a8">运行sql</param>
            <param name="_e4c14d8d3f39762a2f7b8dd07632b2a8">运行时长(毫秒)</param>
        </member>
        <member name="P:HuanSi.Lib.DB.Util.HSSqlLog.iOrder">
            <summary>
            运行序号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Util.HSSqlLog.sSql">
            <summary>
            运行SQL
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Util.HSSqlLog.tLogWriteTime">
            <summary>
            日志写入时间
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Util.HSSqlLog.iElapsedMilliseconds">
            <summary>
            运行的时长毫秒
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.IHSSystemVar.m_GetValue``1(System.String,System.String,``0)">
            <summary>
            获取系统变量值
            </summary>
            <typeparam name="T">系统变量值类型</typeparam>
            <param name="_45bf6e847315130374322352dcc91e84">系统变量组</param>
            <param name="_95c792d0cf7ead82b1a7a18ad6c05442">系统变量名</param>
            <param name="_24a522c22fb30ef92cd1ea89c90df41c">默认值</param>
            <returns>系统变量值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.Util.IHSSystemVar.m_SetValue(System.String,System.String,System.Object)">
            <summary>
            设置系统变量值
            </summary>
            <param name="_45bf6e847315130374322352dcc91e84">系统变量组</param>
            <param name="_95c792d0cf7ead82b1a7a18ad6c05442">系统变量名</param>
            <param name="_7b2b812e45425b9e6e80b3179d599c2b">系统变量值</param>
        </member>
        <member name="F:HuanSi.Lib.DB.Util.HSDBProvider_Excel._caaa0927c2c31c5c2373bc5b23368888">
            <summary>
            8.0表示是03格式
            xlsx IMEX说明: 0:读取，1:写入,2:读写混合
            HDR NO表示不读取标题栏,Yes则读取标题栏
            这里不加入IMEX=2,原因是加入后报错，表只读,反而去掉后OK，原因不详
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Util.CacheSqlParam">
            <summary>
            缓存SQL对象
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Util.HSReferenceData">
            <summary>
            参照数据读取器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.Util.HSSystemVar">
            <summary>
            系统变量基类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Oracle.HSDBManager_Oracle.m_ParseCommandParameters(System.Data.Common.DbCommand,System.String)">
            <summary>
            解析Sql参数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Oracle.HSDBManager_Oracle.m_DealWithNullParameter(System.Data.Common.DbCommand)">
            <summary>
            重新设置命令SQL，参数值为空的改写成IS NULL模式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Oracle.HSDBProvider_Oracle.m_Connected">
            <summary>
            打开/关闭连接
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSSqlHelper">
            <summary>
            以最简单普通的方式执行sql
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSSqlHelper.m_Execute(System.String)">
            <summary>
            执行sql脚本,主要用于执行最普通的sql脚本，能处理GO
            </summary>
            <param name="sSqlScript"></param>
            <param name="bTrans"></param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSSqlHelper.m_SplitGoSqlText(System.String)">
            <summary>
            分隔GO
            </summary>
            <param name="sSqlScript"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_Validate">
            <summary>
            验证参数正确性
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_IsParamExists(System.String)">
            <summary>
            判断参数是否存在
            </summary>
            <param name="sParamName">参数名</param>
            <returns>参数存在，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_IsFieldExists(System.String[],System.Boolean)">
            <summary>
            字段是否存在
            </summary>
            <param name="FieldNameList">字段名列表</param>
            <param name="bThrowException">字段不存在，是否抛出异常</param>
            <returns>传入的字段全部存在，才返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_getParamValue``1(System.String)">
            <summary>
            获取参数值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sParamName">参数名</param>
            <returns>参数值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_setParamValue(System.String,System.Object)">
            <summary>
            设置参数值
            </summary>
            <param name="sParamName">参数名</param>
            <param name="value">参数值</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseParam.m_setFieldValue(System.String,System.Object)">
            <summary>
            设置参数值
            </summary>
            <param name="sParamName">参数名</param>
            <param name="value">参数值</param>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_Owner">
            <summary>
            所属实体类
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_Column">
            <summary>
            当前列DataColumn对象，在创建时绑定
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_Value">
            <summary>
            实体类集当前行当前列的值，可读写
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_OldValue">
            <summary>
            当前字段的旧值
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_IsNull">
            <summary>
            当前行当前列的值是否为空
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_IsNull(System.Object[])">
            <summary>
            当前行当前列的值是否为空
            </summary>
            <param name="NullValue">等同于空值的值</param>
            <returns>若为空或等同于空值，返回True</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_Modified">
            <summary>
            判断所属实体类的当前列是否发生过改变（当前行）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_Clear">
            <summary>
            清除实体类集中当前行当前列中的值，即置为NULL
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_DefaultValue">
            <summary>
            列的默认值
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_DefaultValueExpression">
            <summary>
            默认值表达式，如getDate(),NewId()等
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_LoadDefaultValue">
            <summary>
            将当前行当前列的值设置为DB的默认值；
            只有默认值不为空且当前值为空时，才加载
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.Column.HSEntityColumn`1.m_LoadDefaultValue(System.Boolean)">
            <summary>
            将当前行当前列的值设置为DB的默认值；
            </summary>
            <param name="bForceLoad">是否强制加载，True，则字段值不管是否为空，都会加载</param>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSDateTimeColumn.m_DefaultValue">
            <summary>
            列的默认值
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSGuidColumn.m_GuidValue">
            <summary>
            当前行当前列的值的GUID形式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSGuidColumn.m_Value">
            <summary>
            当前行当前列的值（默认为String形式）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.Column.HSGuidColumn.m_DefaultValue">
            <summary>
            列的默认值
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSDBSchema">
            <summary>
            DB结构管理类
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSDBSchema.m_bCloneResultTable">
            <summary>
            返回DBTable时是否克隆
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema._98d436d6f984f41404c3193a0579cc35(System.String)">
            <summary>
            查询表主键信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema._m_QueryTableFields(System.String)">
            <summary>
            查询表字段信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema._m_QueryTableUniqueKey(System.String)">
            <summary>
            查询表中的唯一约束
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema._m_QueryTableForeignKey(System.String)">
            <summary>
            查询指向本表的所有外键
            </summary>
            <param name="sTableName">主键表名</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema.m_QueryDBList(System.String,System.Boolean,System.Boolean)">
            <summary>
            返回DB列表
            </summary>
            <param name="sDBName">匹配的DBName，模糊查找匹配</param>
            <param name="bIncludeSysDB">是否包含系统数据库</param>
            <returns>DB列表的字符串数组</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema.m_QueryTableSchema(System.String,HuanSi.Lib.DB.HSDBTableSchemaType)">
            <summary>
            查询表结构信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBSchema.m_RefreshTableSchema(System.String[])">
            <summary>
            刷新指定表(从缓存中删除)
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSDBTable.m_UniqueKeys">
            <summary>
            唯一键
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSDBTable.m_ForeignKeys">
            <summary>
            指向自身的所有外键
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSDBUniqueKey">
            <summary>
            唯一键
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBSchema.m_QueryDBList(System.String,System.Boolean,System.Boolean)">
            <summary>
            查询当前连接的所有数据库名称
            </summary>
            <param name="_1e5e83407e866d4e8c2615173ac7e0e7">数据库名匹配，为空则匹配所有</param>
            <param name="_fe80f15aa8f400e855da6407e8ead515">是否包含系统数据库</param>
            <param name="_60f81db980a3e3c68347db2072cf7a95">是否仅返回可用数据库</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_InitKeyColumns">
            <summary>
            初始化键值列（主键或唯一约束列）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_InitAllColumns">
            <summary>
            初始化所有列
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_CreateEntityInfo``1(System.Boolean)">
            <summary>
            创建新的EntityInfo，主要用于EntityInfo链接属性创建
            </summary>
            <typeparam name="T">创建类型</typeparam>
            <param name="bInitAllColumns">是否初始化所有列</param>
            <returns>新EntityInfo实例</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntityInfo.m_AllowFieldReturnNull">
            <summary>
            是否允许字段为空，影响getFieldValue
            若False，则字段为空时，getFieldValue不返回Null而是返回类型默认值
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_IsFieldExists(System.String[])">
            <summary>
            字段是否存在
            </summary>
            <param name="FieldNameList">字段名列表</param>
            <returns>传入的字段全部存在，才返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_IsFieldExists(System.String[],System.Boolean)">
            <summary>
            字段是否存在
            </summary>
            <param name="FieldNameList">字段名列表</param>
            <param name="bThrowException">字段不存在，是否抛出异常</param>
            <returns>传入的字段全部存在，才返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_IsFieldModified(System.String[])">
            <summary>
            字段是否修改
            </summary>
            <param name="FieldNameList">字段名列表</param>
            <returns>true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_IsFieldNull(System.String[])">
            <summary>
            字段是否为NULL
            </summary>
            <param name="FieldNameList">字段名列表</param>
            <returns>传入的多个字段，只要有一个为空则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_IsFieldEmpty(System.String,System.Object[])">
            <summary>
            字段是否为Empty
            </summary>
            <param name="sFieldName">字段名</param>
            <param name="nullValues">空值等同值</param>
            <returns>为Empty则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_getFieldValue``1(System.String,System.Boolean)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sFieldName">字段名</param>
            <param name="bOldValue">是否取旧值</param>
            <returns>字段值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_getFieldValue``1(System.String)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sFieldName">字段名</param>
            <returns>字段值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_setFieldValue(System.String,System.Object)">
            <summary>
            设置字段值
            </summary>
            <param name="sFieldName">字段名</param>
            <param name="value">设置值</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(System.Data.DataRow,System.Boolean,System.Boolean,System.String[])">
            <summary>
            从一个数据行中复制数据到当前EntityInfo中
            </summary>
            <param name="aRow">提供参数的数据行</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(System.Data.DataRow,System.Boolean,System.String[])">
            <summary>
            批量给字段赋值
            </summary>
            <param name="aRow">Row对象</param>
            <param name="bOnlySetNullField">是否仅给空值字段赋值</param>
            <param name="NotCopyFields">不赋值的字段名集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(HuanSi.Lib.DB.IHSEntity,System.Boolean,System.String[])">
            <summary>
            批量给字段赋值
            </summary>
            <param name="aEntity">Entity实体对象</param>
            <param name="bOnlySetNullField">是否仅给空值字段赋值</param>
            <param name="NotCopyFields">不赋值的字段名集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(HuanSi.Lib.DB.IHSEntity,System.Boolean,System.Boolean,System.String[])">
            <summary>
            批量给字段赋值
            </summary>
            <param name="aEntity">Entity实体对象</param>
            <param name="bOnlySetNullField">是否仅给空值字段赋值</param>
            <param name="bAutoCreateColumn">是否自动创建列</param>
            <param name="NotCopyFields">不赋值的字段名集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(System.Data.IDataReader,System.Boolean,System.String[])">
            <summary>
            批量给字段赋值
            </summary>
            <param name="reader">reader对象</param>
            <param name="bOnlySetNullField">是否仅给空值字段赋值</param>
            <param name="NotCopyFields">不赋值的字段名集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Assign(System.Data.IDataReader,System.Boolean,System.Boolean,System.String[])">
            <summary>
            批量给字段赋值
            </summary>
            <param name="reader">reader对象</param>
            <param name="bOnlySetNullField">是否仅给空值字段赋值</param>
            <param name="bAutoCreateColumn">是否自动创建列</param>
            <param name="NotCopyFields">不赋值的字段名集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_AddColumn(System.String[])">
            <summary>
            添加列
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_Add(System.String,System.Object)">
            <summary>
            添加列
            </summary>
            <param name="sFieldName">字段名</param>
            <param name="fieldValue">字段值</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_DropColumn(System.String[])">
            <summary>
            删除列
            </summary>
            <param name="columns">列名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_MergeEntityData(HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            将外部实体的数据，附加到当前实体上来
            </summary>
            <param name="entities">提供数据的实体</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_MergeEntityData(System.Boolean,System.Boolean,HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            合并实体数据
            </summary>
            <param name="bSetExistField">bSetExistField</param>
            <param name="bOldValue">bOldValue</param>
            <param name="entities">entities</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntityInfo.m_bindingObject">
            <summary>
            动态绑定对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntityInfo.m_NotifyBindingObjectPropertyChanged(System.String)">
            <summary>
            通知属性变更，让BindingObject知道属性变化，从而触发值更新
            </summary>
            <param name="propertyName">属性名</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntityInfo.m_sBindingSourceName">
            <summary>
            绑定数据源名称(用于FormConfig6非空处理)
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_ReadOnly">
            <summary>
            当前实体类是否为只读的，一旦设置为True，则Modified永远返回False，Save永远忽略。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_TableName">
            <summary>
            映射表名
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_UniqueFields">
            <summary>
            唯一字段
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_bSingleRow">
            <summary>
            是否单行模式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_iQueryCount">
            <summary>
            查询次数(每次查询后加1)
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_sCopyPreRowFields">
            <summary>
            需要复制上一行数据的字段名
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_IdenGroup">
            <summary>
            生成Iden时用的Group
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet._aef51cb0a52e1eb919031d7a2c1cf20a">
            <summary>
            查询层次
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AddChilds(HuanSi.Lib.DB.HSBaseEntitySet[])">
            <summary>
            添加子实体
            </summary>
            <param name="entities">子实体集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_SyncTimeStamp">
            <summary>
            同步时间戳
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_PageSize">
            <summary>
            分页查询时的每页行数
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_TotalPage">
            <summary>
            分页查询后返回的总页数
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_TotalRowCount">
            <summary>
            分页查询后返回的总行数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Query(System.String,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="m_sSqlText">Sql文本</param>
            <param name="vParams">参数</param>
            <returns>查询返回数据的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Query(System.Int64,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="m_iSqlId">SqlId</param>
            <param name="vParams">参数</param>
            <returns>查询返回数据的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_QueryPage(System.Int32)">
            <summary>
            分页查询数据
            </summary>
            <param name="iReturnPage">返回第几页</param>
            <returns>查询返回数据的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.RetriveAll(System.String)">
            <summary>
            刷新检索当前实体集中所有数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.RetriveCurr(System.String)">
            <summary>
            刷新检索实体集中当前行数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.RetriveModified(System.String)">
            <summary>
            刷新检索实体集中修改行数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.Retrive(System.String,System.String)">
            <summary>
            刷新检索实体集数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.Retrive(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.IHSEntity},System.String)">
            <summary>
            刷新检索实体集数据
            </summary>
            <param name="_entityList">要检查数据的实体行</param>
            <param name="_sFieldList">检索字段列表</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.LoadFromExcel(System.String,System.String)">
            <summary>
            从EXCEL文件中加载数据
            </summary>
            <param name="_sFileName">EXCEL文件名</param>
            <param name="_sSheetName">SheetName</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.SaveToExcel(System.String,System.String,HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode,System.String)">
            <summary>
            当前实体集数据写入到EXCEL文件中
            </summary>
            <param name="_sFileName">Excel文件名</param>
            <param name="_sSheetName">SheetName</param>
            <param name="_saveMode">保存方式</param>
            <param name="_sKeyField">主键字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AddNew">
            <summary>
            新增并返回最后一行，但不影响游标
            </summary>
            <returns>新创建的实体类</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AddNew(System.Boolean,System.Boolean,System.Int32,HuanSi.Lib.Enums.HSEntityFixMode)">
            <summary>
            新增实体
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
            <param name="iCount">新增行数</param>
            <returns>新增的实体</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_CurrEntity">
            <summary>
            游标当前行实体类
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_currKey">
            <summary>
            当前行的主键字段值
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_KeyField">
            <summary>
            主键字段
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_IsFieldExists(System.String[],System.Boolean)">
            <summary>
            判断指定的字段是否存在
            </summary>
            <param name="FieldNameList">字段集合</param>
            <param name="bThrowException">字段不存在时，是否抛出异常</param>
            <returns>全部存在，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_IsFieldExists(System.String[])">
            <summary>
            判断指定的字段是否存在
            </summary>
            <param name="FieldNameList">字段集合</param>
            <returns>全部存在，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet._e345090b68e0ea68235dd856a9886b6f(System.String)">
            <summary>
            查找指定字段在记录集中的真实字段名
            </summary>
            <param name="sFieldName">要查找的字段名</param>
            <returns>返回记录集中真实字段名，有可能为TableName_FieldName模式</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Clear">
            <summary>
            清除Table中的所有数据。等同于Close再Open。
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ClearSchema">
            <summary>
            清除列信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_DeleteAll">
            <summary>
            将实体类集中的所有数据标记为删除
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_DeleteTreeNode(HuanSi.Lib.DB.HSEntity,System.String,System.Boolean)">
            <summary>
            删除树状实体集当前行节点
            不删除子节点，则子节点自动提升一级(子节点的父＝当前节点的父)
            </summary>
            <param name="curr">当前行实体</param>
            <param name="bDeleteAllChild">是否删除所有子节点</param>
            <param name="sParentField">父节点字段名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_BeforePostBySql(HuanSi.Lib.DB.IHSEntity,HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            行改变前，当前行数据重新计算
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ImportDataBySql(HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            导入外部数据到当前实体中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_BatchCalcBySql(HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            批量计算实体集中所有行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_SetAllAdded(System.Boolean,System.Boolean)">
            <summary>
            将当前实体集中的所有行都设置为新增
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AcceptChanges(System.Boolean,System.Boolean)">
            <summary>
            提交本地数据修改（状态修改为浏览）
            </summary>
            <param name="bSyncTimeStamp">是否同步刷新时间戳</param>
            <param name="bSyncBillRight">是否同步刷新单据权限</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AcceptChanges">
            <summary>
            提交本地数据修改（状态修改为浏览）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_RejectChanges">
            <summary>
            撤消本地数据修改（状态修改为浏览）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_Modified">
            <summary>
            当前实体类是否已修改过
            </summary>
            <returns>修改过返回True</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_CustomModified">
            <summary>
            是否有自定义的修改(CustomUpdateStatus)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Save">
            <summary>
            保存实体集数据
            </summary>
            <returns>保存成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_DataProcess">
            <summary>
            实体类数据处理函数(在UC.DataProcess中调用)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Save(System.Boolean,HuanSi.Lib.DB.HSUpdateStatus[])">
            <summary>
            保存实体集数据
            </summary>
            <param name="bAcceptChange">保存后是否AcceptChange</param>
            <param name="updateStatusList">需保存的行的状态列表</param>
            <returns>保存成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_AutoAdjustUpdateStatus(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            保存前自动调整行状态
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_Busy">
            <summary>
            指示当前记录集状态（是否繁忙）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_fieldValidator">
            <summary>
            字段数据检查器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Validate">
            <summary>
            数据验证函数
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_editStatus">
            <summary>
            记录集的编辑状态(由外部指定，用于界面刷新)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet._m_AddNewByCurr(System.Boolean,System.Boolean,System.Int32,System.String[])">
            <summary>
            新增行，并从当前行复制数据
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
            <param name="iCount">新增行数</param>
            <param name="NotCopyFields">不复制的字段</param>
            <returns>新增行实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_SetBindingSource(System.Windows.Forms.BindingSource)">
            <summary>
            设置绑定源
            </summary>
            <param name="aBindingSource">绑定源</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_SetBindingSource(System.Windows.Forms.BindingSource,System.String)">
            <summary>
            设置绑定源
            </summary>
            <param name="aBindingSource">绑定源</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_sBindingSourceName">
            <summary>
            绑定数据源名称(用于FormConfig6非空处理)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ResetBindingSource(System.Boolean)">
            <summary>
            请求绑定源重新读取数据
            <param name="_bMetaDataChanged">如果数据架构已更改，则为 true；如果只有值发生了更改，则为 false</param>
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_IsClearBeforeQuery">
            <summary>
            查询前是否先清空现有数据（默认True）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_bClearBeforeQuery">
            <summary>
            查询前是否先清空现有数据（默认True）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_bClearColumnBeforeQuery">
            <summary>
            查询前是否清除列信息
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_SqlId">
            <summary>
            本实体类查询所需的本地SQL名称
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_RetriveSqlId">
            <summary>
            Retrive时所需sqlid
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_childKeyLoggors">
            <summary>
            子实体的键值记录
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ClearChildLogKeys">
            <summary>
            清空键值记录(实体查询或新增时，自动清空子实体的键值记录)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_NotNullFields">
            <summary>
            DB非空字段
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_BatchSaveInputFields">
            <summary>
            批量保存时必须传入XML的字段
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_customNotNullFields">
            <summary>
            自定义非空字段
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_sNotCopyFields">
            <summary>
            复制时自动忽略的字段
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_bAllDataForModifiedXmlGenerate">
            <summary>
            生成所有数据的modified xml,无论数据是否更改
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_BeforeDeleteHintSqlId">
            <summary>
            删除前提示SqlId(返回提示信息)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_BeforeSaveHintSqlId">
            <summary>
            保存前提示SqlId（返回提示信息）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_BeforePostSqlId">
            <summary>
            行数据提交前SqlId
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_ImportDataSqlId">
            <summary>
            导入数据SqlId
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_BatchCalcSqlId">
            <summary>
            批量计算SqlId，用于多行数据批量计算(传入xml)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_UIOperateForbbiden">
            <summary>
            禁止的UI操作（仅存储，自身无处理，仅供UI上读取此信息刷新UI）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ModifiedEntitySet(System.Data.DataViewRowState)">
            <summary>
            获取实体集的修改行部分实体集
            </summary>
            <param name="aRowState">行修改状态</param>
            <returns>指定修改状态的行的实体集</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_Locate(System.String,System.Object)">
            <summary>
            定位到指定行
            </summary>
            <param name="sFieldName">字段名</param>
            <param name="value">字段值</param>
            <returns>定位成功，返回true</returns>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_bFlushExecuteCache">
            <summary>
            是否立即提交执行缓存(并触发缓存中所有SQL执行)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ValidateQueryCacheCount(System.Int32)">
            <summary>
            校验查询缓存SQL数量
            </summary>
            <param name="iCount">iCount</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ValidateExecuteCacheCount(System.Int32)">
            <summary>
            校验执行缓存SQL数量
            </summary>
            <param name="iCount">iCount</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_bQueryByCache">
            <summary>
            是否需要通过缓存器进行查询
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ClearQueryCache">
            <summary>
            清空查询缓存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_FlushQueryCache">
            <summary>
            提交并清空查询缓存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_FlushExecuteCache">
            <summary>
            提交并清空执行缓存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ClearExecuteCache">
            <summary>
            清空执行缓存
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.ReadXml(System.Xml.XmlReader)">
            <summary>
            从XML中读取数据
            </summary>
            <param name="reader">XmlReader</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将实体集数据写入XML
            </summary>
            <param name="writer">XmlWriter</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_SerializeXML(System.String[])">
            <summary>
            实体集数据序列化为XML
            </summary>
            <param name="sNotCopyFields">不输出的字段</param>
            <returns>XML</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ModifiedXMLEx(System.String,System.String,System.Data.DataRowState)">
            <summary>
            获取修改数据的XML（仅修改的行、本表中修改的列+所有新增行+所有删除列）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_DeserializeXML(System.String)">
            <summary>
            从XML中反序列化
            </summary>
            <param name="sSource">xml文本或xml文件路径</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_setCustomUpdateStatus(HuanSi.Lib.DB.IHSEntity,HuanSi.Lib.DB.HSUpdateStatus)">
            <summary>
            设置实体的CustomUpdateStatus
            </summary>
            <param name="aEntity">实体</param>
            <param name="updateStatus">CustomUpdateStatus</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_getCustomUpdateStatus(HuanSi.Lib.DB.IHSEntity)">
            <summary>
            获取指定实体的CustomUpdateStatus
            </summary>
            <param name="aEntity">实体</param>
            <returns>实体的CustomUpdateStatus</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_IsCurrDefineCustomUpdateStatus(HuanSi.Lib.DB.IHSEntity)">
            <summary>
            当前行是否定义了CustomUpdateStatus
            </summary>
            <param name="aEntity">指定实体</param>
            <returns>有定义CustomUpdateStatus返回true</returns>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_iBillNoFormula">
            <summary>
            单据号生成规则公式ＩＤ
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_bCloneItems">
            <summary>
            Foreach时是否复制Entity对象(OrderBy时必须复制)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_bBatchSave">
            <summary>
            是否批量保存
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_Count">
            <summary>
            实体类集中记录行数(View.Count)
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_IsEmpty">
            <summary>
            实体类集中数据是否为空
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_iBillType">
            <summary>
            单据类型ＩＤ（用于单据权限）
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSBaseEntitySet.m_dictBillRights">
            <summary>
            缓存每一行数据的单据数据权限值
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_billOperateRight">
            <summary>
            单据操作权限
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_QueryBillRight(System.Int32,System.Int32,System.Int32)">
            <summary>
            查询单据权限
            </summary>
            <param name="iBillType">单据类型</param>
            <param name="_iUserId">用户ID</param>
            <param name="iDepartmentId">部门ID(组织架构)</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_ImportBillRightInfo(System.Data.DataTable,System.Data.DataTable,HuanSi.Lib.Bill.HSBillOperateRight,System.Int32)">
            <summary>
            通过外部Table数据导入生成BillRightInfo
            适用于WebMode的插件
            </summary>
            <param name="_pbBillType">单据类型信息</param>
            <param name="_pbBillDataRight">单据数据权限</param>
            <param name="_iBillOperateRight">单据操作权限</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_QueryBillRight(System.Int32,System.Int32)">
            <summary>
            查询单据权限
            </summary>
            <param name="iBillType">单据类型</param>
            <param name="_iUserId">用户ID</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_CalcBillDataRight(HuanSi.Lib.DB.IHSEntity,System.Boolean)">
            <summary>
            计算单据数据权限
            </summary>
            <param name="aEntity">实体</param>
            <param name="bForceCalc">是否强制重新计算</param>
            <returns>数据权限值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_LoadSql(System.Int64)">
            <summary>
            加载本地SQL
            </summary>
            <param name="m_iSqlId">SqlId</param>
            <returns>Sql文本</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_CalcNextRowNo(System.String)">
            <summary>
            计算当前实体的下一行号
            </summary>
            <param name="sRowNoField">行号字段，默认为iRowNo</param>
            <returns>下一行号</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_CalcNextOrder(System.String,System.Int32,System.Int32)">
            <summary>
            计算下一顺序号
            </summary>
            <param name="sOrderField">顺序号字段，默认=iOrder</param>
            <param name="iSplitor">间隔，默认=1</param>
            <returns>下一个顺序号</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_sAutoSaveTable">
            <summary>
            自动保存表名（保存时自动保存到此表）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_UnPivotTo(HuanSi.Lib.DB.HSBaseEntitySet,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            横转纵
            </summary>
            <param name="_sourceEntitySet">来源实体集(横表)</param>
            <param name="_destEntitySet">目标实体集(纵表)</param>
            <param name="_sForeignKey">纵表指向横表的外键字段</param>
            <param name="_sFieldSplitor">字段分隔字符(默认=".",转横字段显示为_sPivotIdField._sPivotNameField)</param>
            <param name="_sValueField">目标数据集 值字段</param>
            <param name="_sPivotIdField">转置ID字段(如iSizeId)</param>
            <param name="_sPivotNameField">转置名称字段,(如sSizeName）</param>
            <param name="_sNullFieldValue">视为空的字段值，如0则表示0为空</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.m_Filter">
            <summary>
            设置实体类集中的Filter
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.bIgnoreQueryError">
            <summary>
            是否忽略查询错误
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSBaseEntitySet.bQueryTopCount">
            <summary>
            是否仅查询Top分页行数据，这种做法速度快，但是不能准确的反应出分页大小
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSBaseEntitySet.m_InitEvent">
            <summary>
            初始化实体事件，默认指定BeforeSave与ValidateALL事件
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEditStatus">
            <summary>
            数据集编辑状态
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEditStatus.m_Browse">
            <summary>
            浏览
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEditStatus.m_Insert">
            <summary>
            新增
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEditStatus.m_Edit">
            <summary>
            编辑
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEditStatus.m_None">
            <summary>
            空数据集
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEntity">
            <summary>
            实体行对象，存储单行DB数据的对象
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_AllowFieldReturnNull">
            <summary>
            是否允许字段为空，影响getFieldValue
            若False，则字段为空时，getFieldValue不返回Null而是返回类型默认值
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_bSystemBill">
            <summary>
            是否系统单据
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_SystemBillEditStyle">
            <summary>
            系统单据修改模式
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEntity.m_Owner">
            <summary>
            实体类所属的实体类集
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_Modified">
            <summary>
            当前实体是否被修改过
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_LoadDefaultValue">
            <summary>
            加载实体类所有默认值，只有当前字段值为空时，才加载。
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_LoadDefaultValue(System.Boolean)">
            <summary>
            加载实体类所有默认值
            </summary>
            <param name="bForceLoad">是否强制加载，即不管字段值是否为空，都加载</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_SetAdded(System.Boolean,System.Boolean)">
            <summary>
            将当前Entity设置为新增数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_Delete">
            <summary>
            将当前实体类中的行标记为删除
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEntity._f549d37c5f0a255b2f62b392eba50bf9">
            <summary>
            beginEdit与EndEdit的计算器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_BeginEdit">
            <summary>
            实体类进入编辑状态
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_EndEdit">
            <summary>
            实体类完成数据编辑，返回浏览状态 等同于Delphi.DataSet.Post;
            </summary>
            <param name="bValidate">提交前是否检查数据</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_CancelEdit">
            <summary>
            取消当前编辑
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_Clone``1">
            <summary>
            创建一个新的实体行对象，与原实体类定位于同一条记录
            从CurrEntity Clone出来的实体类不会随着游标的变化而变化，而是始终指向某一行数据
            </summary>
            <returns>新实体行对象</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_Assign(HuanSi.Lib.DB.IHSEntity,System.Boolean,System.String[])">
            <summary>
            从参数实体行对象中读取数据，复制到本实体行对象中
            <remarks>根据字段名匹配</remarks>
            </summary>
            <param name="aEntitySet">提供参数的实体行对象</param>
            <param name="sNotCopyField">不拷贝的字段名，多个字段通过逗号分隔</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_Assign(System.Data.DataRow,System.Boolean,System.String[])">
            <summary>
            从一个数据行中复制数据到当前EntityInfo中
            </summary>
            <param name="aRow">提供参数的数据行</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_editStatus">
            <summary>
            当前数据行的编辑状态(由当前行的数据集状态决定)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_getColumnName(System.String)">
            <summary>
            查找指定字段在记录集中的真实字段名
            </summary>
            <param name="sFieldName">要查找的字段名</param>
            <returns>返回记录集中真实字段名，有可能为TableName_FieldName模式</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_IsFieldExists(System.String[],System.Boolean)">
            <summary>
            判断指定的字段是否存在
            </summary>
            <param name="FieldNameList">字段集合</param>
            <param name="bThrowException">字段不存在时，是否抛出异常</param>
            <returns>全部存在，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_ValidateField">
            <summary>
            字段验证
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_Validate">
            <summary>
            数据验证函数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_ToEntityInfo``1(System.String[])">
            <summary>
            将Entity转换为EntityInfo
            </summary>
            <typeparam name="T">EntityInfo类型名</typeparam>
            <param name="ExportFields">输出到EntityInfo的字段，为空则表示输出所有字段</param>
            <returns>装载Entity中数据的EntityInfo对象</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntity.m_IsTimeStampSync">
            <summary>
            判断时间戳是否同步（True=同步，未变化）
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntity.m_bindingObject">
            <summary>
            动态绑定对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_RetrieveBySql(System.String,System.Object[])">
            <summary>
            通过sql检索单行数据
            </summary>
            <param name="sql">Sql文本</param>
            <param name="vParams">参数</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Retrieve(System.String,System.Object[])">
            <summary>
            检索单行数据，根据m_KeyField的值
            </summary>
            <param name="sKeyField">主键字段</param>
            <param name="vParams">参数</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Retrieve(System.String,System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            检索单行数据
            </summary>
            <param name="sKeyField">主键值</param>
            <param name="sNotReturnFields">不返回字段</param>
            <param name="vParams">参数</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Retrieve(System.String[],System.Object[])">
            <summary>
            检索单行数据
            </summary>
            <param name="KeyField">主键值</param>
            <param name="vParams">参数</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Retrieve(System.String[],System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            检索单行数据
            </summary>
            <param name="KeyField">主键值</param>
            <param name="sNotReturnFields">不返回字段</param>
            <param name="vParams">参数</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Retrieve">
            <summary>
            检索单行数据
            </summary>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_RetrieveField(System.String[])">
            <summary>
            根据当前Id，附加查询指定字段
            </summary>
            <param name="fields">要查询的字段</param>
            <returns>查询成功，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Save(System.Boolean,System.String[])">
            <summary>
            保存单行数据
            </summary>
            <param name="bClearUpdateStatus">是否清除更新状态</param>
            <param name="sNotUpdateFields">不保存字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_SyncTimeStamp">
            <summary>
            同步时间戳
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_Save">
            <summary>
            保存数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityInfo`1.m_CalcUpdateStatus">
            <summary>
            自动计算更新状态
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEntityServer">
            <summary>
            IEntityServer的默认实现
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityServer.m_UpdateData(HuanSi.Lib.DB.IHSEntity,System.String,System.Boolean,System.String[])">
            <summary>
            更新数据
            </summary>
            <param name="aEntity">数据实体</param>
            <param name="bFilterNotModifiedField">Update时是否筛选掉未修改的字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityServer._e619c3817902d1ae84cefee7ddc7fb17(HuanSi.Lib.DB.IHSEntity)">
            <summary>
            获取Retrive时数据权限字段如何查询
            </summary>
            <param name="curr"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityServer.m_Retrieve(HuanSi.Lib.DB.IHSEntity,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            检索单行数据
            </summary>
            <param name="aEntity">数据填充到此实体类中</param>
            <param name="FieldList">要填充的字段</param>
            <returns>成功填充数据，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntityServer.m_BatchSaveTable(System.String,System.String,HuanSi.Lib.DB.Cache.IHSExecuteCache)">
            <summary>
            批量保存表
            </summary>
            <param name="sTableName">表名</param>
            <param name="xml">修改数据的XML</param>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEntitySet`2">
            <summary>
            所有实体类集的父类
            </summary>
            <summary>
            实体控制类，实现单个实体类的全部控制（查询、新增、修改、删除、保存等）
            </summary>
            <summary>
            实体类集，游标部分
            </summary>
            <summary>
            实体类集，枚举部分
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.#ctor">
            <summary>
            创建一个新的实体类集，并自动创建一个DataTable
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.#ctor(System.Data.DataView)">
            <summary>
            基于DataView创建一个新的实体类集，与DataView的原所属实体类共一个Table和一个View
            即共享同一套数据和同一套视图
            </summary>
            <param name="aDataView"></param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.#ctor(HuanSi.Lib.DB.HSBaseEntitySet)">
            <summary>
            基于一个实体类创建一个新的实体类，新实体类与原实体类共享所有数据
            </summary>
            <param name="aEntitySet">提供数据的实体类</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_InitColumns">
            <summary>
            创建表的列对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_IsTableModified">
            <summary>
            当前实体类集中的数据是否被修改过
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_KeyField">
            <summary>
            主键字段(查询时自动保持主键唯一)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_InitClass">
            <summary>
            初始化类，创建列信息等
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_View">
            <summary>
            实体类集依赖的DataView，即游标
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Clear">
            <summary>
            清除Table中的所有数据。等同于Close再Open。
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Close">
            <summary>
            关闭实体类集，清空所有数据及列结构
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_Sort">
            <summary>
            设置实体类集的排序方式
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ValidateNullField">
            <summary>
            验证实体类内的所有新增行的数据是否有非空字段为空
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_DropColumn(System.String[])">
            <summary>
            从当前实体中删除当前列
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_AddNew">
            <summary>
            新增并返回最后一行，但不影响游标
            </summary>
            <returns>新创建的实体类</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_AddNew(System.Boolean,System.Boolean,System.Int32,HuanSi.Lib.Enums.HSEntityFixMode)">
            <summary>
            新增实体
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
            <param name="iCount">新增行数</param>
            <returns>新增实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._3e7442032eff05527b05eaf7782e0fee">
            <summary>
            保存前一行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._4c4cb6846ce3968759445f6e686a82a1">
            <summary>
            从前一行数据中复制数据到当前行
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_AddRange(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.IHSEntity},System.Boolean,System.String[])">
            <summary>
            添加多个Entity对象数据进来(新增并复制数据)
            </summary>
            <param name="aEntitySet">实体类集合</param>
            <param name="sNotCopyField">不拷贝的字段名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._m_AddNewByCurr(System.Boolean,System.Boolean,System.Int32,System.String[])">
            <summary>
            新增行并从当前行复制数据
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
            <param name="iCount">新增行数</param>
            <param name="NotCopyFields">不复制字段</param>
            <returns>新增实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_AddNewByCurr(System.Boolean,System.Boolean,System.Int32,System.String[])">
            <summary>
            新增行并从当前行复制数据
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
            <param name="iCount">新增行数</param>
            <param name="NotCopyFields">不复制字段</param>
            <returns>新增实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._a3e741ae7fe9340f305ca858ee90cf2f(System.String[])">
            <summary>
            允许复制的字段
            </summary>
            <param name="aNotCopyFields">不复制字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_SetAllAdded(System.Boolean,System.Boolean)">
            <summary>
            将所有行设置为新增状态
            </summary>
            <param name="bCallBeforeAdd">是否调用BeforeAdd事件</param>
            <param name="bCallAfterAdd">是否调用AfterAdd事件</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_DeleteAll">
            <summary>
            删除所有行
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_DeleteTreeNode(HuanSi.Lib.DB.HSEntity,System.String,System.Boolean)">
            <summary>
            删除树状实体集当前行节点
            不删除子节点，则子节点自动提升一级(子节点的父＝当前节点的父)
            </summary>
            <param name="curr">当前行实体</param>
            <param name="bDeleteAllChild">是否删除所有子节点</param>
            <param name="sParentField">父节点字段名</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._c0b124d94568dae9974c66b281f2a26e(System.Int32,System.String,System.Collections.Generic.List{System.Int32}@)">
            <summary>
            递归查找子节点
            </summary>
            <param name="_iIden">当前父节点</param>
            <param name="_sParentField">父字段</param>
            <param name="_lstKey">主键列表，用于返回</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_BeforePostBySql(HuanSi.Lib.DB.IHSEntity,HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            行改变前，当前行数据重新计算
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ImportDataBySql(HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            导入外部数据到当前实体中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_BatchCalcBySql(HuanSi.Lib.DB.IHSEntity[])">
            <summary>
            批量计算实体集中所有行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_EndCurrentEdit">
            <summary>
            提交当前行修改
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_CancelCurrentEdit">
            <summary>
            取消当前行修改
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_AcceptChanges(System.Boolean,System.Boolean)">
            <summary>
            提交本地数据修改（状态修改为浏览）
            </summary>
            <param name="bSyncTimeStamp">是否同步刷新时间戳</param>
            <param name="bSyncBillRight">是否同步刷新单据权限</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_RejectChanges">
            <summary>
            撤消本地修改
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_SyncData(System.Collections.Generic.IEnumerable{`0},System.Linq.Expressions.Expression{System.Func{`0,`0,System.Boolean}},System.String[])">
            <summary>
            同步实体类数据(匹配的同步字段，多余的删除，没有的新增)
            </summary>
            <param name="aEntitySet">提供数据的实体类</param>
            <param name="predicate">查找匹配条件</param>
            <param name="sNotCopyField">不拷贝字段(适用于新增时同步字段数据时)</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedEntitySet(System.Data.DataViewRowState)">
            <summary>
            得到实体集的修改行实体集
            </summary>
            <param name="aRowState">行编辑状态</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedData(System.Data.DataViewRowState)">
            <summary>
            返回当前实体中修改部分，新的EntitySet与原EntitySet共享同一Table
            </summary>
            <param name="aRowState">数据行状态</param>
            <returns>包含原有Table中修改数据的新的EntitySet</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedData">
            <summary>
            获取修改行实体集合
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedXML(HuanSi.Lib.DB.HSUpdateStatus[],System.String,System.String)">
            <summary>
            获取修改数据的XML（仅修改的行、本表中修改的列+所有新增行+所有删除列）
            </summary>
            <param name="updateStatusList">更新状态</param>
            <param name="sDeleteFields">删除不返回的字段集合</param>
            <param name="sReturnFields">修改字段以外需添加的字段集合</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedXML(System.String,System.String)">
            <summary>
            获取修改数据的XML（仅修改的行、本表中修改的列+所有新增行+所有删除列）
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedData_AddOrModified">
            <summary>
            获取实体集中的新增、修改行
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ModifiedData_Deleted">
            <summary>
            获取实体集中的删除行集
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_CloneModifiedData(System.Data.DataRowState)">
            <summary>
            返回当前实体中修改部分的克隆，新的EntitySet中保存的是克隆的数据，与原Table无关
            </summary>
            <param name="aDataRowState">状态筛选</param>
            <returns>包含修改部分数据克隆的实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_CloneModifiedData">
            <summary>
            返回当前实体中修改部分的克隆，新的EntitySet中保存的是克隆的数据，与原Table无关
            </summary>
            <returns>包含修改部分数据的实体</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_First">
            <summary>
            将游标移动到第一行
            </summary>
            <returns>第一行的实体类</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Next">
            <summary>
            游标下移一条记录
            </summary>
            <returns>下一个实体类</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Prior">
            <summary>
            游标向前移动一步
            </summary>
            <returns>移动后的当前实体类</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Last">
            <summary>
            游标走到最后一条
            </summary>
            <returns>移动后的当前实体类</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_IsLast">
            <summary>
            当前游标是否在最后一行
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_IsFirst">
            <summary>
            当前游标是否在第一行
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_CurrEntity">
            <summary>
            游标当前行实体类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Locate(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}},System.Int32)">
            <summary>
            定位满足条件的第一个实体类处，或未找到当前行不变
            </summary>
            <returns>是否定位成功</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ResetBindingSource(System.Boolean)">
            <summary>
            请求绑定源重新读取数据
            <param name="_bMetaDataChanged">如果数据架构已更改，则为 true；如果只有值发生了更改，则为 false</param>
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.Item(System.Int32)">
            <summary>
            实体类集同时可以作为一个实体类数组使用
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_TotalPage">
            <summary>
            分页查询后返回的总页数
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSEntitySet`2.m_TotalRowCount">
            <summary>
            分页查询后返回的总行数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_DefaultApplySave(HuanSi.Lib.DB.HSUpdateStatus[])">
            <summary>
            默认保存处理函数，处于ApplySave的事务当中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_ApplySave(HuanSi.Lib.DB.HSUpdateStatus[])">
            <summary>
            真正的保存函数，启动事务，并处理缓存
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSEntitySet`2.m_bQueryLastPage">
            <summary>
            分页查询时，是否默认查询最后一页
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Query(System.String,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="m_sSqlText">Sql文本</param>
            <param name="vParams">参数</param>
            <returns>查询返回数据的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Query(System.Int64,System.Object[])">
            <summary>
            查询数据
            </summary>
            <param name="m_iSqlId">SqlId</param>
            <param name="vParams">参数</param>
            <returns>查询返回数据的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_QueryPage(System.Int32)">
            <summary>
            查找指定页
            </summary>
            <param name="iReturnPage">指定页</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.RetriveAll(System.String)">
            <summary>
            刷新检索当前实体集中所有数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.RetriveCurr(System.String)">
            <summary>
            刷新检索实体集中当前行数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.RetriveModified(System.String)">
            <summary>
            刷新检索实体集中修改行数据
            </summary>
            <param name="_sFieldList">需查询的字段</param>
            <returns>检索成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.Retrive(System.String,System.String)">
            <summary>
            刷新检索实体集数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.Retrive(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.IHSEntity},System.String)">
            <summary>
            刷新检索实体集数据
            </summary>
            <param name="_entityList">要检查数据的实体行</param>
            <param name="_sFieldList">检索字段列表</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.LoadFromExcel(System.String,System.String)">
            <summary>
            从EXCEL文件中加载数据
            </summary>
            <param name="_sFileName">EXCEL文件名</param>
            <param name="_sSheetName">SheetName</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.SaveToExcel(System.String,System.String,HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode,System.String)">
            <summary>
            当前实体集数据写入到EXCEL文件中
            </summary>
            <param name="_sFileName">Excel文件名</param>
            <param name="_sSheetName">SheetName</param>
            <param name="_saveMode">保存方式</param>
            <param name="_sKeyField">主键字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Save">
            <summary>
            保存实体集数据
            </summary>
            <returns>保存成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_Save(System.Boolean,HuanSi.Lib.DB.HSUpdateStatus[])">
            <summary>
            保存实体集数据
            </summary>
            <param name="bAcceptChange">保存后是否AcceptChange</param>
            <param name="updateStatusList">需保存的行的状态列表</param>
            <returns>保存成功，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_SyncToDB(HuanSi.Lib.DB.HSUpdateStatus[])">
            <summary>
            将当前实体类中数据同步到DB中
            按主键匹配，主键存在的Update，不存在的Insert
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2.m_SyncTimeStamp">
            <summary>
            同步时间戳(重新查询时间戳)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`2._e6eae4050ecd611623beacb3e62b733e">
            <summary>
            更新父单据的时间戳
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSEntitySetList">
            <summary>
            实体数据集列表
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.ReadXml(System.Xml.XmlReader)">
            <summary>
            从XML流中加载数据
            </summary>
            <param name="reader">XML流</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.WriteXml(System.Xml.XmlWriter)">
            <summary>
            将列表内所有实体数据集的数据写入到同一个XML流中
            </summary>
            <param name="writer">XML流</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.m_Serialize(System.String,System.Boolean)">
            <summary>
            将列表内所有EntitySet数据写入指定文件中
            </summary>
            <param name="sFileName">XML文件</param>
            <param name="bAppend">是否在原有文件后追加，否则覆盖原文件</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.m_Serialize(System.String)">
            <summary>
            将列表内所有EntitySet数据写入指定文件中
            </summary>
            <param name="sFileName">XML文件，若此文件存在，则直接覆盖</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.m_Deserialize(System.String,System.Boolean)">
            <summary>
            从指定文件中加载数据到列表内的所有EntitySet中
            </summary>
            <param name="sFileName">XML文件</param>
            <param name="bAppend">加载的数据是否追加到现有数据后，否则先清空EntitySet再加载数据</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySetList.m_Deserialize(System.String)">
            <summary>
            从指定文件中加载数据到列表内的所有EntitySet中,EntitySet中原有数据将被清空
            </summary>
            <param name="sFileName">XML文件</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`1.#ctor">
            <summary>
            创建一个新的实体类集，并自动创建一个DataTable
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`1.#ctor(System.Data.DataView)">
            <summary>
            基于DataView创建一个新的实体类集，与DataView的原所属实体类共一个Table和一个View
            即共享同一套数据和同一套视图
            </summary>
            <param name="aDataView"></param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet`1.#ctor(HuanSi.Lib.DB.HSBaseEntitySet)">
            <summary>
            基于一个实体类创建一个新的实体类，新实体类与原实体类共享所有数据
            </summary>
            <param name="aEntitySet">提供数据的实体类</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet.#ctor">
            <summary>
            创建一个新的实体类集，并自动创建一个DataTable
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet.#ctor(System.Data.DataView)">
            <summary>
            基于DataView创建一个新的实体类集，与DataView的原所属实体类共一个Table和一个View
            即共享同一套数据和同一套视图
            </summary>
            <param name="aDataView"></param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSEntitySet.#ctor(HuanSi.Lib.DB.HSBaseEntitySet)">
            <summary>
            基于一个实体类创建一个新的实体类，新实体类与原实体类共享所有数据
            </summary>
            <param name="aEntitySet">提供数据的实体类</param>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntity">
            <summary>
            单行实体对象接口
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_IsFieldExists(System.String[])">
            <summary>
            字段是否存在
            </summary>
            <param name="_94e10489db21b70194c526b6880896d1">字段名集合</param>
            <returns>存在则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_getFieldValue``1(System.String,System.Boolean)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <param name="_6b1745311ccc0daae83104b0ee518432">是否取旧值</param>
            <returns>字段值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_getFieldValue``1(System.String)">
            <summary>
            获取字段值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <returns>字段值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_IsFieldModified(System.String[])">
            <summary>
            字段是否修改
            </summary>
            <param name="_94e10489db21b70194c526b6880896d1">字段名集合</param>
            <returns>修改了则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_IsFieldNull(System.String[])">
            <summary>
            字段值是否为空
            </summary>
            <param name="_94e10489db21b70194c526b6880896d1">字段名集合</param>
            <returns>为null返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_IsFieldEmpty(System.String,System.Object[])">
            <summary>
            字段值是否为Empty
            </summary>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <param name="_03abdc7047f287f8070ec842be36cc31">空值等同值</param>
            <returns>为空返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_setFieldValue(System.String,System.Object)">
            <summary>
            设置字段值
            </summary>
            <param name="_b8a179e762fce87981fb7f958cf38873">字段名</param>
            <param name="value">设置值</param>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_Assign(HuanSi.Lib.DB.IHSEntity,System.Boolean,System.String[])">
            <summary>
            批量设置字段值
            </summary>
            <param name="_14a5572dd477fba595c39f54b6cfca77">实体对象</param>
            <param name="_f304ef9e6d142f5da64dfac5439828d5">是否仅设置空值字段</param>
            <param name="_084e00a9d4c52a89a5ad00c17c1f46f1">不拷贝的字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_Assign(System.Data.IDataReader,System.Boolean,System.String[])">
            <summary>
            批量设置字段值
            </summary>
            <param name="_fd2d21aefb346e1c230048e45e5f273d">reader对象</param>
            <param name="_f304ef9e6d142f5da64dfac5439828d5">是否仅设置空值字段</param>
            <param name="_084e00a9d4c52a89a5ad00c17c1f46f1">不拷贝的字段</param>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_Assign(System.Data.DataRow,System.Boolean,System.String[])">
            <summary>
            批量设置字段值
            </summary>
            <param name="_b791055b266c52c8cae7746c93a7b3a6">row行对象</param>
            <param name="_f304ef9e6d142f5da64dfac5439828d5">是否仅设置空值字段</param>
            <param name="_084e00a9d4c52a89a5ad00c17c1f46f1">不拷贝的字段</param>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSEntity.m_AllowFieldReturnNull">
            <summary>
            是否允许返回空字段值
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntity.m_LoadSql(System.Int32)">
            <summary>
            读取LocalSql
            </summary>
            <param name="_b9c9f2fbeacfe7170b2f800279043ba7">SqlId</param>
            <returns>Sql文本</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSEntity.m_bindingObject">
            <summary>
            动态绑定对象
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntityServer">
            <summary>
            所有Manager的基础接口
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityServer.m_Retrieve(HuanSi.Lib.DB.IHSEntity,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object[])">
            <summary>
            检索单行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityServer.m_IsExists(HuanSi.Lib.DB.IHSEntity)">
            <summary>
            判断指定实体数据是否存在
            </summary>
            <param name="_2586ec421c906283974e3421ade561db">主键字段名</param>
            <param name="_a989c32628deb5f7a644604cf13a3d1b">主键字段值</param>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityServer.m_Query(HuanSi.Lib.DB.IHSEntitySet,System.String,System.Object[])">
            <summary>
            查询数据集
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSEntityServer.m_Save``1(``0,System.String,HuanSi.Lib.DB.HSUpdateStatus,System.String[])">
            <summary>
            保存单行数据
            </summary>
            <param name="_14a5572dd477fba595c39f54b6cfca77">要保存的实体数据</param>
            <param name="_f06e62e74a19e6b377e8974ab983b2cd">指定的保存动作（新增、修改、删除等）</param>
            <remarks>若指定为修改状态，则不会考虑实体内的数据状态，而是更新所有字段值</remarks>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntityServerManager">
            <summary>
            EntityServer生成器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntitySet">
            <summary>
            EntitySet与EntityInfoSet的接口约束
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSEntitySet.m_bindingSource">
            <summary>
            获取绑定Source
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntitySetEvent">
            <summary>
            EntitySet事件
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSEntityValidator">
            <summary>
            实体类数据检查器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSReferenceItem">
            <summary>
            参照数据项接口
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSUniqueValidator">
            <summary>
            唯一键检查器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSUniqueValidator">
            <summary>
            唯一键检查器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSFieldValidator">
            <summary>
            字段检测，检测非空字段是否为空
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DB.HSFieldValidator.m_lastTable">
            <summary>
            上一次检测的表（表名相同，则无需重新加载表结构）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSFieldValidator.m_ValidateNullField(HuanSi.Lib.DB.IHSEntity,System.Boolean)">
            <summary>
            验证是否有非空字段为空
            </summary>
            <returns>True表示检测通过</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSFieldValidator._5a3987395b95916d07f4632febdffe02(HuanSi.Lib.DB.IHSEntity,System.Boolean)">
            <summary>
            验证是否有字段值长度超标
            </summary>
            <returns>True表示检测通过</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSFieldValidator.m_Validate(HuanSi.Lib.DB.IHSEntity,System.Boolean)">
            <summary>
            验证实体类是否有非空字段为空的数据
            </summary>
            <param name="aEntity">要验证的实体类</param>
            <param name="bThrowException">是否抛出异常</param>
            <returns>若数据正常，返回True</returns>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSFieldValidator">
            <summary>
            验证实体类是否有非空字段为空的数据
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSDBManager">
            <summary>
            数据库管理功能管道，所以DB操作通过此类提交给DB。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_Provider">
            <summary>
            数据库连接提供者
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_Fill(System.Data.DataTable,System.String,System.Object[])">
            <summary>
            查询数据，并填充到DataTable中
            </summary>
            <param name="_7a055d401de5e27099f3c77452965676">即将接受填充数据的DataTable</param>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">查询用SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">填充SQL中的参数值，按顺序填充，同名参数只需填充一次</param>
            <returns>DataTable的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_FillEx(System.Data.DataTable,System.String,System.Object)">
            <summary>
            查询数据，并填充到DataTable中
            </summary>
            <param name="_7a055d401de5e27099f3c77452965676">即将接受填充数据的DataTable</param>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">查询用SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">填充SQL中的参数值，按顺序填充，同名参数只需填充一次</param>
            <returns>DataTable的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteSqlInTrans(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteSql(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteSqlEx(System.String,System.Object,System.Boolean)">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <param name="_e249319708ab738f5dc3c83f344a6296">是否启动事务</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteReader(System.String,System.Object[])">
            <summary>
            执行一条指定的查询SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteReaderEx(System.String,System.Object)">
            <summary>
            执行一条指定的查询SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_Query(System.String,System.Int32,System.Int32,System.Boolean,System.Object[])">
            <summary>
            分页查询
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_7811bbb40b713402076517ee2b7e94f4">每页行数</param>
            <param name="_07bc5b9f998d67061eaeaaecb10d7028">要返回的页</param>
            <param name="_00b6316d102df12a7163e07750881ee1">是否仅查询分页数量(iReturnPage==1的时候才生效，总页数最多仅返回2页)</param>
            <param name="_be003c78de3a52d66205473100a65d68">sql参数</param>
            <returns>当前页数据DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_QueryEx(System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            查询
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_7811bbb40b713402076517ee2b7e94f4">每页行数</param>
            <param name="_07bc5b9f998d67061eaeaaecb10d7028">要返回的页</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>当前页数据DataTable</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_QueryBatchSql(System.String,System.Object[])">
            <summary>
            执行返回多个数据集的查询sql(默认不自动加事务)
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>DataTable数组</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_QueryBatchSqlEx(System.String,System.Object)">
            <summary>
            执行返回多个数据集的查询sql
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">Sql语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>DataTable数组</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_getValueBySql``1(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>返回唯一值数据</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_getEntityBySql(System.String,System.Object[])">
            <summary>
            获取一行多列，返回IEntity
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>IEntity对象</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_getValueBySqlEx``1(System.String,System.Object)">
            <summary>
            查询sql并返回单个值
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>返回值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_IsExistsBySql(System.String,System.Object[])">
            <summary>
            判断指定条件的数据是否存在
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_be003c78de3a52d66205473100a65d68">参数</param>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_IsExistsBySqlEx(System.String,System.Object)">
            <summary>
            判断指定条件的数据是否存在
            </summary>
            <param name="_7545d3f4b8a0e7bc33e2f4e9faaa86ba">要执行的SQL语句</param>
            <param name="_541854b8b30e9be0ff8ebfc3c6748813">提供参数的对象</param>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_BeginTrans(System.String)">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <param name="_416e063b70c1880df7b56247a1f0b8ab">事务名称</param>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_CommitTrans(System.String)">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <param name="_416e063b70c1880df7b56247a1f0b8ab">要提交的事务名称</param>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_BeginTrans">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_CommitTrans">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_RollBackTrans">
            <summary>
            回滚事务，若有嵌套事务，全部回滚，事务计数清零。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_InTrans">
            <summary>
            DBManager是否还在事务中
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_DataBase">
            <summary>
            数据库名称
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_CheckTransCompleted(System.Boolean)">
            <summary>
            检测事务是否完成
            </summary>
            <param name="_c0d8bcb4382871198ae79c6b6835679b">是否强制回滚</param>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_QueryBySql_Batch(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.Util.CacheSqlParam})">
            <summary>
            批量查询
            </summary>
            <param name="_b127da3980cc9e138448f53366faa92e">查询用的SQL对象集</param>
            <returns>数据包</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.m_ExecuteSql_Batch(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.Util.CacheSqlParam},System.Boolean)">
            <summary>
            批量处理SQL
            </summary>
            <param name="_b127da3980cc9e138448f53366faa92e">执行用的SQL对象集</param>
            <param name="_e249319708ab738f5dc3c83f344a6296">是否启动事务</param>
            <returns>各个SQL执行影响行数</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_bCacheMode">
            <summary>
            是否启用缓存模式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_ExecuteCache">
            <summary>
            执行缓存器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.IHSDBManager.KeepLive">
            <summary>
            保持Session连接
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.IHSDBManager.m_bQueryInTran">
            <summary>
            是否强制查询在事务中
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.IHSDBProvider">
            <summary>
            DB连接提供者
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSConnectionStringRegLoader">
            <summary>
            查找与保存连接字符串(注册表存储)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_LoadConnectString(System.String)">
            <summary>
            查找指定连接名的连接字符串(解密后的连接字符串)
            </summary>
            <param name="sConnectName">连接名</param>
            <returns>返回存储在注册表中的连接字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_SaveConnectString(System.String,System.String,System.Boolean)">
            <summary>
            保存连接字符串
            </summary>
            <param name="sConnectName">连接名</param>
            <param name="sConnectString">连接字符串</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_LoadProjectList">
            <summary>
            获取注册表中的项目名称列表
            </summary>
            <returns>项目名称列表</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_SaveProjectList(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            保存项目名称列表
            </summary>
            <param name="sConnectList">项目名称列表</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_LoadBackupConnectList">
            <summary>
            在注册表中查找所有备份的连接字符串
            </summary>
            <returns>返回解密后的所有备份连接字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSConnectionStringRegLoader.m_SaveBackupConnectList(System.Collections.Generic.IEnumerable{System.String},System.Boolean)">
            <summary>
            保存所有备份的连接字符串
            </summary>
            <param name="sConnectList">未加密的所有备份连接字符串</param>
        </member>
        <member name="T:HuanSi.Lib.DB.HSDBManager">
            <summary>
            数据库管理功能管道，所以DB操作通过此类提交给DB。
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.#ctor(HuanSi.Lib.DB.IHSDBProvider)">
            <summary>
            创建时指定连接
            </summary>
            <param name="sConnectName">应用程序连接名</param>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBManager.m_defaultParams">
            <summary>
            默认参数值列表
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_PrepareParameters(System.String,System.Data.Common.DbCommand,System.Object[])">
            <summary>
            准备参数
            </summary>
            <param name="m_sSqlText">SQL语句</param>
            <param name="vParameters">参数值</param>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_ParseCommandParameters(System.Data.Common.DbCommand,System.String)">
            <summary>
            解析Sql参数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_setDefaultParamValues(System.Data.Common.DbParameterCollection)">
            <summary>
            设置默认参数值
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_DealWithNullParameter(System.Data.Common.DbCommand)">
            <summary>
            重新设置命令SQL，参数值为空的改写成IS NULL模式
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_BeginTrans(System.String)">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <param name="sTransName">事务名称</param>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_CommitTrans(System.String)">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <param name="sTransName">要提交的事务名称</param>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_BeginTrans">
            <summary>
            开始一个事务，若已在事务中，则事务计数加一。
            </summary>
            <returns>返回当前嵌套的事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_CommitTrans">
            <summary>
            提交事务，若存在嵌套事务，则事务计数减一。
            </summary>
            <returns>执行完之后的嵌套事务个数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_RollBackTrans">
            <summary>
            回滚事务，若有嵌套事务，全部回滚，事务计数清零。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBManager.m_InTrans">
            <summary>
            当前DBManager是否还在事务中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_CheckTransCompleted(System.Boolean)">
            <summary>
            检测事务是否完成，若未正常结束，强制回滚
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_ExecuteSqlInTrans(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="sSqlText">要执行的SQL语句</param>
            <param name="vParameters">参数集合</param>
            <returns>执行的SQL影响的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_Fill(System.Data.DataTable,System.String,System.Object[])">
            <summary>
            查询数据，并填充到DataTable中
            </summary>
            <param name="aDataTable">即将接受填充数据的DataTable</param>
            <param name="sSqlText">查询用SQL语句</param>
            <param name="vParameters">填充SQL中的参数值，按顺序填充，同名参数只需填充一次</param>
            <returns>DataTable的行数</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_ExecuteReader(System.String,System.Object[])">
            <summary>
            执行一条指定的SQL语句
            </summary>
            <param name="sSqlText">要执行的SQL语句</param>
            <returns>数据读取器</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_getValueBySql``1(System.String,System.Object[])">
            <summary>
            查找单个值
            </summary>
            <param name="sSqlText">SQL语句</param>
            <param name="vParameters">参数</param>
            <returns>单个值</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_getEntityBySql(System.String,System.Object[])">
            <summary>
            获取一行多列，返回IEntity
            </summary>
            <param name="sql">要执行的SQL语句</param>
            <param name="vParameters">参数</param>
            <returns>IEntity</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.m_IsExistsBySql(System.String,System.Object[])">
            <summary>
            判断指定条件的数据是否存在
            </summary>
            <returns>数据存在，返回True</returns>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBManager.m_bCacheMode">
            <summary>
            是否启用缓存模式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBManager.m_ExecuteCache">
            <summary>
            执行缓存器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBManager.KeepLive">
            <summary>
            保持Session连接
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBManager.m_bQueryInTran">
            <summary>
            是否强制查询在事务中
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DB.HSDBUtil">
            <summary>
            DB相关的功能函数集
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBUtil.m_ToList``1(System.Data.IDataReader,System.Int32,System.Boolean)">
            <summary>
            将DataReader中的数据转换为List
            </summary>
            <typeparam name="T">类型</typeparam>
            <param name="reader">DataReader</param>
            <param name="iColumn">第几列</param>
            <param name="bDistinct">是否唯一</param>
            <remarks>此方法不可删除，在代码模板中有使用</remarks>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBUtil.m_IsTimeStampSync(HuanSi.Lib.DB.IHSDBManager,System.String,System.String,System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.IHSEntity})">
            <summary>
            判断时间戳是否同步（True=同步，未变化）
            </summary>
            <param name="dbmanager"></param>
            <param name="sTableName">表名</param>
            <param name="sKeyField">主键</param>
            <param name="entities">实体集</param>
            <returns>若时间戳变化，说明数据被修改，返回False</returns>
        </member>
        <member name="M:HuanSi.Lib.DB.HSDBUtil.m_IsTimeStampSync(HuanSi.Lib.DB.IHSDBManager,System.String,System.String,System.Object,System.Object)">
            <summary>
            判断时间戳是否同步（True=同步，未变化）
            </summary>
            <param name="dbmanager"></param>
            <param name="sTableName">表名</param>
            <param name="sKeyField">主键</param>
            <param name="key">主键值</param>
            <param name="timeStamp">时间戳</param>
            <returns>若时间戳变化，说明数据被修改，返回False</returns>
        </member>
        <member name="T:HuanSi.Lib.DB.HSDBProvider_Sql">
            <summary>
            SqlServer连接提供者
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DB.HSDBProvider_Sql.m_Connected">
            <summary>
            打开/关闭连接
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_StringToInt(System.String,System.String)">
            <summary>
            将字符串按传入的basechar转换成对应进制的数值
            </summary>
            <param name="s">如BB</param>
            <param name="sBaseChar">A－Z</param>
            <returns>27</returns>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_IntToString(System.Int32,System.String,System.Int32)">
            <summary>
            将数值按传入的basechar转换成对应进制的字符串
            </summary>
            <param name="iValue">如27</param>
            <param name="sBaseChar">如A-Z</param>
            <returns>BB</returns>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_NextZeroToNine(System.String,System.Int32,System.Int32)">
            <summary>
            返回下一个0-9排列字符
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_NextAToZ(System.String,System.Int32,System.Int32)">
            <summary>
            返回下一个A-Z的字符串
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_NextZeroToZ(System.String,System.Int32,System.Int32)">
            <summary>
            返回一下个0-Z排列的字符
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCharCalculator.m_NextCharOneToNinetySix(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            返回下一个数char值1-96的值，并排除%、_与空格
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSUniCodeHelper.m_ToUniCode(System.String,System.Boolean)">
            <summary>
            将中心转换成Unicode
            用于dfm文件解析中的中文转换
            </summary>
            <param name="s"></param>
            <param name="bHex"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSChineseLanguageToggle.m_ToSimplifiedChinese(System.String)">
            <summary>
            将字符串转换为简体中文
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSChineseLanguageToggle.m_ToSimplifiedChinese(System.String,System.Text.Encoding,System.String,System.Text.Encoding)">
            <summary>
            将文件转换为简体中文
            </summary>
            <param name="filename">源文件名</param>
            <param name="encoding">源文件字符编码</param>
            <param name="outFilename">目标文件名</param>
            <param name="outEncoding">目标文件字符编码</param>
            <example>
            <code>
            ToSimplifiedChinese("big5.txt", Encoding.GetEncoding("big5"), "gb.txt", Encoding.GetEncoding("gb2312"));
            ToSimplifiedChinese("big5.txt", Encoding.GetEncoding("big5"), "gb.txt", Encoding.UTF8);
            </code>
            </example>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSChineseLanguageToggle.m_ToTraditionalChinese(System.String)">
            <summary>
            将字符串转换为繁体中文
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSChineseLanguageToggle.m_ToTraditionalChinese(System.String,System.Text.Encoding,System.String,System.Text.Encoding)">
            <summary>
            将文件转换为繁体中文
            </summary>
            <param name="filename">源文件名</param>
            <param name="encoding">源文件字符编码</param>
            <param name="outFilename">目标文件名</param>
            <param name="outEncoding">目标文件字符编码</param>
            <example>
            <code>
            ToTraditionalChinese("gb.txt", Encoding.GetEncoding("gb2312"), "gb.txt", Encoding.GetEncoding("big5"));
            ToTraditionalChinese("gb.txt", Encoding.GetEncoding("gb2312"), "gb.txt", Encoding.UTF8);
            </code>
            </example>
        </member>
        <member name="F:HuanSi.Lib.Encode.HSCNSpellTranslator._bff94a720260fc02670d0dde0a01649c">
             summary>
            汉字拼音首字母列表 本列表包含了20902个汉字,用于配合 GetChineseSpell 函数使用,本表收录的字符的Unicode编码范围为19968至40869
             /summary>
        </member>
        <member name="M:HuanSi.Lib.Encode.HSCNSpellTranslator.m_Translate(System.String)">
             
            获得一个字符串的汉语拼音码
             
            name="strText">字符串
            汉语拼音码,该字符串只包含大写的英文字母
        </member>
        <member name="M:HuanSi.Lib.Encrypt.HSEncrypt_AES.m_Encrypt(System.String,System.String)">
            <summary>
            加密一个字符串
            </summary>
            <param name="sInputString">待加密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.Encrypt.HSEncrypt_AES.m_Decrypt(System.String,System.String)">
            <summary>
            解密一个字符串
            </summary>
            <param name="sInputString">加密字符串</param>
            <param name="sKey">密钥</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="F:HuanSi.Lib.Encrypt.HSEncrypt_DES._a3d2966696f09414eee6b0d1e1965b67">
            <summary>
            内部缺省的密钥
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Encrypt.HSEncrypt_DES.m_GenerateKey">
            <summary>
            创建Key
            </summary>
            <returns>密钥</returns>
        </member>
        <member name="M:HuanSi.Lib.Encrypt.HSEncrypt_DES.m_Encrypt(System.String,System.String)">
            <summary>
            加密一个字符串
            </summary>
            <param name="sInputString">待加密的字符串</param>
            <param name="sKey">密钥</param>
            <returns>加密后的字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.Encrypt.HSEncrypt_DES.m_Decrypt(System.String,System.String)">
            <summary>
            解密一个字符串
            </summary>
            <param name="sInputString">加密字符串</param>
            <param name="sKey">密钥</param>
            <returns>解密后的字符串</returns>
        </member>
        <member name="T:HuanSi.Lib.Media.IHSAudioRecorder">
            <summary>
            以下录音类来自NAudio官方网站里的示例:.NET Voice Recorder - Source Code
            http://voicerecorder.codeplex.com/SourceControl/latest
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.BeginMonitoring(System.Int32)">
            <summary>
            开始监听录音设备
            </summary>
            <param name="_baeac3d739a656c397e83da77e9922fc">录音设备</param>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.BeginRecording(System.String,System.Boolean)">
            <summary>
            开始录音保存到文件
            </summary>
            <param name="_aa67a07f55eea172694d748437943414">录音文件保存路径</param>
            <param name="_8efc04a9334a3a8fec3344a08c99b0a8">是否即时听写</param>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.BeginRecording(System.Boolean)">
            <summary>
            开始录音，保存在内存里
            </summary>
            <param name="_8efc04a9334a3a8fec3344a08c99b0a8">是否即时听写</param>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.RecordFilePath">
            <summary>
            录音文件路径，仅保存为文件时可获取
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.Stop">
            <summary>
            停止录音
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.RecordingState">
            <summary>
            录音状态
            </summary>
        </member>
        <member name="E:HuanSi.Lib.Media.IHSAudioRecorder.Stopped">
            <summary>
            完全停止录音事件，调用Stop后不会立马停止，关闭麦克风会有一定延时
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.RecordingFormat">
            <summary>
            录音格式
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.RecordedTime">
            <summary>
            录音时间
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.RecordData">
            <summary>
            录音数据
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Media.IHSAudioRecorder.MicrophoneLevel">
            <summary>
            麦克风电平
            </summary>
        </member>
        <member name="E:HuanSi.Lib.Media.IHSAudioRecorder.OnDictationing">
            <summary>
            听写事件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.ClearStopedEvent">
            <summary>
            清除停止事件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.IHSAudioRecorder.ClearDictationingEvent">
            <summary>
            清理听写事件
            </summary>
        </member>
        <member name="E:HuanSi.Lib.Media.HSAudioRecorder.OnDictationing">
            <summary>
            听写事件
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Media.HSAudioRecorder._94f5e93c7dd0b47eac7c069fd387b3bc">
            <summary>
            是否为开始录音
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText._416615097982dbc9690ace6583be29d0">
            <summary>
            会话ID
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText._3dcebf23568f79c7d78fae4de9713ad2">
            <summary>
            返回参数
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText._87c2d1839430531ca7a05abcad3168d8">
            <summary>
            语音识别参数
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText._a889e0d3fc92fb3fd34ebb7651be38ef">
            <summary>
            会话参数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="_87c2d1839430531ca7a05abcad3168d8"></param>
            <param name="_a889e0d3fc92fb3fd34ebb7651be38ef"></param>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText._e1ca96d1d055009a6f29682a0168ca23(System.Byte[])">
            <summary>
            语音转换文本,这里仅支持录音转换
            如果想通过麦克风识别，不能使用此方法
            因为此方法是把连续整体主意拆分成模拟麦克风200ms发送一次数据
            如果是麦克风，则需要监听麦克风的状态，来决定发送时的状态，比如开始，进行中，结束
            并且应该先在外面调用Init，之后对麦克风发送过来的每段进行传输及状态判断
            </summary>
            <param name="DataByte">完整录音</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.InstantDictationToText(HuanSi.Lib.Media.HSIFlySoundToText.AudioStatus,System.Byte[],System.Int32)">
            <summary>
            听写
            </summary>
            <param name="data">听写数据</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.ConvertRecordToText(System.Byte[])">
            <summary>
            转换录音成文字
            </summary>
            <param name="data">录音内容</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.Dispose">
            <summary>
            释放资源
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Media.HSIFlySoundToText.ASRDll">
            <summary>
            语音识别API
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.ASRDll.MSC32.QISRSessionBegin(System.String,System.String,System.Int32@)">
            <summary>
            开始一次语音识别。,获取会话ID
            </summary>
            <param name="grammarList"></param>
            <param name="_params"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Media.HSIFlySoundToText.ASRDll.MSC64.QISRSessionBegin(System.String,System.String,System.Int32@)">
            <summary>
            开始一次语音识别。,获取会话ID
            </summary>
            <param name="grammarList"></param>
            <param name="_params"></param>
            <param name="errorCode"></param>
            <returns></returns>
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.EpStatus.ISR_EP_IN_SPEECH">
            还没有检测到音频的前端点
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.EpStatus.ISR_EP_AFTER_SPEECH">
            已经检测到了音频前端点，正在进行正常的音频处理。
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.EpStatus.ISR_EP_TIMEOUT">
            检测到音频的后端点，后继的音频会被MSC忽略。
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.EpStatus.ISR_EP_ERROR">
            超时
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.EpStatus.ISR_EP_MAX_SPEECH">
            出现错误
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_NO_MATCH">
            识别成功，此时用户可以调用QISRGetResult来获取（部分）结果。
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_INCOMPLETE">
            识别结束，没有识别结果
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_NON_SPEECH_DETECTED">
            正在识别中
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_SPEECH_DETECTED">
            保留
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_SPEECH_COMPLETE">
            发现有效音频
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_MAX_CPU_TIME">
            识别结束
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_MAX_SPEECH">
            保留
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_STOPPED">
            保留
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_REJECTED">
            保留
        </member>
        <member name="F:HuanSi.Lib.Media.HSIFlySoundToText.RecogStatus.ISR_REC_STATUS_NO_SPEECH_FOUND">
            保留
        </member>
        <member name="T:HuanSi.Lib.Media.MCIMediaPlayer.Playstate">
            <summary>
            播放状态
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer._5e3b546c642a206454a982106ecc1785(System.String)">
            <summary>   
            打开MCI设备
            </summary>   
            <param name="fileName">要打开的文件名</param>   
            <returns>传值代表成功与否</returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.PlayMusic(System.String,System.Boolean)">
            <summary>   
            循环播放音乐   
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.PauseMusic">
            <summary>   
            暂停播放
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.ResumeMusic">
            <summary>   
            继续播放
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.StopMusic">
            <summary>   
            停止播放
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer._a79fdd3b1698755ffb8e842fb08f9ace(System.Int32)">
            <summary>   
            设置声音大小(1-1000)
            </summary>  
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer._cc917b49ac06a56f3e54058731e39c00(System.Int32)">
            <summary>   
            设置播放速度   
            </summary>   
            <param name="Speed"></param>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.CloseMusic">
            <summary>   
            关闭媒体   
            </summary>   
            <returns></returns>   
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.IsPlaying">
            <summary>
            获取播放状态
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.StartRecord">
            <summary>
            开始录音
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Media.MCIMediaPlayer.StopAndSaveRecord(System.String)">
            <summary>
            停止录音
            </summary>
            <param name="fileName"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.AssemblyExtensions.HasMarked``1(System.Reflection.Assembly)">
            <summary>
            程序集是否标记了指定的Attribute
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.AssemblyExtensions.GetCustomAttribute``1(System.Reflection.Assembly)">
            <summary>
            找到assembly的指定Attribute的第一个标记实例
            </summary>
            <typeparam name="TAttribute"></typeparam>
            <param name="assembly"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_ToNewTable(System.Collections.Generic.IEnumerable{System.Data.DataRowView})">
            <summary>
            返回一个架构与原Table完全一样的表(均为副本)
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_ToNewTable(System.Collections.Generic.IEnumerable{System.Data.DataRow})">
            <summary>
            返回一个架构与原Table完全一样的表(均为副本)
            </summary>
            <param name="rows"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_Assign(System.Data.DataRow,System.Data.DataRowView)">
            <summary>
            按列名进行赋值
            </summary>
            <param name="row"></param>
            <param name="view"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_Assign(System.Data.DataRow,System.Data.DataRow)">
            <summary>
            按列名进行赋值
            </summary>
            <param name="row"></param>
            <param name="fromRow"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_SaveToXml(System.Data.DataTable,System.Boolean)">
            <summary>
            保存为xml
            </summary>
            <param name="_table">DataTable</param>
            <param name="bIncludeSchema">是否包含表结构</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataTableEx.m_LoadFromXml(System.Data.DataTable,System.String)">
            <summary>
            还原DataTable，从Xml加载
            </summary>
            <param name="_table"></param>
            <param name="xml"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEventArgExtensions.m_Raise``1(``0,System.Object,System.EventHandler{``0}@)">
            <summary>
            触发事件
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="e">参数</param>
            <param name="sender">触发者</param>
            <param name="eventDelegate">事件</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEventArgExtensions.m_RaiseEx(System.EventArgs,System.Object,System.EventHandler@)">
            <summary>
            触发事件
            </summary>
            <typeparam name="TEventArgs"></typeparam>
            <param name="e">参数</param>
            <param name="sender">触发者</param>
            <param name="eventDelegate">事件</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.ExceptionExtensions.GetAllMessage(System.Exception,System.Boolean)">
            <summary>
            显示异常的所有描述信息
            </summary>
            <param name="ex"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEntityExtensions.m_IsTimeStampSync(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.IHSEntity})">
            <summary>
            判断指定的实体行的时间戳是否同步
            </summary>
            <returns>时间戳同步，返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEntityExtensions.m_ToXML(HuanSi.Lib.DB.IHSEntity,System.String,System.String)">
            <summary>
            实体输出为XML
            </summary>
            <param name="_entity">实体对象</param>
            <returns>XML文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_HasPropertyEx(System.Object,System.String,System.Reflection.BindingFlags)">
            <summary>
            指定对象是否包含指定名称的属性
            </summary>
            <param name="aSourceObject"></param>
            <param name="sPropertyNameOrFieldName"></param>
            <param name="flags">指定反射类型</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_HasPropertyEx(System.Object,System.String)">
            <summary>
            指定对象是否包含指定名称的属性，默认取该对象实例或者静态所有访问修饰符的属性与字段
            </summary>
            <param name="aSourceObject"></param>
            <param name="sPropertyNameOrFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_GetPropertyValueEx``1(System.Object,System.String)">
            <summary>
            取得属性值,默认取该对象实例或者静态所有访问修饰符的属性与字段
            </summary>
            <typeparam name="T"></typeparam>
            <param name="aSourceObject"></param>
            <param name="sPropertyNameOrFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_SetPropertyValueEx(System.Object,System.String,System.Object)">
            <summary>
            设置属性值,默认取该对象实例或者静态所有访问修饰符的属性与字段
            </summary>
            <param name="aSourceObject"></param>
            <param name="sProperyNameOrFieldName"></param>
            <param name="aValue"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_InvokeMethodEx(System.Object,System.String,System.Object[])">
            <summary>
            根据指定绑定调用方法
            </summary>
            <param name="aSourceObject"></param>
            <param name="sMethodName"></param>
            <param name="vParams"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExMethod.m_InvokeMethodEx(System.Object,System.String,System.Reflection.BindingFlags,System.Object[])">
            <summary>
            调用实例的，静态的，公开的或者不公开的方法
            </summary>
            <param name="aSourceObject"></param>
            <param name="sMethodName"></param>
            <param name="vParams"></param>
            <param name="flags"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSByteArrayExtensions.m_ToHex(System.Byte[])">
            <summary>
            字节数组转16进制字符串
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSByteArrayExtensions.ByteArrayIsEqual(System.Byte[],System.Byte[])">
            <summary>
            比较一个byte数组是否相等
            </summary>
            <param name="array1">数组1</param>
            <param name="array2">数组2</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSControlExtensions.m_FindControl(System.Windows.Forms.Control,System.String)">
            <summary>
            递归查找控件第一个，但不会进入Frame进行查询
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSControlExtensions.m_SetVisible(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置控件是否显示
            </summary>
            <param name="_control"></param>
            <param name="_visible">true为显示，false为隐藏</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSControlExtensions._c036391a4d86ce98aa1e14bbc5fbf48f(System.Windows.Forms.Control,System.Boolean)">
            <summary>
            设置控件是否显示
            </summary>
            <param name="_control"></param>
            <param name="_visible">true为显示，false为隐藏</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSControlExtensions.m_SetVisible(HuanSi.XtraBars.BarItem,System.Boolean)">
            <summary>
            设置控件是否显示
            </summary>
            <param name="_control"></param>
            <param name="_visible">true为显示，false为隐藏</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSControlExtensions.m_SetVisible(HuanSi.XtraLayout.BaseLayoutItem,System.Boolean)">
            <summary>
            设置控件是否显示
            </summary>
            <param name="_control"></param>
            <param name="_visible">true为显示，false为隐藏</param>
        </member>
        <member name="T:HuanSi.Lib.Reflection.HSEnumExtensions">
            <summary>
            枚举扩展函数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEnumExtensions.m_IncludeEnum(System.Object,System.Object)">
            <summary>
            判断枚举集合中是否包含指定枚举值
            </summary>
            <param name="aEnumSet">枚举集合</param>
            <param name="enums">指定枚举值</param>
            <returns>包含返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEnumExtensions.m_IncludeAnyEnum``1(``0,``0[])">
            <summary>
            判断集合枚举值是否包含参数枚举值
            </summary>
            <typeparam name="T">集合枚举类型</typeparam>
            <param name="aEnumSet">集合枚举</param>
            <returns>包含任意一个返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEnumExtensions.m_InEnum(System.Object,System.Object[])">
            <summary>
            判断某个枚举值是否在枚举集合中
            </summary>
            <param name="aEnum">指定枚举值</param>
            <param name="aEnumSet">枚举集合</param>
            <returns>包含返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEnumExtensions.m_AddEnum``1(System.Object,``0[])">
            <summary>
            枚举值加法
            </summary>
            <param name="aEnum">指定枚举值</param>
            <param name="aEnumSet">要累加的枚举值</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSEnumExtensions.m_DecEnum``1(System.Object,``0[])">
            <summary>
            枚举值减法
            </summary>
            <param name="aEnum">指定枚举值</param>
            <param name="aEnumSet">要减去的枚举值</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSTreeListExtensions.m_GetBindingEntitySet(HuanSi.XtraTreeList.TreeList,System.Boolean)">
            <summary>
            获取TreeList绑定的EntitySet
            </summary>
            <param name="treeList">TreeList</param>
            <param name="bThrow">若绑定的不是EnittySet，是否抛出异常</param>
            <returns>绑定的HSBaseEntitySet对象</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSTreeListExtensions.m_GetSelectedRowObjects``1(HuanSi.XtraTreeList.TreeList)">
            <summary>
            得到TreeList当前选中行列表
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Reflection.HSUserControlExtensions">
            <summary>
            主要针对UserControl的一些扩展方法
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSUserControlExtensions._3bcaf103a36a699690febf983defdeb7(System.Windows.Forms.UserControl,System.Windows.Forms.FormWindowState)">
            <summary>
            设置UserControl外部的容器FORM的一些属性及状态
            </summary>
            <param name="_ctl"></param>
            <param name="_formWindowState"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_CreateColumns(HuanSi.XtraGrid.Views.Grid.GridView,System.Boolean,System.Int32,System.String[])">
            <summary>
            自动生成所有列信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_GetSelectedRowObjects``1(HuanSi.XtraGrid.Views.Grid.GridView,System.Boolean)">
            <summary>
            得到Grid当前选中行列表
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_GetBindingEntitySet(HuanSi.XtraGrid.Views.Grid.GridView,System.Boolean)">
            <summary>
            获取GridView绑定的EntitySet
            </summary>
            <param name="aGridView">GridView</param>
            <param name="bThrow">若绑定的不是EnittySet，是否抛出异常</param>
            <returns>绑定的HSBaseEntitySet对象</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_GetSelectedEntitySet(HuanSi.XtraGrid.Views.Grid.GridView)">
            <summary>
            获取Grid选中行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_GetFilterEntitySet(HuanSi.XtraGrid.Views.Grid.GridView)">
            <summary>
            获取Grid选中行数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_SetSelectedRows(HuanSi.XtraGrid.Views.Grid.GridView,System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>
            设置gridView选中行，如果传入多个值，则自动设置gridView为多选
            </summary>
            <param name="_gridView">gridView</param>
            <param name="_keyValues">要选中行的主键列值集合</param>
            <param name="_keyField">主键列名</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_BindingCustomGridMergeFields(HuanSi.XtraGrid.Views.Grid.GridView,System.String)">
            <summary>
            合并单元格,说明:
            设置通过换行符分隔,例:
            sField1
            sField2=sField2,sField3
            sField4=sField4,sField5,sField6 {..n}
            带=号的合并表示目标列，比如sField2必须由sField2与sField3的值决定是否合并，并且，条件列必须包含目标列本身
            不带=号的合并列，表示按自己的列值进行合并
            该功能完全可以覆盖原生GridView的单列合并
            并且支持多列合并的情况
            </summary>
            <param name="_gridView">要绑定的GridView</param>
            <param name="_sMergeFields">要合并的字段设置</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions._8177d8894f9b4b3a35d5963fc87c281a(System.String[])">
            <summary>
            验证多列合并的值
            </summary>
            <param name="sMulitFieldMergeList"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_EnableGridViewCopyAndPaste(HuanSi.XtraGrid.Views.Grid.GridView)">
            <summary>
            实现gridView的复制粘贴操作
            </summary>
            <param name="view"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions._c8ab5509ecd0a6341a06710a5f11eeb0(HuanSi.XtraGrid.Views.Base.GridCell[],System.Boolean)">
            <summary>
            验证选择的列是否合法
            必须是连续的列
            </summary>
            <param name="cells"></param>
            <param name="bCopyDataIsSingCellRow">来源数据(也就是已经复制下来的数据)是否为单列单行值</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_AutoCreatePivotColumns(HuanSi.XtraGrid.Views.Grid.GridView,System.String)">
            <summary>
            自动创建转置列
            </summary>
            <param name="_gridView">所属GridView</param>
            <param name="_sSplitChars">转置列的分隔符,此分隔符为单个字符，如果有多列如果值为_.则代表有2个分隔符</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions.m_EnableAutoRowColor(HuanSi.XtraGrid.Views.Grid.GridView)">
            <summary>
            启用自动行颜色，根据SQL里配置的颜色列变更行颜色
            </summary>
            <param name="_gridView"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions._9127c43ca15b73ca098106dcff6b0050(HuanSi.XtraGrid.Views.Grid.GridView,System.String[],System.String[])">
            <summary>
            绑定行颜色事件
            </summary>
            <param name="_gridView"></param>
            <param name="colorSettingFields"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataGridExtensions._afe9f3771ca58b8990c01fec7dc2c9b3(HuanSi.XtraGrid.Views.Grid.GridView,System.String[],System.String[])">
            <summary>
            绑定列颜色事件
            </summary>
            <param name="_gridView"></param>
            <param name="colorSettingFields"></param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSDataReaderExtensions._a9ed5126d4371aeac81c3ff9f7c053f1(System.Data.DataTable,System.Data.DataTable)">
            <summary>
            删除newTable在table中已存在的行
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_Where``2(System.Collections.Generic.IEnumerable{``0},``1,System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            在实体数据集中查找指定条件的所有实体
            </summary>
            <typeparam name="T2">提供条件数据的类名</typeparam>
            <param name="aObject">提供条件数据的实体类</param>
            <param name="predicate">查找匹配条件</param>
            <returns>实体集合</returns>
            <![CDATA[
            EntitySet<dvCodeTemplateParam> a=new EntitySet<dvCodeTemplateParam>();
            foreach(dvCodeTemplateParam d in a.Where<dvCodeTemplate>(aCodeTemplate,(x,y)=>x.iCodeTemplateId==y.iIden));
            ]]>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_Any``2(System.Collections.Generic.IEnumerable{``0},``1,System.Linq.Expressions.Expression{System.Func{``0,``1,System.Boolean}})">
            <summary>
            实体数据集中指定条件的数据是否存在
            </summary>
            <param name="aObject">提供条件数据的实体类</param>
            <param name="predicate">查找匹配条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_In``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``1,``0,System.Boolean}})">
            <summary>
            当前实体数据集内存在于指定实体数据集中的指定数据行，即取两个实体数据集的交集
            </summary>
            <param name="aList">指定实体数据集</param>
            <param name="predicate">查找匹配条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_NotIn``2(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``1},System.Linq.Expressions.Expression{System.Func{``1,``0,System.Boolean}})">
            <summary>
            当前实体数据集内不存在于指定实体数据集的所有数据行，即差集
            </summary>
            <param name="aList">指定实体数据集</param>
            <param name="predicate">查找匹配条件</param>
            <returns>实体集合</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_DeleteAll``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            设置实体集合中所有实体类为删除
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_SerializeXML``1(System.Collections.Generic.IEnumerable{``0},System.Data.XmlWriteMode,System.String[])">
            <summary>
            将实体的枚举接口序列为XML
            </summary>
            <typeparam name="TEntity">要序列化的实体类型</typeparam>
            <param name="entitys">要序列化的实体集合</param>
            <param name="xmlWriteMode">指定如何写入 XML 数据和关系架构,默认忽略 XSD 架构</param>
            <returns>序列化的字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_SerializeXMLEx``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String)">
            <summary>
            实体类序列化成XML
            </summary>
            <typeparam name="TEntity">TEntity</typeparam>
            <param name="entities">实体集</param>
            <param name="sFieldList">要输出到XML中的字段</param>
            <param name="sNotCopyFields">不输出到XML中的字段</param>
            <returns>XML</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_ModifiedXMLEx``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String,System.Data.DataRowState,HuanSi.Lib.DB.IHSEntitySet)">
            <summary>
            生成修改XML
            </summary>
            <typeparam name="TEntity">TEntity</typeparam>
            <param name="entities">实体集</param>
            <param name="sDeleteFields">要删除的字段</param>
            <param name="sReturnFields">XML中要保留的字段</param>
            <param name="sDeleteIden">要删除的行的主键</param>
            <returns>XML</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_ModifiedXML``1(System.Collections.Generic.IEnumerable{``0},System.String,System.String,System.String)">
            <summary>
            返回实体集的修改数据XML
            </summary>
            <typeparam name="TEntity">TEntity</typeparam>
            <param name="entities">Entity集合</param>
            <param name="sNotCopyFields">不拷贝字段</param>
            <param name="sDeleteIden">sDeleteIden</param>
            <returns>ModifiedXML</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions._e492114fae3e7082da6a2948a44132ef(System.Int32,System.Int32,System.Int32)">
            <summary>
            返回最大的序号
            </summary>
            <param name="iLength"></param>
            <param name="iMin"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_Up``1(System.Collections.Generic.IEnumerable{``0},System.Object,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            向上移动,移动的为对象的序号字段
            </summary>
            <typeparam name="T">集合类型</typeparam>
            <param name="upList">要向上的列表</param>
            <param name="owner">原始集合，也就是当前移动项所属的列表</param>
            <param name="sOrderPropertyName">排序属性名,不区分大小写</param>
            <param name="iMin">最小值，默认为1,不满足最小值的项将会被排除</param>
            <param name="iSpacing">间隔值</param>
            <param name="bSwap">是否互换，与上一行互换排序值，为true时 间隔值无效</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_Down``1(System.Collections.Generic.IEnumerable{``0},System.Object,System.String,System.Int32,System.Int32,System.Boolean)">
            <summary>
            向下移动,移动的为对象的序号字段
            </summary>
            <typeparam name="T">集合类型</typeparam>
            <param name="downList">要向下的列表</param>
            <param name="owner">原始集合，也就是当前移动项所属的列表</param>
            <param name="sOrderPropertyName">排序属性名,不区分大小写</param>
            <param name="iMin">最小值，默认为1,不满足最小值的项将会被排除</param>
            <param name="iSpacing">间隔值</param>
            <param name="bSwap">是否互换，与上一行互换排序值，为true时 间隔值无效</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_UpToTop``1(System.Collections.Generic.IEnumerable{``0},System.Object,System.String,System.Int32,System.Int32)">
            <summary>
            置顶操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="upList">置顶的集合</param>
            <param name="owner">原始集合，也就是当前移动项所属的列表</param>
            <param name="sOrderPropertyName">排序属性名,不区分大小写</param>
            <param name="iMin">最小值，默认为1,不满足最小值的项将会被排除</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_DownToBottom``1(System.Collections.Generic.IEnumerable{``0},System.Object,System.String,System.Int32,System.Int32)">
            <summary>
            置底操作
            </summary>
            <typeparam name="T"></typeparam>
            <param name="downList">置底的集合</param>
            <param name="owner">原始集合，也就是当前移动项所属的列表</param>
            <param name="sOrderPropertyName">排序属性名,不区分大小写</param>
            <param name="iMin">最小值，默认为1,不满足最小值的项将会被排除</param>
            <param name="iSpacing">间隔值</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_AutoSort(System.Object,System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            自动排序
            </summary>
            <param name="owner">自动排序的集合</param>
            <param name="sOrderPropertyName">排序属性名,不区分大小写</param>
            <param name="iMin">最小值，默认为1,不满足最小值的项将会被排除</param>
            <param name="iFilterMin">筛选过滤最小值,即排序集合中小于此值的都被忽略</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_SetFieldsReadOnly(System.Data.DataTable,System.Boolean)">
            <summary>
            设置表字段是否只读
            </summary>
            <param name="_aTable">表</param>
            <param name="_bIsReadOnly">是否只读</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_SetFieldsReadOnly(HuanSi.Lib.DB.HSBaseEntitySet,System.Boolean)">
            <summary>
            设置EntitySet对应的表字段是否只读
            </summary>
            <param name="_aEntitySet">EntitySet</param>
            <param name="_bIsReadOnly">是否只读</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.IHSEnumerableExtensions.m_GetHSEntitySet(System.Collections.Generic.IEnumerable{HuanSi.Lib.Session.SessionInfo})">
            <summary>
            Session列表转为EntitySet,因为SessionInfo里面全部为字段无法绑定
            </summary>
            <param name="sessionList"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_GetPropertyValue(System.Object,System.String)">
            <summary>
            获取对象的指定属性值
            </summary>
            <param name="aObject">提供数据的对象</param>
            <param name="sPropertyName">属性名</param>
            <returns>属性值</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_HasProperty(System.Object,System.String)">
            <summary>
            判断对象中是否有指定的属性
            </summary>
            <param name="aObject">指定对象</param>
            <param name="sPropertyName">属性名</param>
            <returns>存在返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_SetPropertyValue(System.Object,System.String,System.Object)">
            <summary>
            设置对象的指定属性的值
            </summary>
            <param name="aObject">对象</param>
            <param name="sPropertyName">属性名</param>
            <param name="aPropertyValue">要设置的属性值</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_InvokeMethod(System.Object,System.String,System.Object[])">
            <summary>
            动态调用对象方法
            </summary>
            <param name="aObject">对象</param>
            <param name="sMethodName">方法名</param>
            <param name="Params">参数集合</param>
            <returns>方法执行返回值</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_AssignProp(System.Object,System.Object,System.String[])">
            <summary>
            对象属性赋值，按属性名相同
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_ValidateNull(System.Object,System.String,System.Object)">
            <summary>
            检查变量是否为空
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_ParseSqlTypeByParamPrefix(System.String)">
            <summary>
            通过参数名第一位前缀来解析参数的Sql数据类型
            </summary>
            <param name="sParamName">参数名(不带:或@)</param>
            <returns>参数的SqlDBType</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSObjectExtensions.m_ParseTypeByParamPrefix(System.String)">
            <summary>
            通过参数名第一位前缀来解析参数的c#数据类型
            </summary>
            <param name="sParamName">参数名(不带:或@)</param>
            <returns>参数的SqlDBType</returns>
        </member>
        <member name="T:HuanSi.Lib.Reflection.HSClipBoardExtensions">
            <summary>
            剪切板扩展方法
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSClipBoardExtensions.m_Copy(System.Windows.Forms.Clipboard)">
            <summary>
            剪切板的自动拷贝，等同于按下Ctrl+C键
            </summary>
            <param name="bd">剪切板对象</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSClipBoardExtensions.m_Paste(System.Windows.Forms.Clipboard)">
            <summary>
            剪切板的自动粘贴，等同于按下Ctrl+V键
            </summary>
            <param name="bd">剪切板对象</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Strings(System.String,System.Int32,System.String[])">
            <summary>
            获取指定文本之前的所有文本
            </summary>
            <param name="sText">全文本</param>
            <param name="sSeparator">分隔符</param>
            <param name="iIndex">分隔成List后要返回的Index，从１开始计数</param>
            <returns>分隔符分隔后的指定位置文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_ByteLength(System.String)">
            <summary>
            计算字符串占用的字节数("蔡志辉ABC".ByteLength=9)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IncludeNotIn(System.String,System.String,System.String,System.String)">
            <summary>
            S中是否存在key（但不在p1与p2之间）
            如"abc'de'fg"IncludeNotIn("de",",",",)"返回False
            </summary>
            <param name="s"></param>
            <param name="key"></param>
            <param name="p1"></param>
            <param name="p2"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IsDigit(System.String)">
            <summary>
            判断某个字符串是否是数字
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IsWord(System.String,System.Boolean)">
            <summary>
            判断某个字符串是否是单词
            </summary>
            <param name="bIncludeDigit">数字是不是单词组成部分</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_ReplaceWord(System.String,System.String,System.String,System.Int32,System.StringComparison,System.StringComparison,System.String[])">
            <summary>
            单词替换
            </summary>
            <param name="Expression">完整文本</param>
            <param name="Find">要被替换的文本</param>
            <param name="Replacement">替换文本</param>
            <param name="_iCount">替换次数</param>
            <param name="compReplace">匹配find时的对比方式</param>
            <param name="compSplit">匹配分隔符时的对比方式</param>
            <param name="sSeparator">分隔符</param>
            <returns>替换后的完整文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_SplitEx(System.String,System.StringComparison,System.Boolean,System.String[])">
            <summary>
            将字符串拆分成字符数据，并保留分隔符在返回的数组中
            </summary>
            <param name="s">要拆分的字符串</param>
            <param name="sSeparator">分隔符</param>
            <returns>字符串数组</returns>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Reflection.HSStringExtensions.m_FindMatchBracePosition(System.String,System.String,System.String,System.Int32)”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_CountNotIn(System.String,System.String,System.String,System.String)">
            <summary>
            计算字符串中指定字符出现的次数(p1与p2之间的除外)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Split(System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            按指定字符分解字符串
            </summary>
            <param name="sCode">原字符串</param>
            <param name="p1">排除范围的前置字符</param>
            <param name="p2">排除范围的后置字符</param>
            <param name="splitor">分隔符</param>
            <param name="sNotIn">排除范围的前后置字符数组</param>
            "AA(a,b),BB(c,d)".m_Split(",","(",")")==>AA(a,b)|BB(c,d)
            <returns>如不在{}之内的逗号分隔</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Split(System.String,System.String,System.String,System.String,System.Boolean,System.Boolean,System.String[])">
            <summary>
            按指定字符分解字符串
            </summary>
            <param name="sCode">原字符串</param>
            <param name="p1">排除范围的前置字符</param>
            <param name="p2">排除范围的后置字符</param>
            <param name="splitor">分隔符</param>
            <param name="bIncludeSplitor">是否包含分隔符</param>
            <param name="sNotIn">排除范围的前后置字符数组</param>
            "AA(a,b),BB(c,d)".m_Split(",","(",")")==>AA(a,b)|BB(c,d)
            <returns>如不在{}之内的逗号分隔</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_RemoveString(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            移除字符串
            </summary>
            <param name="sCode"></param>
            <param name="notInCharsRange">2个字符串范围内的全部移除</param>
            <returns></returns>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Reflection.HSStringExtensions.m_FindWord(System.String,System.StringComparison,System.String[])”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IncludeWord(System.String,System.StringComparison,System.String[])">
            <summary>
            是否包含单词
            </summary>
            <param name="sText">全文本</param>
            <param name="words">要查找的单词</param>
            <returns>找到任意一个，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IsEqual(System.String,System.String,System.StringComparison)">
            <summary>
            判断两个字符串是否相等(忽略大小写与首尾空格)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Match(System.String,System.String,System.Boolean,System.Boolean)">
            <summary>
            判断字符串是否匹配指定的模板
            </summary>
            <param name="s">字符串</param>
            <param name="sPattern">匹配模板</param>
            <param name="bIgnoreCase">是否忽略大小写</param>
            <param name="bIgnoreSpace">是否忽略空格</param>
            <returns>匹配返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Between(System.String,System.String,System.String,System.Boolean,System.Int32@)">
             <summary>
             查找指定字符中指定字符间的字符
             </summary>
             <param name="preWord">开始字符串</param>
            <param name="afterWord">结束字符串</param>
            <param name="iStart">开始位置</param>
            <param name="bIncludeSelf">是否包含自己</param>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_Between(System.String,System.String,System.String,System.Boolean,System.Boolean)">
             <summary>
             查找指定字符中指定字符间的字符
             </summary>
             <param name="preWord">开始字符串</param>
            <param name="afterWord">结束字符串</param>
            <param name="bIncludeSelf">是否包含自己</param>
            <param name="bMatchBracePosition">是否按出现位置匹配</param>
             <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_FindMatchBracePosition(System.String,System.Char,System.Char,System.Int32)">
            <summary>
            查找代码中的指定配套字符位置信息，如{}，&lt;&gt;等
            </summary>
            <param name="sCode">代码文本</param>
            <returns>返回所有{与对应的}的位置信息</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_GreaterThan(System.String,System.String)">
            <summary>
            返回s1是否大于s2
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_CSharpConfusion(System.String,System.String)">
            <summary>
            c#混淆
            </summary>
            <param name="_sSourceCode"></param>
            <param name="_sPrivateKeys"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_CSharpAutoConfusion(System.String,System.String)">
            <summary>
            c#自动混淆混淆,自动判断是否需要混淆
            </summary>
            <param name="_sSourceCode"></param>
            <param name="_sPrivateKeys"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_ParseCharType(System.String)">
            <summary>
            解析输入字符串包含哪些字符类型
            </summary>
            <param name="sInput">输入字符串</param>
            <returns>返回字符串包含的字符类型</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IsCharType(System.String,HuanSi.Lib.Enums.HSCharType)">
            <summary>
            判断输入字符串是否在指定的字符类型中
            </summary>
            <param name="sInput">输入字符串</param>
            <param name="charType">字符类型</param>
            <returns>在字符类型范围内时返回true，否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Reflection.HSStringExtensions.m_IsTrue(System.String)">
            <summary>
            判断字符串是否bool类型true或数据库类型bit值1
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Log.IHSDebug">
            <summary>
            日志记录器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEnter">
            <summary>
            添加进入日志
            </summary>
            <returns>iLogDeep日志层级</returns>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogLeave(System.Int32)">
            <summary>
            添加离开日志
            </summary>
            <param name="_8e6ae2b80ad4259a4fcb7d8de421a085">iLogDeep</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogStart(System.String,System.String[])">
            <summary>
            添加开始日志
            </summary>
            <param name="_1d6c4800a9f9c3fb8c89a641ce8bfd5d">消息文本</param>
            <param name="_a989c32628deb5f7a644604cf13a3d1b">参数，用于Format消息文本</param>
            <returns>iLogDeep日志层级</returns>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEnd(System.Int32)">
            <summary>
            添加结束日志
            </summary>
            <param name="_8e6ae2b80ad4259a4fcb7d8de421a085">iLogDeep日志层级</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEnd(System.Int32,System.Boolean)">
            <summary>
            添加结束日志
            </summary>
            <param name="_8e6ae2b80ad4259a4fcb7d8de421a085">iLogDeep日志层级</param>
            <param name="_5e30bcaa03028756823767bd9058172c">bSucceed是否成功</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEnd(System.Int32,System.Boolean,System.String,System.String[])">
            <summary>
            添加结束日志
            </summary>
            <param name="_8e6ae2b80ad4259a4fcb7d8de421a085">iLogDeep日志层级</param>
            <param name="_5e30bcaa03028756823767bd9058172c">bSucceed是否成功</param>
            <param name="_1d6c4800a9f9c3fb8c89a641ce8bfd5d">消息文本</param>
            <param name="_a989c32628deb5f7a644604cf13a3d1b">参数，用于Format消息文本</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogMessage(System.String,System.String[])">
            <summary>
            添加一条日志，写入一个消息文本
            </summary>
            <param name="_1d6c4800a9f9c3fb8c89a641ce8bfd5d">消息文本</param>
            <param name="_a989c32628deb5f7a644604cf13a3d1b">参数，用于Format消息文本</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogVar(System.Object,System.String)">
            <summary>
            添加一条日志，写入对象值
            </summary>
            <param name="_60736e7c58aee86e6c8a424ebbb13d73">对象实例</param>
            <param name="_ac0de1227606baf05607cfeedbf79200">对象名</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEntitySet(HuanSi.Lib.DB.HSBaseEntitySet,System.String)">
            <summary>
            添加一条日志，写入一个实体的XML数据包
            </summary>
            <param name="_a7590a2a8626b26f46b3c06e8552a393">实体集对象</param>
            <param name="_546c29f0ae356fbf52f4425090255ba1">实体集名</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogModifiedEntitySet(HuanSi.Lib.DB.HSBaseEntitySet,System.String)">
            <summary>
            添加一条日志，写入一个实体的修改数据的XML数据包
            </summary>
            <param name="_a7590a2a8626b26f46b3c06e8552a393">实体集对象</param>
            <param name="_546c29f0ae356fbf52f4425090255ba1">实体集名</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogEntity(HuanSi.Lib.DB.IHSEntity,System.String)">
            <summary>
            添加一条日志，写入单行实体的XML数据
            </summary>
            <param name="_14a5572dd477fba595c39f54b6cfca77">实体对象</param>
            <param name="_1d6c4800a9f9c3fb8c89a641ce8bfd5d">消息文本</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogCache(HuanSi.Lib.DB.Cache.IHSCacheBase,System.String)">
            <summary>
            添加一条日志，记录缓存器信息
            </summary>
            <param name="_d74cacb158b095de50f227d92a31040f">缓存器对象</param>
            <param name="_1d6c4800a9f9c3fb8c89a641ce8bfd5d">消息文本</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogDataTable(System.Data.DataTable,System.String)">
            <summary>
            添加一条日志，记录DataTable的XML数据包
            </summary>
            <param name="_181381396ae232d034a33f5d1bc1488b">Table对象</param>
            <param name="_7bb31246dba530ffdaa81e8bdd5c03fe">TableName</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSDebug.m_LogModifiedDataTable(System.Data.DataTable,System.String)">
            <summary>
            添加一条日志，记录DataTable的修改部分的XML数据包
            </summary>
            <param name="_181381396ae232d034a33f5d1bc1488b">Table对象</param>
            <param name="_7bb31246dba530ffdaa81e8bdd5c03fe">TableName</param>
        </member>
        <member name="M:HuanSi.Lib.Log.IHSLogReader.m_Load(System.Int32,HuanSi.Lib.Log.HSLogLevel,System.String[])">
            <summary>
            读取日志记录
            </summary>
            <returns>日志记录列表(仅返回Start与Data类型)</returns>
        </member>
        <member name="T:HuanSi.Lib.Log.HSLogEncryptor">
            <summary>
            日志加密器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Log.HSLogger.m_Log(HuanSi.Lib.Log.HSLogItem)">
            <summary>
            将已完成的日志记录写入日志文件
            </summary>
            <param name="aLogItem">日志记录对象</param>
        </member>
        <member name="T:HuanSi.Lib.Log.HSLogReader">
            <summary>
            日志阅读器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Log.HSLogReader.m_LoadLogText(System.Int32)">
            <summary>
            加载最后指定登录次数的日志
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Log.HSLogReader.m_Load(System.Int32,HuanSi.Lib.Log.HSLogLevel,System.String[])">
            <summary>
            加载日志
            </summary>
            <param name="iLogCount">加载最后N次登录的日志</param>
            <param name="level">加载的日志级别</param>
            <param name="hideFilters">要屏蔽的日志</param>
        </member>
        <member name="M:HuanSi.Lib.Log.HSLogReader._45915b756685735a6ad2aa302a39a7d0(System.String)">
            <summary>
            创建默认LogItem对象
            </summary>
            <param name="data">单个Log文本</param>
            <returns></returns>
        </member>
        <member name="P:HuanSi.Lib.Log.HSLogWriter.LogFile">
            <summary>
            Log文件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Log.HSLogWriter.m_Shrink">
            <summary>
            收缩日志
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_bAutoAddCurrAssemblies">
            <summary>
            是否自动添加当前DLL所有引用DLL到动态代码中
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_sDefaultDllPath">
            <summary>
            引用DLL查找的默认路径
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_sOutputDir">
            <summary>
            输出目录
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler._3af97623041b03757a6b078d73da968b">
            <summary>
            编译的DLL文件,只有编译后用其他应用程序域加载时才会写值
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_bDirHidden">
            <summary>
            编译的目标文件夹是否设置为隐藏
            </summary>
        </member>
        <member name="F:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_bDeleteFile">
            <summary>
            在卸载应用程序域的同时是否删除文件
            </summary>
        </member>
        <member name="P:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_frameworkAssemblies">
            <summary>
            有时候在AppDomain.CurrentDomain.GetAssemblies()取到的dll不包含某些.net framework自带的dll，必须再添加
            因为AppDoMain只有在使用dll时才加载，所以在动态编译前，程序集里面的引用不一定会全部加载
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_Compile(System.String)">
            <summary>
            编译整类代码
            </summary>
            <param name="sCode">类代码(含Field、Property、Method)</param>
            <returns>编译出的类的实例对象</returns>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_Invoke``1(System.String)">
            <summary>
            动态执行表达式
            </summary>
            <typeparam name="T">返回值类型</typeparam>
            <param name="sExpress">表达式</param>
            <returns>表达式计算结果值</returns>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_Invoke``1(System.String,System.String,System.Object[])">
            <summary>
            调用并执行单个方法
            </summary>
            <typeparam name="T">方法返回类型</typeparam>
            <param name="sFuncCode">方法完整代码</param>
            <param name="vParameters">传入的参数值</param>
            <returns>方法执行结果</returns>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler._44891e19d1fbec6b7ec800ba3692a17e(System.String)">
            <summary>
            生成代码
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_CompileDllByFullCode(System.String,System.String)">
            <summary>
            编译DLL，传入全代码(从using开始)
            </summary>
            <param name="sFullCode"></param>
            <param name="sDLLName"></param>
            <param name="sCompileVersion"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.HSCSharpDynamicCodeCompiler.m_CompileDll(System.String,System.String)">
            <summary>
            传入代码与DLL名称，返回编译后DLL的全路径,此代码会与本类生成的代码自动合并
            </summary>
            <param name="sCode">代码</param>
            <param name="sDllName">路径</param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.DynamicCode.HSDynamicObject">
            <summary>
            动态编译对象
            </summary>
        </member>
        <member name="T:HuanSi.Lib.DynamicCode.IHSDynamicCodeCompiler">
            <summary>
            动态代码编译器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.IHSDynamicCodeCompiler.m_CompileDllByFullCode(System.String,System.String)">
            <summary>
            编译DLL，传入全代码(从using开始)
            </summary>
            <param name="_04d7a570b753f7b5961d3a84a6a756d3"></param>
            <param name="_1e93bb2b7ccf802da5b461da4d6c38ef"></param>
            <param name="sCompileVersion"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.DynamicCode.IHSDynamicCodeCompiler.m_CompileDll(System.String,System.String)">
            <summary>
            传入代码与DLL名称，返回编译后DLL的全路径,此代码会与本类生成的代码自动合并
            </summary>
            <param name="_edb296122f99672664c5041730eee74e"></param>
            <param name="_01bd081861a9303b57d9df4a361313e8"></param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.Business.HSIdenGenerator">
            <summary>
            Iden主键生成器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_setMaxIden(System.Int32,System.String,System.Int32)">
            <summary>
            设置最大Iden值，一般用于清空Iden值，仅工具内使用
            </summary>
            <param name="sGroup">组别</param>
            <param name="iMaxIden">最大Iden值</param>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_ClearIdenGroup(System.Int32,System.String)">
            <summary>
            清空Iden组
            </summary>
            <param name="sGroup">组别</param>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_QueryMaxIden(System.String)">
            <summary>
            查询指定组别的当前最大Iden
            </summary>
            <param name="sGroup">指定组别名称</param>
            <returns>当前最大Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_setBatchCount(System.String,System.Int32)">
            <summary>
            设置递增批量
            </summary>
            <param name="sGroup">IdenGroup</param>
            <param name="iBatchCount">递增批量</param>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_NewIden(System.String)">
            <summary>
            新生成指定个数的Iden
            </summary>
            <param name="sGroup">指定组别名称</param>
            <returns>新生成的第一个Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_NewIden(System.String,System.Int32)">
            <summary>
            新生成指定个数的Iden
            </summary>
            <param name="sGroup">指定组别名称</param>
            <param name="iCount">生成Iden的个数</param>
            <returns>新生成的第一个Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_NewIden(System.String,System.Int32,System.Int32)">
            <summary>
            新生成指定个数的Iden
            </summary>
            <param name="sGroup">指定组别名称</param>
            <param name="iCount">生成Iden的个数</param>
            <param name="iStart">iStart,起始Iden</param>
            <returns>新生成的第一个Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_MaxIden(System.String)">
            <summary>
            指定组别当前最大Iden号
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.HSIdenGenerator.m_PeekNewIden(System.String,System.Int32,System.Int32)">
            <summary>
            预选批量加载Iden
            </summary>
            <param name="sGroup">IdenGroup</param>
            <param name="iCount">预申请Iden个数</param>
            <param name="iStart">起始Iden</param>
        </member>
        <member name="T:HuanSi.Lib.Business.IHSIdenGenerator">
            <summary>
            Iden生成器接口
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_NewIden(System.String)">
            <summary>
            生成新的Iden
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <returns>新的Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_NewIden(System.String,System.Int32)">
            <summary>
            生成新的Iden
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <param name="_c15e6d4ebdbe3a52a7c434108de817ee">生成个数，默认=1</param>
            <returns>新的Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_NewIden(System.String,System.Int32,System.Int32)">
            <summary>
            生成新的Iden
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <param name="_c15e6d4ebdbe3a52a7c434108de817ee">生成个数，默认=1</param>
            <param name="_4ba2c92204ebf6e9b7596cdeaeb8ae33">起始Iden，默认=1000</param>
            <returns>新的Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_MaxIden(System.String)">
            <summary>
            查询指定组别的最大Iden
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <returns>最大Iden</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_setBatchCount(System.String,System.Int32)">
            <summary>
            设置递增批量
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <param name="_566239a720726c85b092a711cf6261ae">递增批量</param>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSIdenGenerator.m_PeekNewIden(System.String,System.Int32,System.Int32)">
            <summary>
            预选批量加载Iden
            </summary>
            <param name="_5b7edb85a26911637aad07d2157d448b">IdenGroup</param>
            <param name="_c15e6d4ebdbe3a52a7c434108de817ee">预申请Iden个数</param>
            <param name="_4ba2c92204ebf6e9b7596cdeaeb8ae33">起始Iden</param>
        </member>
        <member name="T:HuanSi.Lib.Business.IHSBillLockor">
            <summary>
            业务锁
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSBillLockor.m_Lock(HuanSi.Lib.Business.HSBillLockInfo)">
            <summary>
            添加业务锁
            </summary>
            <param name="_db8fc17b40e5af401b27d476f398615d">业务锁信息</param>
            <returns>是否锁定成功</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSBillLockor.m_UnLock(System.Int32)">
            <summary>
            业务锁解锁
            </summary>
            <param name="_f8a0449e4ad62ec578b584236ddb343e">锁Iden</param>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSBillLockor.m_IsLocked(System.Int32,HuanSi.Lib.Business.HSBillLockOperate,System.String)">
            <summary>
            判断指定单据的指定操作是否已被锁住
            </summary>
            <param name="aLockType">业务锁单据类型</param>
            <param name="_a6acfe879718b2cb1ceed99777692c5c">业务锁操作</param>
            <param name="_edfa9b719bb6fa78e553bb93e9e4a406">单据编号</param>
            <returns>已加锁，返回True</returns>
        </member>
        <member name="T:HuanSi.Lib.Business.IHSUnitConvert">
            <summary>
            单位转换接口
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.IHSUnitConvert.m_Convert(System.Double,System.String,System.String)">
            <summary>
            单位换算函数
            </summary>
            <param name="_ce4508d8ff5b29dd83ef3db8ecf2c323">原数量</param>
            <param name="_3b1004dc9efcd62a0f5e5d054cf4b97b">原单位</param>
            <param name="_d08e37b8765645dbd8be5c23fcb44d39">要换算的目标单位</param>
            <returns>换算得到的目标单位对应的数量</returns>
        </member>
        <member name="T:HuanSi.Lib.Business.HSBillLockor">
            <summary>
            单据业务锁
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.HSBillLockor.m_ClearDeadLock">
            <summary>
            解决死锁，不存在的Session的锁全部自动清除
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.HSBillLockor.m_UnLock(System.String)">
            <summary>
            清除指定Session下的所有锁
            </summary>
            <param name="uSessionGuid"></param>
        </member>
        <member name="T:HuanSi.Lib.Business.HSBillLockOperate">
            <summary>
            业务锁操作类型
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Business.HSUnitConvert">
            <summary>
            单位换算类
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Business.HSUnitDecimal">
            <summary>
            甯﹀崟浣嶇殑鏁板瓧绫诲瀷(鍗曚綅娴偣鏁?
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_Value">
            <summary>
            鏁板€?
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_Unit">
            <summary>
            鍗曚綅
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_Owner">
            <summary>
            鏁版嵁婧愶紝鑻ヨ缃簡锛屽垯浠庢鏁版嵁婧愪腑鎻愬彇鏁版嵁
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_ValuePropertyName">
            <summary>
            鏁版嵁婧愪腑琛ㄧず鏁板€肩殑灞炴€у悕绉?
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_UnitPropertyName">
            <summary>
            鏁版嵁婧愪腑琛ㄧず鍗曚綅鐨勫睘鎬у悕绉?
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_UnitConvertor">
            <summary>
            鍗曚綅杞崲鍣?
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Business.HSUnitDecimal.m_Precision">
            <summary>
            鏁板€肩簿搴?
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Business.HSUnitDecimal.m_Assign(HuanSi.Lib.Business.HSUnitDecimal)">
            <summary>
            璧嬪€艰繍绠楋紝褰撳墠鐨勫崟浣嶄负绌猴紝鍒欒浆鎹㈡垚浼犲叆鐨勫崟浣嶏紝鍚﹀垯鑻ヤ紶鍏ョ殑鍗曚綅涓嶅悓锛屽垯浼氭崲绠楁垚褰撳墠鍗曚綅鎵€瀵瑰簲鐨勬暟鍊?
            </summary>
            <param name="aValue"></param>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Business.HSUnitDecimal.m_Add(HuanSi.Lib.Business.HSUnitDecimal)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:HuanSi.Lib.Business.HSUnitDecimal.m_Dec(HuanSi.Lib.Business.HSUnitDecimal)”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Business.HSUnitDecimal.m_setUnit(System.String)">
            <summary>
            灏嗗綋鍓嶅崟浣嶈浆鎹㈡垚鎸囧畾鍗曚綅锛屽悓鏃舵崲绠楁暟鍊间负鐩爣鍗曚綅鏁板€?
            </summary>
            <param name="sUnit"></param>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Business.HSUnitDecimal.m_ConvertTo(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Business.HSUnitDecimal.op_Subtraction(HuanSi.Lib.Business.HSUnitDecimal,HuanSi.Lib.Business.HSUnitDecimal)">
            <summary>
            瀹炵幇涓や釜鍗曚綅娴偣鏁扮殑鍔犳硶锛屼竴鑸粎鐢ㄤ簬闈炴暟鎹簮妯″紡涓嬨€?
            </summary>
            <param name="a">鍗曚綅娴偣鏁颁竴</param>
            <param name="b">鍗曚綅娴偣鏁颁簩</param>
            <returns>鏂扮敓鎴愮殑涓€涓崟浣嶆诞鐐规暟锛屽崟浣嶏紳绗竴涓崟浣嶆诞鐐规暟鐨勫崟浣嶏紝鏁板€硷紳杞崲鎴愮洰鏍囧崟浣嶅悗鐨勫姞娉曞拰</returns>
        </member>
        <member name="M:HuanSi.Lib.Business.HSUnitDecimal.op_Addition(HuanSi.Lib.Business.HSUnitDecimal,HuanSi.Lib.Business.HSUnitDecimal)">
            <summary>
            瀹炵幇涓や釜鍗曚綅娴偣鏁扮殑鍑忔硶锛屼竴鑸粎鐢ㄤ簬闈炴暟鎹簮妯″紡涓嬨€?
            </summary>
            <param name="a">鍗曚綅娴偣鏁颁竴</param>
            <param name="b">鍗曚綅娴偣鏁颁簩</param>
            <returns>鏂扮敓鎴愮殑涓€涓崟浣嶆诞鐐规暟锛屽崟浣嶏紳绗竴涓崟浣嶆诞鐐规暟鐨勫崟浣嶏紝鏁板€硷紳杞崲鎴愮洰鏍囧崟浣嶅悗鐨勫噺娉曞樊</returns>
        </member>
        <member name="T:HuanSi.Lib.Config.HSAppConfig">
            <summary>
            AppConfig管理器
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Config.HSAppConfig.m_fileName">
            <summary>
            文件名，默认为App.Config
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Config.HSAppConfig.m_Load``1">
            <summary>
            从AppConfig中加载配置对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Config.HSAppConfig.m_Save(System.Object[])">
            <summary>
            保存配置文件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Config.HSAppSettings.m_getValue(System.String,System.String)">
            <summary>
            加载配置项值
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Config.HSAppSettings.m_setValue(System.String,System.String,System.Object)">
            <summary>
            保存配置项值
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Container.HSObjectContainer">
            <summary>
            对象容器（对象管理器）
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Container.IHSObjectContainer">
            <summary>
            对象容器接口,容器支持递归，一般一个版本用一个子容器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Child(System.String)">
            <summary>
            返回子容器，若不存在则创建一个子容器，并将此子容器纳入本容器内
            </summary>
            <param name="_3041b6baa31ad1e768034d75083695d6">子容器对应的版本号</param>
            <returns>子容器实例</returns>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Get``1">
            <summary>
            返回容器内一个对象的实例
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
            <returns>对象实例，若没找到，返回NULL</returns>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Get``1(System.String)">
            <summary>
            返回容器内一个对象的实例
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
            <param name="sName">对象在此容器内的名称，注册时指定</param>
            <returns>对象实例，若未找到，返回NULL</returns>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Create``1">
            <summary>
            返回容器内一个对象的实例，若不存在，则创建一个新的实例
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Create``1(System.String)">
            <summary>
            返回容器内一个对象的实例，若不存在，则创建一个新的实例
            </summary>
            <typeparam name="T">返回对象类型</typeparam>
            <param name="_2335e467a3c66a614bedcd53473112a8">tag</param>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Get(System.String,System.String)">
            <summary>
            返回容器内一个对象的实例
            </summary>
            <param name="_299c3c7c18684a4f16df55daa0bc5717">sClassFullName</param>
            <param name="_2335e467a3c66a614bedcd53473112a8">tag</param>
            <returns>对象实例</returns>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Register``1(System.Object)">
            <summary>
            将一个对象送入容器内
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
            <param name="Item">对象实例</param>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_Register``1(System.Object,System.String)">
            <summary>
            将一个对象送入容器内
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
            <param name="Item">对象实例</param>
            <param name="sName">对象在容器内的名称</param>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_UnRegister``1">
            <summary>
            从容器内移除指定对象
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_UnRegister``1(System.String)">
            <summary>
            从容器内移除指定对象
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="_2335e467a3c66a614bedcd53473112a8">tag</param>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_UnRegisterAll">
            <summary>
            移除所有对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_UnRegisterAll``1">
            <summary>
            移除所有指定类型的对象
            </summary>
            <typeparam name="TEntityInfo">要移除的对象的类型</typeparam>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_IsRegistered``1">
            <summary>
            判断一个对象是否存在于容器内
            </summary>
            <typeparam name="TEntityInfo">对象类型</typeparam>
            <returns>在容器内，返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Container.IHSObjectContainer.m_IsRegistered``1(System.String)">
            <summary>
            判断一个对象是否存在于容器内
            </summary>
            <typeparam name="T">对象类型</typeparam>
            <param name="_2335e467a3c66a614bedcd53473112a8">tag</param>
            <returns>容器内存在指定对象则返回true</returns>
        </member>
        <member name="M:HuanSi.Lib.Resource.IHSTextResource.m_Translate(System.String,System.Int64)">
            <summary>
            得到指定资源项的当前语言版本资源
            </summary>
            <param name="_214df0b649f3ca8ea2c4ada2f27ea725">资源key</param>
            <param name="_a064a00a755baafd7581ff83e9660323">所属form</param>
        </member>
        <member name="T:HuanSi.Lib.Resource.HSTextResource">
            <summary>
            文本资源类
            设计为加载本地资源及异步加载服务器资源
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Security.HSClientLicense.m_IsLicensed(System.String,System.String)">
            <summary>
            是否已授权
            </summary>
            <param name="sMachineCode">机器码guid</param>
            <param name="sKey">授权Key</param>
            <param name="sPublicKey">公钥</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSClientLicense.m_GetMachineCode">
            <summary>
            根据硬件ID，获取Guid
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSClientLicense._757d631fb9e2ad9fba1f6d5acaf70b82(System.Byte[])">
            <summary>
            通过机器码MD5得到注册KEYMD5或者通过注册MD5得到机器码MD5
            </summary>
            <param name="fromBytes"></param>
            <returns></returns>
        </member>
        <member name="F:HuanSi.Lib.Security.HSLicense.sMachineCode">
            <summary>
            当前机器码
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense._dbe36817260e32ccf82329ebbc24f433">
            <summary>
            验证使用的Key
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense.m_bHasLicenseFile">
            <summary>
            是否存在授权文件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Security.HSLicense.m_LoadFromLicenseKeyFile">
            <summary>
            加载授权文件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Security.HSLicense.m_VerifyLicense">
            <summary>
            验证授权内容
            </summary>
            <returns></returns>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense.m_LicenseInfo">
            <summary>
            授权信息
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense.m_IsLocalMachineLicense">
            <summary>
            是否为本机的授权文件
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense.m_Expired">
            <summary>
            是否过期
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSLicense.m_EffectiveDay">
            <summary>
            剩余的有效天数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Security.HSPictureSignatureUtil.m_VerifiSign(System.String)">
            <summary>
            对数字前面进行校验
            </summary>
            <param name="fileName">文件名称</param>
            <returns>返回true为校验成功</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSPictureSignatureUtil.m_Sign(System.String)">
            <summary>
            对指定路径的的图片进行签名
            </summary>
            <param name="fileName">图片地址</param>
            <returns>签名内容</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSPictureSignatureUtil.m_Sign(System.Drawing.Image)">
            <summary>
            对此图片对象签名
            </summary>
            <param name="image">源图片</param>
            <returns>图片签名对象</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSPictureSignatureUtil._1c56c19c4fa6180e6478c6752dd79915(System.Drawing.Image)">
            <summary>
            后去图片内容字节
            </summary>
            <param name="image"></param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.Security.HSSignedXmlHelper">
            <summary>
            xml签名及验证类
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSSignedXmlHelper.RSAProvider">
            <summary>
            签名非对称提供实例
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSSignedXmlHelper.m_PublicKey">
            <summary>
            公钥
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Security.HSSignedXmlHelper.m_Key">
            <summary>
            包含公钥与私钥
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.#ctor(System.String)">
            <summary>
            创建签名类，并且传入RSAKey
            </summary>
            <param name="_sXmlKey">RSA密钥或公钥</param>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_CreateRSAProvider">
            <summary>
            创建RSA对象
            </summary>
            <returns></returns>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Security.HSSignedXmlHelper.m_Sign(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_Sign(System.Xml.XmlDocument)">
            <summary>
            对传入xml文档对象进行签名,并且自动写入PublicKey
            </summary>
            <param name="_signDoc">待签名的xml文档对象</param>
            <returns>返回签名后的xml文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_VerifyXml(System.String,System.String)">
            <summary>
            对传入xml文本进行签名验证
            </summary>
            <param name="_verifyXml">待验证的xml文本</param>
            <param name="_publicKey">公钥</param>
            <returns>验证成功，返回true,否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_VerifyXml(System.String,System.Xml.XmlDocument)">
            <summary>
            对传入xml文本进行签名验证
            </summary>
            <param name="_verifyDoc">待验证的xml文本</param>
            <param name="_publicKey">公钥</param>
            <returns>验证成功，返回true,否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_Verify(System.String)">
            <summary>
            对传入xml文本进行签名验证,调用此方法请在构造函数请传入RSA包含公钥的Key,如传入带key的xml,请调用静态方法m_VerifyXml
            </summary>
            <param name="_verifyXml">待验证的xml文本</param>
            <returns>验证成功，返回true,否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSSignedXmlHelper.m_Verify(System.Xml.XmlDocument)">
            <summary>
            对传入xml文档对象进行签名验证,调用此方法请在构造函数请传入RSA包含公钥的Key,,如传入带key的xml,请调用静态方法m_VerifyXml
            </summary>
            <param name="_verifyDoc">待验证的xml文档对象</param>
            <returns>验证成功，返回true,否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Security.HSAsymmetricAlgorithmHelper`1.m_Create(System.String@,System.String@)">
            <summary>  
            按默认规则生成公钥、私钥  
            </summary>  
            <param name="publicKey">公钥（Xml格式）</param>  
            <param name="privateKey">私钥（Xml格式）</param>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSKeyGenerator.CreateSymmetricAlgorithmKey``1(System.String@,System.String@,System.Int32)">
            <summary>  
            随机生成秘钥（对称算法）  
            </summary>  
            <param name="key">秘钥(base64格式)</param>  
            <param name="iv">iv向量(base64格式)</param>  
            <param name="keySize">要生成的KeySize，每8个byte是一个字节，注意每种算法支持的KeySize均有差异，实际可通过输出LegalKeySizes来得到支持的值</param>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSKeyGenerator.CreateAsymmetricAlgorithmKey``1(System.String@,System.String@,``0)">
            <summary>  
            随机生成秘钥（非对称算法）  
            </summary>  
            <typeparam name="T"></typeparam>  
            <param name="publicKey">公钥（Xml格式）</param>  
            <param name="privateKey">私钥（Xml格式）</param>  
            <param name="provider">用于生成秘钥的非对称算法实现类，因为非对称算法长度需要在构造函数传入，所以这里只能传递算法类</param>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_Encrypt(System.String,System.String,System.Boolean)">
            <summary>  
            RSA加密  
            </summary>  
            <param name="publickey">公钥</param>  
            <param name="content">加密前的原始数据</param>  
            <param name="fOAEP">如果为 true，则使用 OAEP 填充（仅在运行 Microsoft Windows XP 或更高版本的计算机上可用）执行直接的 System.Security.Cryptography.RSA加密；否则，如果为 false，则使用 PKCS#1 1.5 版填充。</param>  
            <returns>加密后的结果（base64格式）</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_Encrypt(System.String,System.Byte[],System.Boolean)">
            <summary>  
            RSA加密  
            </summary>  
            <param name="publickey">公钥</param>  
            <param name="content">加密前的原始数据</param>  
            <param name="fOAEP">如果为 true，则使用 OAEP 填充（仅在运行 Microsoft Windows XP 或更高版本的计算机上可用）执行直接的 System.Security.Cryptography.RSA加密；否则，如果为 false，则使用 PKCS#1 1.5 版填充。</param>  
            <returns>加密后的结果（base64格式）</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_Decrypt(System.String,System.String,System.Boolean)">
            <summary>  
            RSA解密  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">加密后的内容(base64格式)</param>  
            <param name="fOAEP">如果为 true，则使用 OAEP 填充（仅在运行 Microsoft Windows XP 或更高版本的计算机上可用）执行直接的 System.Security.Cryptography.RSA加密；否则，如果为 false，则使用 PKCS#1 1.5 版填充。</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_Decrypt(System.String,System.Byte[],System.Boolean)">
            <summary>  
            RSA解密  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">加密后的内容(base64格式)</param>  
            <param name="fOAEP">如果为 true，则使用 OAEP 填充（仅在运行 Microsoft Windows XP 或更高版本的计算机上可用）执行直接的 System.Security.Cryptography.RSA加密；否则，如果为 false，则使用 PKCS#1 1.5 版填充。</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_SignData(System.String,System.String,System.Object)">
            <summary>  
            RSA签名  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">需签名的原始数据(utf-8)</param>  
            <param name="halg">签名采用的算法，如果传null，则采用MD5算法</param>  
            <returns>签名后的值(base64格式)</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_SignData(System.String,System.Byte[],System.Object)">
            <summary>  
            RSA签名  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">需签名的原始数据(utf-8)</param>  
            <param name="halg">签名采用的算法，如果传null，则采用MD5算法</param>  
            <returns>签名后的值(base64格式)</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_VerifyData(System.String,System.String,System.String,System.Object)">
            <summary>  
            RSA验签  
            </summary>  
            <param name="publicKey">公钥</param>  
            <param name="content">需验证签名的数据(utf-8)</param>  
            <param name="signature">需验证的签名字符串(base64格式)</param>  
            <param name="halg">签名采用的算法，如果传null，则采用MD5算法</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_VerifyData(System.String,System.Byte[],System.String,System.Object)">
            <summary>  
            RSA验签  
            </summary>  
            <param name="publicKey">公钥</param>  
            <param name="content">需验证签名的数据(utf-8)</param>  
            <param name="signature">需验证的签名字符串(base64格式)</param>  
            <param name="halg">签名采用的算法，如果传null，则采用MD5算法</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSRSAHelper.m_Create(System.String@,System.String@,System.Int32)">
            <summary>  
            生成公钥、私钥  
            </summary>  
            <param name="publicKey">公钥（Xml格式）</param>  
            <param name="privateKey">私钥（Xml格式）</param>  
            <param name="keySize">要生成的KeySize，支持的MinSize:384 MaxSize:16384 SkipSize:8</param>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSDSAHelper.m_SignData(System.String,System.String)">
            <summary>  
            DSA签名  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">需签名的原始数据(utf-8)</param>  
            <returns>签名后的值(base64格式)</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSDSAHelper.m_SignData(System.String,System.Byte[])">
            <summary>  
            DSA签名  
            </summary>  
            <param name="privatekey">私钥</param>  
            <param name="content">需签名的原始数据(utf-8)</param>  
            <returns>签名后的值(base64格式)</returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSDSAHelper.m_VerifyData(System.String,System.String,System.String)">
            <summary>  
            DSA验签  
            </summary>  
            <param name="publicKey">公钥</param>  
            <param name="content">需验证签名的数据(utf-8)</param>  
            <param name="signature">需验证的签名字符串(base64格式)</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSDSAHelper.m_VerifyData(System.String,System.Byte[],System.String)">
            <summary>  
            DSA验签  
            </summary>  
            <param name="publicKey">公钥</param>  
            <param name="content">需验证签名的数据(utf-8)</param>  
            <param name="signature">需验证的签名字符串(base64格式)</param>  
            <returns></returns>  
        </member>
        <member name="M:HuanSi.Lib.Security.HSDSAHelper.m_Create(System.String@,System.String@,System.Int32)">
            <summary>  
            生成公钥、私钥  
            </summary>  
            <param name="publicKey">公钥（Xml格式）</param>  
            <param name="privateKey">私钥（Xml格式）</param>  
            <param name="keySize">要生成的KeySize，支持的MinSize:512 MaxSize:1024 SkipSize:64</param>  
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSApplicationService">
            <summary>
            应用程序上下文
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.Current">
            <summary>
            当前唯一实例
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSApplicationService.CalcSql(System.Int64,System.String)">
            <summary>
            计算SQL
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSApplicationService.m_SetMainForm(System.Windows.Forms.Form)">
            <summary>
            设置MainForm
            </summary>
            <param name="_form"></param>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSApplicationService.m_BeginGetMachineCodeTask">
            <summary>
            开始获取机器码
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_MainForm">
            <summary>
            获取MainForm
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_MainFormHandle">
            <summary>
            获取MainForm的句柄
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_ApplicationImage">
            <summary>
            应用程序图标
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_ConfigPath">
            <summary>
            应用程序配置文件路径
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_AppName">
            <summary>
            应用程序名
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_GlobalOutParam">
            <summary>
            全局外部参数
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.sMachineCode">
            <summary>
            机器码
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_container">
            <summary>
            全局容器
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSApplicationService.m_PythonEngine">
            <summary>
            Python引擎
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSApplicationService.m_GetSystemIdleTime">
            <summary>
            获取系统闲置时间
            </summary>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSAssemblyInfo">
            <summary>
            程序集特性
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSAssemblyInfo.#ctor">
            <summary>
            构造函数
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSAssemblyInfo.#ctor(System.Object)">
            <summary>
            构造函数
            </summary>
            <param name="_part">类型</param>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSAssemblyInfo.#ctor(System.Reflection.Assembly)">
            <summary>
            构造函数
            </summary>
            <param name="_assembly">程序集</param>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Title">
            <summary>
            程序集标题
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Version">
            <summary>
            程序集版本号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_FileVersion">
            <summary>
            程序集文件版本号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Description">
            <summary>
            程序集描述
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Product">
            <summary>
            程序集产品名称
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Copyright">
            <summary>
            程序集版权
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfo.m_Company">
            <summary>
            程序集公司名称
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_ProductName">
            <summary>
            主产品名称
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_Copyright">
            <summary>
            程序集版权
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_Company">
            <summary>
            程序开发公司
            </summary>
        </member>
        <member name="F:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_Version">
            <summary>
            程序集版本号
            </summary>
        </member>
        <member name="F:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_FileVersion">
            <summary>
            文件版本号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_ApplicationIcon">
            <summary>
            应用程序图标
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_UserDefaultImage">
            <summary>
            用户默认头像
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_WarningMessage">
            <summary>
            版权警告
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.HSAssemblyInfoHelper.m_AllVersionInfo">
            <summary>
            详细版权说明
            </summary>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSCompositionHelper">
            <summary>
            全局MEF Composition Container
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSCompositionHelper.m_AddFile(System.String)">
            <summary>
            添加文件
            </summary>
            <param name="_fileName"></param>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSCompositionHelper.m_AddAssembly(System.Reflection.Assembly)">
            <summary>
            添加程序集
            </summary>
            <param name="_assembly"></param>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSCompositionHelper.m_ComposeParts(System.Object[])">
            <summary>
            从特性化对象的数组创建可组合部件，并在指定的组合容器中组合这些部件。
            </summary>
            <param name="_attributedParts">要组合的特性化对象的数组。</param>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.ServiceModel.HSCompositionHelper.m_GetExportedValues``1”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.ServiceModel.HSCompositionHelper.m_GetExportedValue``1(System.String)">
            <summary>
            返回具有从指定的类型参数派生的协定名称的已导出对象。如果不是正好有一个匹配的已导出对象，则将引发异常。
            </summary>
            <typeparam name="T">要返回的已导出对象的类型。</typeparam>
            <param name="contractName">要返回的已导出对象的协定名称，或者为 null 或空字符串 ("") 以使用默认的协定名称。</param>
            <returns>具有指定的协定名称的已导出对象。</returns>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSConnectionStringFileLoader.m_LoadConnectString(System.String)">
            <summary>
            查找指定连接名的连接字符串(解密后的连接字符串)
            </summary>
            <param name="_sConnectName">连接名</param>
            <returns>返回存储在注册表中的连接字符串</returns>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSConnectionStringFileLoader.m_LoadConnectStringByName(System.String)">
            <summary>
            查找指定连接名的连接字符串(解密后的连接字符串)
            </summary>
            <param name="_sConnectName">名称</param>
            <returns>返回存储在注册表中的连接字符串</returns>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSGlobalOutParam">
            <summary>
            全局外部参数
            </summary>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSLoadAssemblyProxyObject">
            <summary>
            需要先执行LoadAssembly
            </summary>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSIsBusinessModuleAttribute">
            <summary>
            标记程序集是否是业务模块,如果不是业务模块将不反射其内部类型
            </summary>
        </member>
        <member name="M:HuanSi.Lib.ServiceModel.HSIsBusinessModuleAttribute.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.IHSSubProductInfo">
            <summary>
            各子系统的产品信息接口
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.IHSSubProductInfo.m_Name">
            <summary>
            子系统简称或代号或英文缩写
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.IHSSubProductInfo.m_Title">
            <summary>
            子系统标题
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.IHSSubProductInfo.m_Description">
            <summary>
            子系统描述信息
            </summary>
        </member>
        <member name="P:HuanSi.Lib.ServiceModel.IHSSubProductInfo.m_DisplayName">
            <summary>
            用于绑定时显示信息
            </summary>
        </member>
        <member name="T:HuanSi.Lib.ServiceModel.HSAbstractSubProductInfo">
            <summary>
            各子系统的产品信息基类
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.HSSessionInfo.m_MachineName">
            <summary>
            客户端电脑名
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.HSSessionInfo.m_MachineCode">
            <summary>
            机器码，如主板ID、网卡物理地址等
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.HSSessionInfo.LastLiveTime">
            <summary>
            最后活动时间
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.HSSessionInfo.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.SessionInfo.MachineName">
            <summary>
            客户端电脑名
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.SessionInfo.MachineCode">
            <summary>
            机器码，如主板ID、网卡物理地址等
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.SessionInfo.IPAddress">
            <summary>
            ip地址
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Session.SessionInfo.PublicIPAddress">
            <summary>
            公网IP
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.SessionInfo.LastLiveTime">
            <summary>
            最后活动时间
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.SessionInfo.LoginTime">
            <summary>
            登录时间
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Session.SessionInfo._SystemRight">
            <summary>
            用户系统权限
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Session.HSMacInfo.m_MacAddress">
            <summary>
            本机所有网卡物理地址（已排序）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSPBLocalSqlInfo.m_InitKeyColumns">
            <summary>  
            初始化键值列（主键或唯一约束列）  
            </summary>  
        </member>
        <member name="M:HuanSi.Lib.Sql.HSPBLocalSqlInfo.m_InitAllColumns">
            <summary>  
            初始化所有列  
            </summary>  
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlDBReader._51186feb624891cacc3ccafaab1f704d(HuanSi.Lib.Sql.HSPBLocalSqlInfo,System.String[])">
            <summary>
            计算完整SQL文本
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlErrorParser.m_ParseError(System.String,HuanSi.Lib.DB.IHSEntity)">
            <summary>
            解析SQL错误信息
            </summary>
            <param name="sError">SqlServer返回的错误信息</param>
            <param name="aEntity">当前实体对象</param>
            <returns>显示给用户的错误信息</returns>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldNameMode.m_CN">
            <summary>
            仅中文字段
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldNameMode.m_EN">
            <summary>
            仅英文字段
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldNameMode.m_CN_EN">
            <summary>
            中文字段[英文字段]
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlGenerator_DataTable.m_GenerateCreateTableSql(System.Data.DataTable,System.String,System.String,HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldTypeCalcMode,HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldNameMode,System.Boolean,System.Int32)">
            <summary>
            根据数据包生成CreateTable脚本
            </summary>
            <param name="table"></param>
            <param name="sTableName"></param>
            <param name="sTableOwner"></param>
            <param name="fieldTypeMode"></param>
            <param name="fieldNameMode"></param>
            <param name="bGenerateExistsSql"></param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.Sql.HSSqlParamConvertor">
            <summary>
            Sql参数转换器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlParamConvertor._23056baef8ea0648916e0d755fb755e5(System.Collections.Generic.IEnumerable{System.String},System.Object[],System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            计算sql参数值
            </summary>
            <param name="sqlParams">sql参数名</param>
            <param name="vParameters">传入参数值</param>
            <param name="defaultParams">默认参数值</param>
            <returns>参数值数组</returns>
        </member>
        <member name="T:HuanSi.Lib.Sql.HSSqlTextInfo">
            <summary>
            客户端服务端通讯类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSDeleteSqlText.ToString">
            <summary>
            输出完整SQL文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSInsertSqlText.ToString">
            <summary>
            输出完整SQL文本
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSUpdateSqlText.m_bIgnoreSpecialField">
            <summary>
            是否忽略更新一些特定字段(如主键、创建人等)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSUpdateSqlText.m_FilterField(HuanSi.Lib.DB.IHSEntity,System.Boolean)">
            <summary>
            根据传入的实体数据筛选UpdateSQL中的字段
            </summary>
            <param name="aEntity">实体数据类</param>
            <param name="bFilterNotModified">是否按实体内数据状态筛选掉未修改的数据</param>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSUpdateSqlText.ToString">
            <summary>
            输出完整SQL文本
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.ISqlReader.Read(System.Int32,System.Guid,System.String[])">
            <summary>
            获取指定的SQL语句
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Sql.HSSqlGenerator">
            <summary>
            标准表SQL生成器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Sql.HSSqlGenerator_CIP">
            <summary>
            CIP表SQL生成器
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Sql.HSSqlTextParser">
            <summary>
            SQL文件参数的解析器
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_sFieldName">
            <summary>
            字段名
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_bCompute">
            <summary>
            是否为计算字段
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_sFormula">
            <summary>
            公式(仅计算字段存在)
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_FieldUseType">
            <summary>
            字段使用类型
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_sTableName">
            <summary>
            对应表名
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Sql.HSSqlTextParser.HSSqlField.m_sTableAlias">
            <summary>
            对应表别名
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser._a3c3b160e5081f9c7a8b9474e9a95720(System.String)">
            <summary>
            根据sql解析字段
            </summary>
            <param name="m_sSqlText"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.TrimChildQuery(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            去除子查询
            </summary>
            <param name="sSql"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.ParseTableFieldInSqlEx(System.String)">
            <summary>
            根据sql解析出字段的详细信息
            </summary>
            <param name="m_sSqlText"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.ParseInsertFieldListInSql(System.String,System.Boolean)">
            <summary>
            解析Insert字段
            </summary>
            <param name="m_sSqlText">Sql文本</param>
            <returns>插件的表字段</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.NewParseInsertTableList(System.String,System.Boolean)">
            <summary>
            解析insert table列表
            </summary>
            <param name="sSql"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.NewParseTableList(System.String,System.Boolean)">
            <summary>
            解析表
            </summary>
            <param name="sSql"></param>
            <param name="bIncludeProcedure"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.RemoveSummary(System.String)">
            <summary>
            去除注释
            </summary>
            <param name="sSql"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.ParseTempTableAndCursor(System.String)">
            <summary>
            解析游戏与临时表
            </summary>
            <param name="sSql"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser._81855fa9375e223069027cef52fcd544(HuanSi.Lib.Sql.HSSqlTextParser.HSSqlParameter)">
            <summary>
            格式化参数值文本
            </summary>
            <param name="Param">参数</param>
            <returns>参数值文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseParamType(System.String)">
            <summary>
            通过参数名来解析参数的类型
            </summary>
            <param name="sParamName">参数名(不带:或@)</param>
            <returns>参数的SqlDBType</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_ReplaceFactoryRight(System.String,System.String)">
            <summary>
            替换工厂权限
            </summary>
            <param name="_sSql">传入SQL</param>
            <param name="_sFactoryIdList">工厂ID集合</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseParameters(System.String)">
            <summary>
            解析SQL中的参数
            </summary>
            <remarks>SQL中的参数必须符合命名规则</remarks>
            <param name="m_sSqlText">待解析的SQL语句</param>
            <returns>SQL中包含的参数数组</returns>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseTableListInSql(System.String,System.Boolean,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseTableListInSql(System.String,System.Boolean)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseTableListInSql(System.String)”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseFieldListInSql(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseTableFieldInSql(System.String)">
            <summary>
            从SQL语句中解析所有字段
            </summary>
            <returns>Dictionary字段名,表名</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_ParseSqlFunctionParamInSql(System.String,System.Boolean)">
            <summary>
            解析存储过程/函数的参数
            </summary>
            <param name="m_sSqlText">存储过程代码</param>
            <returns>参数列表</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_CalcCommandText(System.String)">
            <summary>
            将SqlText转化为CommandText(:转义为@)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_FullSqlText(System.String,System.Data.IDataParameterCollection)">
            <summary>
            获取完整SQL（参数自动填充替换后的完整SQL）
            </summary>
            <remarks>返回值为LogSQL服务</remarks>
            <param name="m_sSqlText">带参数的SQL语句</param>
            <param name="aParameters">为SQL提供参数的参数集合</param>
            <returns>参数全部替换后的完整SQL</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_GenerateFilter(System.String,System.Object[])">
            <summary>
            根据传入的条件，构建出Filter
            </summary>
            <param name="sFieldNameList">字段列表，多个字段用逗号分隔</param>
            <param name="Params">字段名对应的值</param>
            <returns>Filter文本</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_GenerateQuerySplitPageSql(System.String,System.Collections.Generic.IEnumerable{HuanSi.Lib.Sql.HSSqlTextParser.HSSqlParameter},System.Int32,System.Int32)">
            <summary>
            生成分页查询Sql
            </summary>
            <param name="sql">原始查询Sql</param>
            <param name="iPageSize">每页行数</param>
            <param name="iReturnPage">返回第几页</param>
            <returns>新Sql</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_GenerateQuerySplitPageSql(System.String,System.Data.Common.DbParameterCollection,System.Int32,System.Int32)">
            <summary>
            生成分页查询Sql
            </summary>
            <param name="sql">原始查询Sql</param>
            <param name="iPageSize">每页行数</param>
            <param name="iReturnPage">返回第几页</param>
            <returns>新Sql</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_GenerateQuerySplitPageSql(System.String,System.Object[],System.Int32,System.Int32)">
            <summary>
            生成分页查询Sql
            </summary>
            <param name="sql">原始查询Sql</param>
            <param name="iPageSize">每页行数</param>
            <param name="iReturnPage">返回第几页</param>
            <returns>新Sql</returns>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_UpperSqlKeyWord(System.String)">
            <summary>
            SQL关键字大写
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Sql.HSSqlTextParser.m_GetSearchFieldTypeByFieldName(System.String)">
            <summary>
            根据字段名，计算查询字段数据类型
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler">
            <summary>
            此类摘自微软并行库:https://msdn.microsoft.com/en-us/library/system.threading.tasks.taskscheduler(v=vs.100).aspx
            
            Provides a task scheduler that ensures a maximum concurrency level while
            running on top of the ThreadPool.
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler._ba54c938a536aac316fb47cf4b12e59e">
            <summary>Whether the current thread is processing work items.</summary>
        </member>
        <member name="F:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler._a3def419cf44aec2e993c9c1f3db8749">
            <summary>The list of tasks to be executed.</summary>
        </member>
        <member name="F:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler._353902549e4db6554c016efd168fb8ed">
            <summary>The maximum concurrency level allowed by this scheduler.</summary>
        </member>
        <member name="F:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler._9947ed04ba048f0bf64d0f5196b71d01">
            <summary>Whether the scheduler is currently processing work items.</summary>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.#ctor(System.Int32)">
            <summary>
            Initializes an instance of the LimitedConcurrencyLevelTaskScheduler class with the
            specified degree of parallelism.
            </summary>
            <param name="maxDegreeOfParallelism">The maximum degree of parallelism provided by this scheduler.</param>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.QueueTask(System.Threading.Tasks.Task)">
            <summary>Queues a task to the scheduler.</summary>
            <param name="task">The task to be queued.</param>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler._4ce9819af85065331d4d09a4b7f771a5">
            <summary>
            Informs the ThreadPool that there's work to be executed for this scheduler.
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.TryExecuteTaskInline(System.Threading.Tasks.Task,System.Boolean)">
            <summary>Attempts to execute the specified task on the current thread.</summary>
            <param name="task">The task to be executed.</param>
            <param name="taskWasPreviouslyQueued"></param>
            <returns>Whether the task could be executed on the current thread.</returns>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.TryDequeue(System.Threading.Tasks.Task)">
            <summary>Attempts to remove a previously scheduled task from the scheduler.</summary>
            <param name="task">The task to be removed.</param>
            <returns>Whether the task could be found and removed.</returns>
        </member>
        <member name="P:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.MaximumConcurrencyLevel">
            <summary>Gets the maximum concurrency level supported by this scheduler.</summary>
        </member>
        <member name="M:HuanSi.Lib.Tasks.LimitedConcurrencyLevelTaskScheduler.GetScheduledTasks">
            <summary>Gets an enumerable of the tasks currently scheduled on this scheduler.</summary>
            <returns>An enumerable of the tasks currently scheduled.</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSCodeParser.m_ParseParameters(System.String,System.String,System.String,System.String[])">
            <summary>
            从代码行中提取变量参数
            </summary>
            <param name="sCode">代码全文本</param>
            <param name="sLeftPreFix">前缀分隔符</param>
            <param name="fRightPreFix">后缀分隔符</param>
            <returns>如a=[b]*[c],返回b与c</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSCodeParser.m_ParseCommandCode(System.String[],System.IO.TextWriter)">
            <summary>
            解析出代码模板中的C#代码
            </summary>
            <param name="reader">代码模板文本</param>
            <param name="writer">C#代码文本</param>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Assign(HuanSi.Lib.Text.HSBarCode)">
            <summary>
            用传入的BarCode中数据替换当前Barcode中数据
            </summary>
            <param name="aBarCodeRow">提供数据的条码对象</param>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Add">
            <summary>
            在BarCode中新增一个BarCodeRow，并返回
            </summary>
            <returns>新生成的BarCodeRow</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_LoadFromFile(System.String)">
            <summary>
            从指定的文件中加载条码数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_LoadFromFile">
            <summary>
            从属性FileName指定的文件中加载条码数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_SaveToFile(System.String)">
            <summary>
            将条码数据保存到文件
            </summary>
            <param name="sUnitName">要保存的文件名</param>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_SaveToFile">
            <summary>
            将条码数据保存到文件
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Equals(HuanSi.Lib.Text.HSBarCode)">
            <summary>
            与传入的BarCode进行对比，条码是否完全相同
            </summary>
            <param name="aBarCodeRow">要进行对比的BarCode</param>
            <returns>相同返回True</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Filter(HuanSi.Lib.Enums.HSBarCodeStatus)">
            <summary>
            条码行筛选器，若为空，则表示显示所有
            </summary>
            <param name="aStatus">筛选状态，若为NULL，则返回所有状态</param>
            <returns>返回一个筛选后的BarCode，与原BarCode共享数据</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Clone(HuanSi.Lib.Enums.HSBarCodeStatus)">
            <summary>
            通过状态筛选后克隆到一个新的BarCode中。
            </summary>
            <param name="aStatus">筛选状态，若为NULL，则返回所有状态</param>
            <returns>返回一个筛选后的全新的BarCode，与原BarCode无关</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Clone">
            <summary>
            克隆出一个新的BarCode对象
            </summary>
            <returns>新BarCode对象</returns>
        </member>
        <member name="P:HuanSi.Lib.Text.HSBarCode.m_FileName">
            <summary>
            条码枪本地上传文件路径
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_BarCodeGroupArray(System.Boolean)">
            <summary>
            得到当前BarCode的BarCodeGroup列表
            </summary>
            <param name="bSorted">是否排序</param>
            <returns>BarCodeGroup的字符串数组</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_BarCodeGroupArray">
            <summary>
            得到当前BarCode的排序的BarCodeGroup列表
            </summary>
            <returns>BarCodeGroup的字符串数组</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_BarCodeArray(System.Boolean)">
            <summary>
            返回条码号列表
            </summary>
            <param name="bSorted">条码号是否排序</param>
            <returns>条码号数组</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_BarCodeArray">
            <summary>
            返回排序的条码号列表
            </summary>
            <returns>条码号数组</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Find(System.String)">
            <summary>
            查找指定的BarCodeGroup的所有匹配行
            </summary>
            <param name="sBarCodeGroup">BarcodeGroup，板号等</param>
            <returns>返回一个BarCode，与原BarCode共享数据</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Find(System.String[])">
            <summary>
            查找指定的BarCodeGroup的所有匹配行
            </summary>
            <param name="sBarCodeGroupList">BarcodeGroup，板号等</param>
            <returns>返回一个BarCodeList，与原BarCodeList共享数据</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCode.m_Locate(System.String)">
            <summary>
            根据条码号定位条码数据行
            </summary>
            <param name="sBarCode">要查找的条码</param>
            <returns>查找到的指定的条码行，若指定条码不存在，返回NULL</returns>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCodeRow.m_Assign(HuanSi.Lib.Text.HSBarCodeRow)">
            <summary>
            将aBarCode中的值赋值给自身
            </summary>
            <param name="aBarCodeRow">提供参数的BarCode</param>
        </member>
        <member name="P:HuanSi.Lib.Text.HSBarCodeRow.m_sDelimiter">
            <summary>
            BarCode数据分隔符，默认为逗号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Text.HSBarCodeRow.m_sBarCodeGroup">
            <summary>
            分组编号，如SPUNo，板号、卡号等
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Text.HSBarCodeRow.m_sBarCode">
            <summary>
            条码号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Text.HSBarCodeRow.m_iStatus">
            <summary>
            当前条码行的状态
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCodeRow.m_Parse(System.String)">
            <summary>
            解析一行条码枪上传文本
            </summary>
            <param name="sBarCodeLine">条码行文本</param>
        </member>
        <member name="M:HuanSi.Lib.Text.HSBarCodeRow.ToString">
            <summary>
            将当前条码行输出为一行文本
            </summary>
            <returns>包含条码行数据的文本</returns>
        </member>
        <member name="T:HuanSi.Lib.Utils.HSBinarySerializer">
            <summary>
            对象序列化为二进制
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSBinarySerializer.m_Serialize(System.Object)">
            <summary>
            将对象序列化成二进制文本
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSBinarySerializer.m_Deserialize``1(System.String)">
            <summary>
            将二进制文本反序列化为对象
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSByteHexHelper.m_ByteToHex(System.Byte[])">
            <summary>
            瀛楄妭鏁扮粍杞?6杩涘埗瀛楃涓?
            </summary>
            <param name="bytes"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSByteHexHelper.m_HexToByte(System.String)">
            <summary>
            16杩涘埗瀛楃涓茶浆瀛楄妭鏁扮粍
            </summary>
            <param name="str"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.CharUtil.m_ParseCharType(System.String)">
            <summary>
            解析输入字符串包含哪些字符类型
            </summary>
            <param name="sInput">输入字符串</param>
            <returns>返回字符串包含的字符类型</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.CharUtil.m_IsCharType(System.String,HuanSi.Lib.Enums.HSCharType)">
            <summary>
            判断输入字符串是否在指定的字符类型中
            </summary>
            <param name="sInput">输入字符串</param>
            <param name="charType">字符类型</param>
            <returns>在字符类型范围内时返回true，否则返回false</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.CharUtil.m_ParseCharType(System.Char)">
            <summary>
            解析单个字符的字符类型
            </summary>
            <param name="c">传入的字符</param>
            <returns>返回字符的类型</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSDateTimeUtil.m_Compare(System.DateTime,System.DateTime,HuanSi.Lib.Enums.HSDateAccuracy)">
            <summary>
            时间比较，等于0为相等，小于0代表小于，大于0代表大于
            </summary>
            <param name="datetime1"></param>
            <param name="datetime2"></param>
            <param name="dateAccuracy"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSColorConvert.m_WebColorToDelphiColor(System.String)">
            <summary>
            html color to delphi color 
            </summary>
            <param name="sWebColor"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSColorConvert.m_ColorToDelphiColor(System.Drawing.Color)">
            <summary>
            c# color to delphi color
            </summary>
            <param name="color"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSCSharpConfusionUtil.m_CSharpConfusion(System.String,System.String)">
            <summary>
            c#传入字符串混淆
            </summary>
            <param name="_sSourceCode"></param>
            <param name="_sPrivateKeys"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSCSharpConfusionUtil.m_CSharpConfusionFile(System.String,System.String,HuanSi.Lib.Utils.HSConfusionMode,System.String@)">
            <summary>
            加密文件
            </summary>
            <param name="_sFileName"></param>
            <param name="_sPrivateKeys"></param>
            <param name="_confusionMode"></param>
            <returns>true代表成功，false为出错失败</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSCSharpConfusionUtil.m_CSharpAutoConfusion(System.String,System.String)">
            <summary>
            混淆字符串，自动判断当前是否运行在混淆模式决定是否替换
            </summary>
            <param name="_sSourceCode"></param>
            <param name="_sPrivateKeys"></param>
            <returns></returns>
        </member>
        <member name="F:HuanSi.Lib.Utils.HSCSharpConfusionUtil.m_bIsConfusionMode">
            <summary>
            当前运行代码是否以混淆模式
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.GetThumbnailImage(System.IO.Stream,System.Int32,System.Int32)">
            <summary>
            生成图片缩略图,高质量压缩
            </summary>
            <param name="sourceImageStream">图片流</param>
            <param name="compressPercent">压缩百分比值范围：1-100</param>
            <param name="sizePercent">输出图片尺寸百分比，值范围：1-100</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.GetThumbnailImage(System.Drawing.Image,System.Int32,System.Int32,System.Int32)">
            <summary>
            获取缩略图
            </summary>
            <param name="sourceImage"></param>
            <param name="compressPercent"></param>
            <param name="outputWidth"></param>
            <param name="outputHeight"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.GetThumbnailImage(System.Byte[],System.Int32,System.Int32)">
            <summary>
            生成图片缩略图,高质量压缩
            </summary>
            <param name="imageStream">图片流</param>
            <param name="compressPercent">压缩百分比值范围：1-100</param>
            <param name="sizePercent">输出图片尺寸百分比，值范围：1-100</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.GetThumbnailImage(System.Byte[],System.Int32,System.Int32,System.Int32)">
            <summary>
            生成图片缩略图,高质量压缩
            </summary>
            <param name="imageStream">图片流</param>
            <param name="compressPercent">压缩百分比值范围：1-100</param>
            <param name="sizePercent">输出图片尺寸百分比，值范围：1-100</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.GetThumbnailImageToSize(System.Byte[],System.Int32)">
            <summary>
            指定压缩大小压缩
            </summary>
            <param name="sourceImageData">源图片</param>
            <param name="maxSizeKB">最大尺寸(单位kb)</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSImageUtil.m_GetScreentShotImage">
            <summary>
            获取截屏
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPythonUtil.m_CheckCode(System.Int64,System.String)">
            <summary>
            检查代码
            </summary>
            <param name="sScript">源码</param>
        </member>
        <member name="T:HuanSi.Lib.Utils.HSUILayoutUtil">
            <summary>
            UILayout布局功能类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSUILayoutUtil.m_ModifyLayout(System.String,System.Collections.Generic.List{HuanSi.Lib.Utils.HSUILayoutUtil.UILayoutModifyItem})">
            <summary>
            修改布局
            </summary>
            <param name="_sUILayoutXml">原布局</param>
            <param name="modifyItems">修改信息列表</param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.Utils.MoneyHelper">
            <summary>
            金额大写转换类
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.MoneyHelper.GetCnString(System.String)">
            <summary>
            货币金额中文大写转换方法
            </summary>
            <param name="MoneyString">转化金额
            <para>最大转化金额:9999999999999999.99（16位整数位，2位小数位）</para>
            </param>
            <returns>转换成功则返回非零长字串,否则返回零长字串</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.MoneyHelper.GetEnString(System.String)">
            <summary>
            货币金额英文大写转换方法
            </summary>
            <param name="MoneyString">转换金额
            <para>最大转化金额:999999999999999.99（15位整数位，2位小数位）</para>
            </param>
            <returns>转换成功则返回非零长字串,否则返回零长字串</returns>
        </member>
        <member name="T:HuanSi.Lib.Utils.LocalMachineInfo">
            <summary>
            本机信息(服务端使用此类)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.LocalMachineInfo._4f98a1dc861d885f597a98ad92d4d6c3(System.String)">
            <summary>
            是否是IP4地址
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.LocalMachineInfo.GetMacAddress">
            <summary>
            获取网卡地址
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSProcessUtil.m_Exec(System.String,System.String,System.Boolean,System.Boolean,System.Int32)">
             <summary>
             执行外部程序
             </summary>
             <param name="sProcess">执行的程序，如cmd.exe</param>
             <param name="sArguments">命令行参数</param>
             <param name="bWaitProcessForExit">是否等待程序结束,为true并且bUseShellExecute为false时有返回值，并且会自动关闭调用进程</param>
            <param name="bShowWindows">是否显示调用窗体</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSProcessUtil.m_Exec(System.String,System.String)">
            <summary>
            执行外部程序
            </summary>
            <param name="sProcess">执行的程序，如cmd.exe</param>
            <param name="sArguments">命令行参数</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.String[])">
            <summary>
            调用SVN的Commit弹出窗口,不等待提交完成或取消
            </summary>
            <param name="files">提交的文件列表</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.String,System.String[])">
            <summary>
            调用SVN的Commit弹出窗口,不等待提交完成或取消
            </summary>
            <param name="sRemark">备注</param>
            <param name="files">提交的文件列表</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.Boolean,System.String[])">
            <summary>
            调用SVN的Commit弹出窗口,不等待提交完成或取消
            </summary>
            <param name="bAutoAdd">是否自动新增</param>
            <param name="files">提交的文件列表</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.String,System.Boolean,System.String[])">
            <summary>
            调用SVN的Commit弹出窗口,不等待提交完成或取消
            </summary>
            <param name="sRemark">备注</param>
            <param name="bAutoAdd">是否自动新增</param>
            <param name="files">提交的文件列表</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.Boolean,System.Boolean,System.Int32,System.String[])">
            <summary>
            调用SVN的Commit弹出窗口
            </summary>
            <param name="bWaitForExit">是否等待提交完成</param>
            <param name="bAutoAdd">Commit前是否自动SVN Add</param>
            <param name="files">需要commit的文件列表</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSSVNUtil.m_CommitEx(System.String,System.Boolean,System.Boolean,System.Int32,System.String[])">
            <summary>
            调用SVN的Commit弹出窗口
            </summary>
            <param name="bWaitForExit">是否等待提交完成</param>
            <param name="bAutoAdd">Commit前是否自动SVN Add</param>
            <param name="sRemark">提交时的默认备注信息</param>
            <param name="files">需要commit的文件列表</param>
        </member>
        <member name="T:HuanSi.Lib.Utils.HSEntityClipboard">
            <summary>
            实体剪切板
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSEntityClipboard.m_PasteToEntitySet_RepeatFirstRow(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.HSEntity},System.String,System.String,System.String,System.Boolean)">
            <summary>
            取复制数据的第一行，应用到选中的实体类
            </summary>
            <param name="_entitySet"></param>
            <param name="_sFieldList"></param>
            <param name="_sKeyField"></param>
            <param name="_sNotCopyFields"></param>
            <param name="bOverride"></param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSEntityClipboard.m_CopyFrom(System.Object,System.String[])">
            <summary>
            复制对象属性数据到剪切板中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSEntityClipboard.m_AssignTo(System.Object,System.Boolean,System.String[])">
            <summary>
            粘贴剪切板数据到目标对象中
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSExcelApplication.m_SaveToExcel(System.Data.DataTable,System.String,Microsoft.Office.Interop.Excel.XlFileFormat)">
            <summary>
            
            </summary>
            <param name="aTable"></param>
            <param name="sFileName"></param>
            <param name="style"></param>
            <param name="fileFormat">XlFileFormat是一个枚举，提供很多存储格式，其中xlExcel8是Excel97-2003格式，xlExcel12是Excel2007格式</param>
        </member>
        <member name="F:HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode.m_OverWriteFile">
            <summary>
            覆盖文件
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode.m_OverWriteSheet">
            <summary>
            覆盖sheet
            </summary>
        </member>
        <member name="F:HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode.m_Merge">
            <summary>
            按主键值进行合并（Insert/Update）
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSExcelUtil.m_SaveToFile(System.Data.DataTable,System.String,System.String,HuanSi.Lib.Utils.HSExcelUtil.HSSaveMode,System.String,HuanSi.Lib.Sql.HSSqlGenerator_DataTable.HSFieldNameMode)">
            <summary>
            DataTable导出到Excel
            </summary>
            <param name="aTable">DataTable对象</param>
            <param name="_sFileName">Excel文件路径</param>
            <param name="style">抬头样式</param>
            <param name="fileFormat">文件格式</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSExcelUtil.m_LoadFromFile(HuanSi.Lib.DB.IHSDBManager,System.Data.DataTable,System.String)">
            <summary>
            从EXCEL文件中读取数据填充DataTable
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSExcelUtil.m_LoadFromFile(System.Data.DataTable,System.String,System.String)">
            <summary>
            从EXCEL中加载数据到DataTable
            </summary>
            <param name="aTable">接收数据的Table</param>
            <param name="_sFileName">EXCEL文件名</param>
            <param name="_sSheetName">sheet名，为空则取第一个</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSExcelUtil.m_LoadFromFile(System.Data.DataTable,System.String,System.Int32)">
            <summary>
            从EXCEL文件中读取数据填充DataTable
            </summary>
            <param name="aTable">要填充的DataTable</param>
            <param name="_sFileName">Excel文件名</param>
            <param name="_iSheet">读取第几个Sheet的数据，从1开始</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_OpenFileDir(System.String)">
            <summary>
            打开文件目录
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_Exec(System.String,System.String,System.Boolean)">
            <summary>
            执行命令行
            </summary>
            <param name="sCmdFile">执行文件</param>
            <param name="sArg">参数</param>
            <param name="bCheckFileExist">是否检查文件存在</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_Exec(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
            执行命令行
            </summary>
            <param name="sCmdFile">执行文件</param>
            <param name="sArg">参数</param>
            <param name="bCheckFileExist">是否检查文件存在</param>
            <param name="bWaitForExit">是否等待程序退出</param>
            <param name="bShowWindow">是否显示窗体</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_ExecBat(System.String,System.String,System.Int32)">
            <summary>
            执行BAT
            </summary>
            <param name="command">命令行文本</param>
            <param name="args">BAT参数</param>
            <param name="iDelay">延时几秒执行,当此参数小于0时，按任意键退出，当此参数等于0时执行完成便结束</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_ExecBat(System.String,System.String,System.Int32,System.Boolean,System.Boolean)">
            <summary>
            执行BAT
            </summary>
            <param name="command">命令行文本</param>
            <param name="args">BAT参数</param>
            <param name="iDelay">延时几秒执行,当此参数小于0时，按任意键退出，当此参数等于0时执行完成便结束</param>
            <param name="bWaitForExit">是否等待批处理执行完成再退出</param>
            <param name="bShowWindow">是否显示批处理命令行调用框</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.m_getAbsolutePath(System.String,System.String)">
            <summary>
            把相对路径转换为绝对路径
            </summary>
            <param name="root">当前路径</param>
            <param name="path">相对路径</param>
            <returns>绝对路径</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFileUtil.FileIsTakeUp(System.String)">
            <summary>
            文件是否被占用
            </summary>
            <param name="path">文件路径</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFormUtil.m_GenerateQuickQueryCondition(System.String,System.String,HuanSi.Lib.Enums.HSQuickQueryStyle)">
            <summary>
            生成快速查询条件
            </summary>
            <param name="sQueryNo">快速查询用的单据号</param>
            <param name="style">查找方式</param>
            <returns>查询条件，用于SQL</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFormUtil.m_InitEntitySet(HuanSi.Lib.DB.HSBaseEntitySet,HuanSi.Lib.Container.IHSObjectContainer,System.String,System.Int32)">
            <summary>
            初始化实体类集(设置entityServerManager、fieldValidator、queryCache、executeCache)
            iFormId仅代表唯一标识，窗体启动时传入的是菜单ID，如果菜单ID为0时传入的是formId
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFormUtil.m_InitEntitySet(HuanSi.Lib.DB.HSBaseEntitySet,HuanSi.Lib.Container.IHSObjectContainer,System.String,System.Int64)">
            <summary>
            初始化实体类集(设置entityServerManager、fieldValidator、queryCache、executeCache)
            iFormId仅代表唯一标识，窗体启动时传入的是菜单ID，如果菜单ID为0时传入的是formId
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSFormUtil.m_IsSync(HuanSi.Lib.DB.IHSEntity,HuanSi.Lib.DB.IHSDBManager)">
            <summary>
            判断实体数据是否DB同步
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil.m_Pivot(System.Data.DataTable,System.String,System.String,System.String,System.String,System.Object)">
            <summary>
            纵转横
            </summary>
            <param name="sourceData">源数据</param>
            <param name="sFixedFields">固定列集合</param>
            <param name="sTransposeField">转置列</param>
            <param name="sValueField">值列</param>
            <param name="sFixedTransposeFieldNames">固定(额外)转置列列名</param>
            <param name="aEmptyDefaultValue">空值默认值</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil.m_Pivot(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            纵转横
            </summary>
            <param name="sourceData">源数据</param>
            <param name="sFixedFields">固定列集合</param>
            <param name="sTransposeField">转置列</param>
            <param name="sValueField">值列</param>
            <param name="sFixedTransposeFieldNames">固定(额外)转置列列名</param>
            <param name="aEmptyDefaultValue">空值默认值</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._428a2e1b05bc03c02048e880f10773d9(System.Data.DataRow,System.Data.DataRowView,System.String,System.String)">
            <summary>
            写入转置列内容
            </summary>
            <param name="editRow"></param>
            <param name="rowView"></param>
            <param name="sTransposeField"></param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._cfcc9caa8efe0098fbfc5c872a968613(System.Data.DataRow,System.Data.DataRowView,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            copy固定列的值
            </summary>
            <param name="destRow"></param>
            <param name="sourceRow"></param>
            <param name="sFixedFields"></param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._466e89c5ac491db13c9e2256118ee5ff(System.Data.DataTable,System.Data.DataRowView,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            根据固定列的值获取转置列，如果找不到返回null
            </summary>
            <param name="pivotData"></param>
            <param name="rowView"></param>
            <param name="sFixedFields"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._5f64da1f694ca1b138ef468fbfc800e1(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.String},System.String,System.Collections.Generic.IEnumerable{System.String},System.String,System.Object)">
            <summary>
            构建纵转横的表结构,这里处理了空值的默认值 
            </summary>
            <param name="sourceData"></param>
            <param name="sFixedFields"></param>
            <param name="sTransposeField"></param>
            <param name="sFixedTransposeFieldNames"></param>
            <param name="sValueField"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil.m_UnPivotTo(System.Collections.Generic.IEnumerable{HuanSi.Lib.DB.HSEntity},HuanSi.Lib.DB.HSBaseEntitySet,System.String,System.String,System.String,System.String,System.String,System.String,System.Boolean)">
            <summary>
            双数据集横转纵
            </summary>
            <param name="_sourceEntitySet">来源实体集(横表)</param>
            <param name="_destEntitySet">目标实体集(纵表)</param>
            <param name="_sForeignKey">纵表指向横表的外键字段</param>
            <param name="_sFieldSplitor">字段分隔字符(默认=".",转横字段显示为_sPivotIdField._sPivotNameField)</param>
            <param name="_sValueField">目标数据集 值字段</param>
            <param name="_sPivotIdField">转置ID字段(如iSizeId)</param>
            <param name="_sPivotNameField">转置名称字段,(如sSizeName）</param>
            <param name="_sNullFieldValue">视为空的字段值，如0则表示0为空</param>
            <param name="_bBands">是否Bands模式</param>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil.m_UnPivot(System.Data.DataTable,System.String,System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            横转纵
            </summary>
            <param name="sourceData">源数据</param>
            <param name="sFixedFields">固定列字段</param>
            <param name="sTransposeFieldName">转置列列名</param>
            <param name="sValueFieldName">值列列名</param>
            <param name="bReturnNullValueRow">是否返回NULL值的行</param>
            <param name="aNullValueList">作为是空值处理的值数组</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil.m_UnPivot(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.String},System.String,System.String,System.Boolean,System.Object[])">
            <summary>
            横转纵
            </summary>
            <param name="sourceData">源数据</param>
            <param name="sFixedFields">固定列字段</param>
            <param name="sTransposeFieldName">转置列列名</param>
            <param name="sValueFieldName">值列列名</param>
            <param name="bReturnNullValueRow">是否返回NULL值的行</param>
            <param name="aNullValueList">作为是空值处理的值数组</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._8e1ea3f391b36d7c0635b2ac6f1a1132(System.Object,System.Object[])">
            <summary>
            根据空值列表取得值
            </summary>
            <param name="value">原值</param>
            <param name="aNullValueList">作为空值处理的值列表</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSPivotUtil._5f11aa7dd1799147b2edb72715dcb8b3(System.Data.DataTable,System.Collections.Generic.IEnumerable{System.String},System.String,System.String)">
            <summary>
            获取纵表的结构
            </summary>
            <param name="sourceData"></param>
            <param name="sFixedFields"></param>
            <param name="sTransposeFieldName"></param>
            <param name="sValueFieldName"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSStringCompress.m_CompressBase64(System.String)">
            <summary>
            字符串压缩
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSStringCompress.m_DecompressFromBase64(System.String)">
            <summary>
            字符串解压
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSStringCompress.m_DecompressFromBase64ToBase64(System.String)">
            <summary>
            字符串解压
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSTextFormulaUtil.m_CalcFormula(System.String,System.Object[])">
            <summary>
            计算公式
            </summary>
            <param name="sFormula">sFormula公式</param>
            <param name="objects">objects参数</param>
            <returns>计算结果值</returns>
        </member>
        <member name="M:HuanSi.Lib.Utils.HSStackTrackUtil.m_ParentClassMethod(System.Int32)">
            <summary>
            获取堆栈中的前几层调用方法名
            </summary>
            <param name="iTopLevel">iTopLevel调用层次</param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.Util.HSHardwareInfo">
            <summary>
            硬件信息(CIP客户端使用,从BaseFORM移过来)
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._14b6d87fc74150443cd7873171238411">
            <summary>
            取CPU编号
            </summary>
            <returns></returns> 
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._be7870f1557dae61fd59342eb72fbb4c">
            <summary>
            取主板编号 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._2c9c911479c76f30acc64ab0411812c3">
            <summary>
            取第一块硬盘编号 
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._fc8f53ff272995a564183913e32d848e">
            <summary>
            BIOS SerialNumber
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._a27b9b084200033ff53e1c2c1a5788f4">
            <summary>
            Mac Address
            </summary>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Util.HSHardwareInfo._e921faeccc75cef749c7d8e74c1ba9e8(System.String)">
            <summary>
            加密
            </summary>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="P:HuanSi.Lib.WeiXin.IWeiXinUtil.m_dbmanager">
            <summary>
            dbmanager
            </summary>
        </member>
        <member name="P:HuanSi.Lib.WeiXin.IWeiXinUtil.m_executeCache">
            <summary>
            执行缓存器
            </summary>
        </member>
        <member name="P:HuanSi.Lib.WeiXin.IWeiXinUtil.m_session">
            <summary>
            用户信息
            </summary>
        </member>
        <member name="M:HuanSi.Lib.WeiXin.IWeiXinUtil.m_SendMessage(System.String,System.String,System.Boolean)">
            <summary>
            发送消息
            </summary>
            <param name="_941f8e32522df3daa2d868a803f4d2bb">接收者，手机号，多个逗号串连</param>
            <param name="_7354b79aebab299402016a94d80d91d7">消息内容</param>
            <param name="_412478ead5da3d3fc729bf07a65e5372">送到缓存器</param>
        </member>
        <member name="M:HuanSi.Lib.WeiXin.IWeiXinUtil.m_SendMessage(System.String,System.String,System.DateTime,System.Boolean)">
            <summary>
            定时发送消息
            </summary>
            <param name="_941f8e32522df3daa2d868a803f4d2bb">接收者，手机号，多个逗号串连</param>
            <param name="_7354b79aebab299402016a94d80d91d7">消息内容</param>
            <param name="_eca78f6db485acb163ee13ba98e5fe0c">发送时间</param>
            <param name="_412478ead5da3d3fc729bf07a65e5372">送到缓存器</param>
        </member>
        <member name="T:HuanSi.Lib.Properties.Resources">
            <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Properties.Resources.ResourceManager">
            <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Properties.Resources.Culture">
            <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Properties.Resources.DefaultUserPicture">
            <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Properties.Resources.HuanSi">
            <summary>
              查找类似于 (Icon) 的 System.Drawing.Icon 类型的本地化资源。
            </summary>
        </member>
        <member name="T:HuanSi.Lib.Right.HSUserInfo">
            <summary>
            单个用户信息
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Right.HSUserInfo.m_UserId">
            <summary>
            用户ID
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Right.HSUserInfo.m_UserNo">
            <summary>
            用户编号
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Right.HSUserInfo.m_UserName">
            <summary>
            用户名称
            </summary>
        </member>
        <member name="P:HuanSi.Lib.Right.HSUserInfo.m_DepartmentId">
            <summary>
            所属部门Id
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Right.HSUserInfo.m_Clear">
            <summary>
            清除所有数据
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Right.HSUserInfo.m_Assign(HuanSi.Lib.Right.HSUserInfo)">
            <summary>
            赋值
            </summary>
            <param name="aUserInfo">提供数据的UserInfo对象</param>
        </member>
        <member name="T:HuanSi.Lib.Workflow.IHSWorkflowService">
            <summary>
            工作流引擎接口
            </summary>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_Send(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            送审
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_c74368ae645072742401c7af46e2b02f">送审人</param>
            <param name="_c74368ae645072742401c7af46e2b02f">单据所属部门</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_Approve(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            审批通过
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">审批步骤号</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">审批人</param>
            <param name="_d901d7c5022dcb55f3aca81e480738c9">审批意见</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_Veto(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            否决
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">审批步骤号</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">审批人</param>
            <param name="_d901d7c5022dcb55f3aca81e480738c9">审批意见</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_Reject(System.String,System.Int32,System.Int32,System.Int32,System.String,System.Int32)">
            <summary>
            审批驳回
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">审批步骤号</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">审批人</param>
            <param name="_d901d7c5022dcb55f3aca81e480738c9">审批意见</param>
            <param name="_dab3eb84f29c921b9e340240913e4902">驳回步骤号</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_AdminReject(System.String,System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            管理员驳回
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">审批步骤号</param>
            <param name="_dab3eb84f29c921b9e340240913e4902">驳回到的步骤Iden</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">审批人</param>
            <param name="_d901d7c5022dcb55f3aca81e480738c9">审批意见</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_Cancel(System.String,System.Int32,System.Int32,System.String)">
            <summary>
            取消送审
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_9c16682b0a52d127fbceae662467c467">取消人</param>
            <param name="_4984e56b7b05f191810dd92155a2fb93">取消原因</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_CancelActionInStep(System.String,System.Int32,System.Int32,System.Int32,System.String)">
            <summary>
            撤消步骤内的审批动作（仅限于投票）
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">步骤号</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">取消审核人</param>
            <param name="_4984e56b7b05f191810dd92155a2fb93">取消原因</param>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_CalcRejectStep(System.String,System.Int32,System.Int32,System.Int32)">
            <summary>
            计算驳回后的下一步骤，返回－1表示任意流转，由用户选择驳回步骤
            </summary>
            <param name="_034a780ee342ad37b057960bb9788048">单据号</param>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_6215710527c7a5977106d757d8ef8733">步骤号</param>
            <param name="_719d021a67bb82d5ac1490214c2a1006">驳回人</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.Workflow.IHSWorkflowService.m_SyncAuditFlow(System.Int32,System.Int32,System.String)">
            <summary>
            同步审批流程
            </summary>
            <param name="_25ecc6707b118a89827c76a420caff03">单据类型</param>
            <param name="_996bc1a860a36cf1fb62940c9dc4926c">同步类型,0=所有步骤审核人，1＝所有步骤</param>
            <param name="_034a780ee342ad37b057960bb9788048">单据号，为空时，表示同步所有在审单</param>
            <returns></returns>
        </member>
        <member name="T:HuanSi.Lib.XML.HSXMLFormator">
            <summary>
            XML文本格式化器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLFormator.m_Format(System.String)">
            <summary>
            XML文本格式化
            </summary>
            <param name="_sInputXml">InputXML</param>
            <returns>格式化后的XML</returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLFormator.m_Format(System.Xml.XmlDocument)">
            <summary>
            XML文本格式化
            </summary>
            <param name="_doc">要格式化的xml文档</param>
            <returns>格式化后的XML</returns>
        </member>
        <!-- 对于成员“M:HuanSi.Lib.XML.HSXMLFormator.EncodingXmlValue(System.String)”忽略有格式错误的 XML 注释 -->
        <member name="T:HuanSi.Lib.XML.HSXMLSerializer">
            <summary>
            XML序列化器
            </summary>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_getXMLRoot(System.Type)">
            <summary>
            获取指定类型的XMLRoot
            </summary>
            <param name="aType">类型</param>
            <returns>root</returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Deserialize``1(System.String)">
            <summary>
            从源中反序列化对象
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="sSource">数据源，为文件名或XML流</param>
            <returns>新建的反序列化出来的对象</returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Deserialize``1(``0@,System.String)">
            <summary>
            从源中反序列化对象
            </summary>
            <typeparam name="T">反序列化对象类型</typeparam>
            <param name="aObject">接受反序列化数据的对象</param>
            <param name="sSource">数据源，为文件名或XML流</param>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Serialize(System.String,System.Object,System.Boolean)">
            <summary>
            序列化对象
            </summary>
            <param name="sFileName">保存数据的文件名</param>
            <param name="obj">要序列化的对象</param>
            <param name="bAppend">是否追加到原有文件中</param>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Serialize(System.Object,System.Boolean)">
            <summary>
            序列化对象，序列化后数据转成XML文本
            </summary>
            <param name="obj">要序列化的对象</param>
            <param name="bIncludeXMLHead">是否包含XML根节点</param>
            <returns>包含数据的XML文本</returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_DeleteXmlHead(System.String,System.String)">
            <summary>
            删除XML头信息
            </summary>
            <param name="sXml">XML文本</param>
            <param name="root">root头节点</param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Serialize(System.Object,System.Xml.XmlWriter)">
            <summary>
            序列化对象，序列化后数据转成XML流
            </summary>
            <param name="obj">要序列化的对象</param>
            <param name="writer">包含数据的XML流</param>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_Serialize(System.Object)">
            <summary>
            将对象序列化为XML
            </summary>
            <param name="_obj"></param>
            <returns></returns>
        </member>
        <member name="M:HuanSi.Lib.XML.HSXMLSerializer.m_DeserializeXml``1(System.String)">
            <summary>
            将XML反序列化为对象
            </summary>
            <typeparam name="T"></typeparam>
            <param name="_xml"></param>
            <returns></returns>
        </member>
        <member name="P:HuanSi.CIP.Framework.Config.HSCIPConfig.iDoubleClickFormCloseType">
            <summary>
            0，默认为双击关闭
            1：双击关闭时提示是否关闭
            2:双击时不关闭
            </summary>
        </member>
    </members>
</doc>
